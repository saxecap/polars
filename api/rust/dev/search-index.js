var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","field_by_name","fields_as_series","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_series","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","inner_dtype","interior_mut_metadata","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","struct_fields","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_iter","into_iter","into_iter","new","new","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_str","last","leaf_dtype","len","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","newest","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","oldest","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","physical","precision","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","round","round","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","unpivot","unpivot2","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrefixFields","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","SubPlan","SuffixFields","Sum","Sum","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UnpivotArgs","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_join_suffix_name","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitand","bitand_assign","bitor","bitor","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","buffer","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_schema","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","complement","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_page_size","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","difference","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","empty","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","explode","explode","explode_and_offsets","expr","extend","extend_constant","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_glob_start_idx","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","get_names_and_dtypes","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_nulls","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_file_paths","include_file_paths","include_header","include_header","increment_strong_count","increment_strong_count_in","index","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_all","is_arithmetic","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","overwrite_schema","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","replace_strict","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","sub","sub_assign","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","symmetric_difference","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","to_writer","to_writer","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_project","try_serialize","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","union","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unpivot","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value","value_counts","value_counts","value_name","value_unchecked","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_include_file_path","with_include_file_path","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","write_df_to_file","write_partitioned_dataset","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructOwned","StructType","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[852,"polars::chunked_array::arithmetic"],[880,"polars::chunked_array::builder"],[1141,"polars::chunked_array::builder::list"],[1158,"polars::chunked_array::cast"],[1188,"polars::chunked_array::collect"],[1202,"polars::chunked_array::float"],[1204,"polars::chunked_array::from_iterator_par"],[1208,"polars::chunked_array::iterator"],[1263,"polars::chunked_array::iterator::par"],[1265,"polars::chunked_array::metadata"],[1553,"polars::chunked_array::object"],[1630,"polars::chunked_array::object::builder"],[1653,"polars::chunked_array::object::registry"],[1681,"polars::chunked_array::ops"],[1888,"polars::chunked_array::ops::arity"],[1923,"polars::chunked_array::ops::float_sorted_arg_max"],[1925,"polars::chunked_array::ops::gather"],[1928,"polars::chunked_array::ops::search_sorted"],[1959,"polars::chunked_array::ops::sort"],[1966,"polars::chunked_array::ops::sort::arg_bottom_k"],[1967,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1975,"polars::chunked_array::ops::sort::options"],[1988,"polars::chunked_array::temporal"],[1996,"polars::chunked_array::temporal::conversion"],[1999,"polars::datatypes"],[3406,"polars::datatypes::categorical"],[3423,"polars::datatypes::categorical::revmap"],[3429,"polars::datatypes::categorical::string_cache"],[3448,"polars::docs"],[3450,"polars::error"],[3538,"polars::error::PolarsError"],[3542,"polars::error::constants"],[3545,"polars::frame"],[3808,"polars::frame::explode"],[3838,"polars::frame::group_by"],[4078,"polars::frame::group_by::GroupByMethod"],[4079,"polars::frame::group_by::GroupsProxy"],[4081,"polars::frame::group_by::aggregations"],[4094,"polars::frame::group_by::expr"],[4097,"polars::frame::row"],[4207,"polars::functions"],[4209,"polars::prelude"],[9477,"polars::prelude::AggExpr"],[9484,"polars::prelude::BooleanFunction"],[9487,"polars::prelude::DslPlan"],[9541,"polars::prelude::Expr"],[9576,"polars::prelude::FunctionExpr"],[9598,"polars::prelude::GroupByMethod"],[9599,"polars::prelude::GroupsProxy"],[9601,"polars::prelude::LiteralValue"],[9604,"polars::prelude::PolarsError"],[9608,"polars::prelude::StringFunction"],[9622,"polars::prelude::TemporalFunction"],[9624,"polars::prelude::aggregations"],[9637,"polars::prelude::arity"],[9672,"polars::prelude::array"],[9691,"polars::prelude::binary"],[9707,"polars::prelude::buffer"],[9781,"polars::prelude::buffer::Buffer"],[9784,"polars::prelude::cat"],[9785,"polars::prelude::chunkedarray"],[9852,"polars::prelude::chunkedarray::string"],[9892,"polars::prelude::chunkedarray::string::infer"],[9923,"polars::prelude::cloud"],[9973,"polars::prelude::cloud::options"],[9982,"polars::prelude::datatypes"],[10254,"polars::prelude::datatypes::categorical"],[10271,"polars::prelude::datatypes::categorical::revmap"],[10277,"polars::prelude::datatypes::categorical::string_cache"],[10281,"polars::prelude::datetime"],[10284,"polars::prelude::default_arrays"],[10290,"polars::prelude::dt"],[10342,"polars::prelude::expr"],[10345,"polars::prelude::fixed_size_list"],[10365,"polars::prelude::float_sorted_arg_max"],[10367,"polars::prelude::function_expr"],[10540,"polars::prelude::function_expr::BooleanFunction"],[10543,"polars::prelude::function_expr::FunctionExpr"],[10565,"polars::prelude::function_expr::StringFunction"],[10579,"polars::prelude::function_expr::TemporalFunction"],[10581,"polars::prelude::function_expr::cat"],[10583,"polars::prelude::function_expr::pow"],[10587,"polars::prelude::function_expr::rolling"],[10617,"polars::prelude::function_expr::rolling_by"],[10647,"polars::prelude::gather"],[10650,"polars::prelude::interpolate"],[10654,"polars::prelude::interpolate_by"],[10655,"polars::prelude::mode"],[10656,"polars::prelude::nan_propagating_aggregate"],[10661,"polars::prelude::null"],[10692,"polars::prelude::schema_inference"],[10719,"polars::prelude::search_sorted"],[10725,"polars::prelude::series"],[10747,"polars::prelude::slice"],[10750,"polars::prelude::sort"],[10757,"polars::prelude::sort::arg_bottom_k"],[10758,"polars::prelude::sort::arg_sort_multiple"],[10766,"polars::prelude::sort::options"],[10779,"polars::prelude::strings"],[10833,"polars::prelude::udf"],[10839,"polars::prelude::utf8"],[10843,"polars::series"],[11277,"polars::series::amortized_iter"],[11301,"polars::series::arithmetic"],[11322,"polars::series::arithmetic::checked"],[11328,"polars::series::ops"],[11356,"dyn_clone::sealed"],[11357,"polars_core::datatypes"],[11358,"polars_core::chunked_array"],[11359,"polars_error"],[11360,"core::result"],[11361,"polars_core::series"],[11362,"core::ops::function"],[11363,"num_traits"],[11364,"num_traits::cast"],[11365,"polars_core::series::arithmetic::borrowed"],[11366,"polars_core::frame::group_by::proxy"],[11367,"polars_core::chunked_array::object"],[11368,"core::option"],[11369,"polars_arrow::array"],[11370,"alloc::boxed"],[11371,"core::iter::traits::iterator"],[11372,"polars_core::chunked_array::list::iterator"],[11373,"core::marker"],[11374,"alloc::borrow"],[11375,"polars_core::series::amortized_iter"],[11376,"polars_core::datatypes::dtype"],[11377,"alloc::string"],[11378,"polars_core::chunked_array::ops::sort::options"],[11379,"polars_core::chunked_array::cast"],[11380,"polars_core::series::arithmetic::borrowed::checked"],[11381,"core::slice::iter"],[11382,"core::iter::adapters::map"],[11383,"alloc::vec"],[11384,"polars_core::chunked_array::metadata"],[11385,"core::iter::traits::double_ended"],[11386,"polars_arrow::offset"],[11387,"core::fmt"],[11388,"core::iter::traits::collect"],[11389,"polars_utils::iter::fallible"],[11390,"core::convert"],[11391,"polars_core::chunked_array::from_iterator"],[11392,"polars_arrow::bitmap::immutable"],[11393,"core::borrow"],[11394,"rayon::iter"],[11395,"polars_arrow::pushable"],[11396,"polars_arrow::trusted_len"],[11397,"polars_core::datatypes::any_value"],[11398,"polars_arrow::array::binary"],[11399,"std::sync::rwlock"],[11400,"polars_core::chunked_array::logical"],[11401,"polars_core::datatypes::time_unit"],[11402,"core::iter::traits::exact_size"],[11403,"polars_core::series::series_trait"],[11404,"polars_core::chunked_array::iterator"],[11405,"polars_core::scalar"],[11406,"polars_core::chunked_array::metadata::guard"],[11407,"polars_core::chunked_array::metadata::interior_mutable"],[11408,"alloc::sync"],[11409,"polars_core::chunked_array::metadata::md_trait"],[11410,"core::ops::range"],[11411,"polars_core::datatypes::field"],[11412,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11413,"polars_core::chunked_array::ops::rolling_window"],[11414,"polars_ops::chunked_array::scatter"],[11415,"polars_utils::index"],[11416,"ahash::random_state"],[11417,"polars_utils::hashing"],[11418,"ndarray"],[11419,"ndarray::dimension::dim"],[11420,"ndarray::data_repr"],[11421,"either"],[11422,"core::any"],[11423,"polars_core::frame"],[11424,"polars_core::chunked_array::arithmetic::numeric"],[11425,"polars_core::chunked_array::builder::list::anonymous"],[11426,"polars_core::chunked_array::builder::list::boolean"],[11427,"polars_core::chunked_array::builder::list::primitive"],[11428,"polars_core::chunked_array::builder::list"],[11429,"polars_core::chunked_array::builder"],[11430,"polars_core::chunked_array::builder::list::binary"],[11431,"polars_core::chunked_array::builder::list::null"],[11432,"polars_core::chunked_array::builder::string"],[11433,"polars_arrow::array::binview"],[11434,"polars_core::chunked_array::builder::boolean"],[11435,"polars_core::chunked_array::builder::null"],[11436,"polars_core::chunked_array::builder::primitive"],[11437,"core::clone"],[11438,"polars_core::series::implementations::null"],[11439,"core::hash"],[11440,"polars_core::chunked_array::collect"],[11441,"polars_core::chunked_array::float"],[11442,"polars_core::chunked_array::from_iterator_par"],[11443,"polars_arrow::array::boolean"],[11444,"polars_arrow::array::fixed_size_list"],[11445,"polars_core::chunked_array::metadata::env"],[11446,"polars_core::chunked_array::metadata::collect"],[11447,"bitflags::iter"],[11448,"std::fs"],[11449,"std::sync::mutex"],[11450,"polars_arrow::datatypes"],[11451,"polars_arrow::bitmap::utils::iterator"],[11452,"polars_arrow::bitmap::utils::zip_validity"],[11453,"polars_core::chunked_array::object::builder"],[11454,"polars_core::chunked_array::object::registry"],[11455,"polars_core::chunked_array::ops"],[11456,"polars_arrow::legacy::array::slice"],[11457,"polars_core::chunked_array::ops::arity"],[11458,"polars_arrow::array::static_array"],[11459,"core::error"],[11460,"polars_arrow::array::primitive"],[11461,"polars_core::chunked_array::ops::search_sorted"],[11462,"polars_core::utils"],[11463,"polars_row::row"],[11464,"chrono::naive::datetime"],[11465,"chrono_tz::timezones"],[11466,"chrono::naive::time"],[11467,"polars_core::chunked_array::logical::categorical"],[11468,"polars_core::chunked_array::logical::categorical::builder"],[11469,"polars_arrow::array::static_array_collect"],[11470,"bytemuck::zeroable"],[11471,"polars_core::chunked_array::logical::categorical::revmap"],[11472,"polars_core::chunked_array::logical::categorical::merge"],[11473,"polars_arrow::datatypes::physical_type"],[11474,"polars_arrow::types"],[11475,"chrono::time_delta"],[11476,"chrono::naive::date"],[11477,"smartstring::config"],[11478,"smartstring"],[11479,"polars_core::datatypes::into_scalar"],[11480,"core::cmp"],[11481,"polars_core::chunked_array::logical::categorical::string_cache"],[11482,"polars_error::warning"],[11483,"simdutf8::basic"],[11484,"alloc::collections"],[11485,"regex::error"],[11486,"std::io::error"],[11487,"planus::errors"],[11488,"polars_parquet::parquet::error"],[11489,"polars_core::schema"],[11490,"polars_core::series::from"],[11491,"hashbrown::set"],[11492,"polars_arrow::datatypes::schema"],[11493,"polars_core::frame::row"],[11494,"polars_core::frame::group_by"],[11495,"polars_time::group_by::dynamic"],[11496,"polars_lazy::frame"],[11497,"polars_core::chunked_array::ndarray"],[11498,"polars_arrow::array::struct_"],[11499,"polars_arrow::record_batch"],[11500,"polars_core::frame::explode"],[11501,"polars_time::windows::duration"],[11502,"polars_utils::idx_vec"],[11503,"rayon::iter::plumbing"],[11504,"polars_plan::plans::aexpr"],[11505,"polars_core::frame::group_by::into_groups"],[11506,"core::iter::adapters::copied"],[11507,"core::iter::adapters::zip"],[11508,"polars_utils::float"],[11509,"polars_arrow::types::native"],[11510,"polars_core::frame::group_by::aggregations::agg_list"],[11511,"polars_core::frame::group_by::aggregations"],[11512,"polars_core::frame::group_by::expr"],[11513,"polars_core::frame::row::av_buffer"],[11514,"polars_utils::arena"],[11515,"polars_plan::plans::ir"],[11516,"polars_ops::frame::join::hash_join"],[11517,"polars_ops::frame::join::args"],[11518,"polars_ops::chunked_array::gather::chunked"],[11519,"polars_ops::frame"],[11520,"polars_io::csv::read::reader"],[11521,"polars_io::predicates"],[11522,"polars_io::mmap"],[11523,"polars_plan::dsl::expr"],[11524,"polars_plan::frame::opt_state"],[11525,"core::alloc"],[11526,"polars_plan::plans::anonymous_scan"],[11527,"polars_lazy::scan::anonymous_scan"],[11528,"polars_plan::dsl::expr_dyn_fn"],[11529,"polars_plan::plans::visitor"],[11530,"polars_plan::dsl::function_expr"],[11531,"polars_ops::series::ops::arg_min_max"],[11532,"polars_plan::dsl::array"],[11533,"polars_plan::dsl::list"],[11534,"polars_plan::dsl::function_expr::schema"],[11535,"polars_io::ipc::ipc_stream"],[11536,"std::io"],[11537,"polars_ops::chunked_array::binary"],[11538,"polars_time::chunkedarray::string"],[11539,"std::os::fd::owned"],[11540,"polars_ops::chunked_array::list"],[11541,"std::os::fd::raw"],[11542,"polars_ops::series::ops"],[11543,"polars_ops::chunked_array::strings"],[11544,"core::mem::maybe_uninit"],[11545,"polars_ops::chunked_array::strings::namespace"],[11546,"polars_io::csv::read::read_impl::batched"],[11547,"polars_io::csv::write::writer"],[11548,"polars_io::ipc::write"],[11549,"polars_io::parquet::read::reader"],[11550,"polars_io::parquet::read::read_impl"],[11551,"polars_io::parquet::write::writer"],[11552,"polars_io::parquet::write::batched_writer"],[11553,"polars_plan::dsl::binary"],[11554,"polars_plan::dsl::udf"],[11555,"polars_lazy::frame::exitable"],[11556,"hashbrown::map"],[11557,"polars_plan::dsl::cat"],[11558,"polars_ops::series::ops::round"],[11559,"polars_time::series"],[11560,"polars_lazy::scan::csv"],[11561,"polars_lazy::scan::ipc"],[11562,"polars_lazy::scan::ndjson"],[11563,"polars_lazy::scan::parquet"],[11564,"polars_time::chunkedarray::rolling_window"],[11565,"polars_time::windows::bounds"],[11566,"polars_time::windows::group_by"],[11567,"polars_time::windows::window"],[11568,"polars_io::csv::read::options"],[11569,"polars_io::csv::write::options"],[11570,"polars_io::ipc::ipc_file"],[11571,"polars_ops::frame::join::asof"],[11572,"polars_io::json"],[11573,"polars_ops::series::ops::interpolation::interpolate"],[11574,"polars_io::parquet::read::options"],[11575,"polars_ops::series::ops::is_between"],[11576,"polars_ops::series::ops::rank"],[11577,"polars_io::parquet::write::options"],[11578,"polars_plan::plans"],[11579,"polars_plan::dsl::arity"],[11580,"polars_plan::dsl::function_expr::boolean"],[11581,"polars_plan::dsl::function_expr::cat"],[11582,"polars_plan::dsl::function_expr::datetime"],[11583,"polars_plan::dsl::function_expr::pow"],[11584,"polars_plan::dsl::function_expr::strings"],[11585,"polars_plan::dsl::function_expr::struct_"],[11586,"polars_plan::dsl::functions::temporal"],[11587,"polars_plan::dsl::options"],[11588,"polars_plan::plans::lit"],[11589,"polars_parquet::arrow::write"],[11590,"polars_plan::plans::options"],[11591,"polars_parquet::parquet::metadata::file_metadata"],[11592,"polars_arrow::legacy::kernels::rolling"],[11593,"polars_arrow::legacy::kernels::time"],[11594,"polars_lazy::scan::file_list_reader"],[11595,"polars_io::cloud::options"],[11596,"polars_parquet::parquet::metadata::column_order"],[11597,"polars_ops::chunked_array::binary::namespace"],[11598,"polars_io::ndjson::core"],[11599,"std::path"],[11600,"polars_ops::frame::join::cross_join"],[11601,"polars_lazy::dsl::eval"],[11602,"polars_time::chunkedarray::date"],[11603,"polars_time::chunkedarray::datetime"],[11604,"polars_time::chunkedarray::duration"],[11605,"core::default"],[11606,"core::ffi::c_str"],[11607,"polars_parquet::parquet::metadata::row_metadata"],[11608,"polars_core::series::ops"],[11609,"polars_plan::dsl::dt"],[11610,"polars_ops::series::ops::various"],[11611,"polars_arrow::scalar"],[11612,"polars_lazy::dsl::list"],[11613,"crossterm::command"],[11614,"polars_plan::dsl::struct_"],[11615,"polars_io::shared"],[11616,"polars_plan::plans::apply"],[11617,"polars_plan::dsl::function_expr::binary"],[11618,"polars_plan::dsl::function_expr::list"],[11619,"polars_plan::dsl::function_expr::range"],[11620,"polars_plan::dsl::function_expr::array"],[11621,"std::ffi::os_str"],[11622,"alloc::ffi::c_str"],[11623,"polars_parquet::arrow::read::statistics"],[11624,"polars_arrow::array::growable::structure"],[11625,"polars_arrow::array::struct_::mutable"],[11626,"polars_arrow::legacy::array::default_arrays"],[11627,"polars_arrow::buffer::immutable"],[11628,"polars_arrow::array::list"],[11629,"polars_core::named_from"],[11630,"polars_ops::frame::join"],[11631,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11632,"polars_time::chunkedarray::time"],[11633,"core::num::nonzero"],[11634,"parquet_format_safe::parquet_format"],[11635,"polars_arrow::array::struct_::iterator"],[11636,"polars_ops::frame::join::asof::groups"],[11637,"polars_ops::chunked_array::list::namespace"],[11638,"polars_plan::dsl::name"],[11639,"polars_io::options"],[11640,"polars_core::chunked_array::ops::aggregate"],[11641,"polars_core::chunked_array::ops::aggregate::quantile"],[11642,"polars_arrow::legacy::index"],[11643,"polars_ops::chunked_array::strings::split"],[11644,"core::pin"],[11645,"core::io::borrowed_buf"],[11646,"parquet_format_safe::thrift::varint::decode"],[11647,"polars_time::chunkedarray::rolling_window::dispatch"],[11648,"polars_time::round"],[11649,"polars_parquet::parquet::metadata::schema_descriptor"],[11650,"polars_core::chunked_array::ops::aggregate::var"],[11651,"polars_plan::dsl::string"],[11652,"polars_ops::series::ops::to_dummies"],[11653,"polars_time::truncate"],[11654,"polars_io::csv::read::schema_inference"],[11655,"polars_time::upsample"],[11656,"polars_core::hashing::vector_hasher"],[11657,"alloc::collections::btree::map"],[11658,"polars_ops::chunked_array::array::namespace"],[11659,"polars_ops::chunked_array::array"],[11660,"polars_io::csv::read::buffer"],[11661,"polars_time::chunkedarray::string::patterns"],[11662,"polars_time::chunkedarray::string::infer"],[11663,"polars_arrow::legacy::array::fixed_size_list"],[11664,"polars_plan::dsl::function_expr::rolling"],[11665,"polars_plan::dsl::function_expr::rolling_by"],[11666,"polars_arrow::legacy::array::null"],[11667,"polars_arrow::bitmap::mutable"],[11668,"polars_arrow::array::utf8"],[11669,"polars_core::series::iterator"],[11670,"alloc::rc"],[11671,"polars_core"],[11672,"polars_core::chunked_array::struct_"],[11673,"polars_core::chunked_array::iterator::par"],[11674,"polars_core::chunked_array::object::extension"],[11675,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11676,"polars_core::chunked_array::ops::gather"],[11677,"polars_core::chunked_array::ops::sort"],[11678,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11679,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11680,"polars_core::chunked_array::temporal"],[11681,"polars_core::chunked_array::temporal::conversion"],[11682,"polars_core::chunked_array::temporal::time"],[11683,"polars_core::chunked_array::logical::date"],[11684,"polars_core::chunked_array::logical::datetime"],[11685,"polars_core::chunked_array::logical::decimal"],[11686,"polars_core::chunked_array::logical::duration"],[11687,"polars_core::datatypes::aliases"],[11688,"polars_utils::aliases"],[11689,"polars_core::chunked_array::logical::time"],[11690,"polars_error::constants"],[11691,"polars_core::functions"],[11692,"polars_core::frame::horizontal"],[11693,"polars_io::utils::other"],[11694,"polars_io::parquet::metadata"],[11695,"polars_arrow::legacy::prelude"],[11696,"polars_arrow::legacy::array"],[11697,"polars_io::path_utils"],[11698,"polars_ops::series::ops::rolling"],[11699,"polars_parquet::parquet::write"],[11700,"polars_io::utils"],[11701,"polars_ops::frame::join::general"],[11702,"polars_ops::series::ops::abs"],[11703,"polars_plan::dsl::functions::selectors"],[11704,"polars_plan::dsl::functions::horizontal"],[11705,"polars_plan::dsl::functions::arity"],[11706,"polars_plan::dsl"],[11707,"polars_plan::dsl::functions::range"],[11708,"polars_plan::dsl::functions::index"],[11709,"polars_ops::chunked_array"],[11710,"polars_plan::dsl::functions::coerce"],[11711,"polars_plan::dsl::functions::syntactic_sugar"],[11712,"polars_time::base_utc_offset"],[11713,"polars_io::csv::read"],[11714,"polars_time"],[11715,"polars_ops::series::ops::clip"],[11716,"polars_io"],[11717,"polars_ops::series::ops::horizontal"],[11718,"polars_lazy::dsl::functions"],[11719,"polars_plan::dsl::functions::concat"],[11720,"polars_ops::series::ops::index"],[11721,"polars_io::csv::read::parser"],[11722,"polars_ops::series::ops::cum_agg"],[11723,"polars_ops::series::ops::diff"],[11724,"polars_time::dst_offset"],[11725,"polars_ops::series::ops::floor_divide"],[11726,"polars_ops::chunked_array::strings::concat"],[11727,"polars_ops::chunked_array::datetime::replace_time_zone"],[11728,"polars_time::date_range"],[11729,"polars_ops::series::ops::interpolation"],[11730,"polars_ops::series::ops::interpolation::interpolate_by"],[11731,"polars_io::csv::read::utils"],[11732,"polars_ops::series::ops::is_first_distinct"],[11733,"polars_ops::series::ops::is_in"],[11734,"polars_ops::series::ops::is_last_distinct"],[11735,"polars_io::parquet::read::utils"],[11736,"polars_ops::series::ops::negate"],[11737,"polars_ops::series::ops::not"],[11738,"polars_ops::series::ops::int_range"],[11739,"polars_plan::dsl::functions::repeat"],[11740,"polars_ops::chunked_array::repeat_by"],[11741,"polars_ops::series::ops::replace"],[11742,"polars_ops::chunked_array::strings::strip"],[11743,"polars_io::partition"],[11744,"polars_time::chunkedarray"],[11745,"polars_io::cloud"],[11746,"polars_ops::chunked_array::mode"],[11747,"polars_ops::chunked_array::nan_propagating_aggregate"],[11748,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}````````{{{f{c}}h}b{}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{l{Aj}}{l{Aj}}}}{{{l{An}}{l{An}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{An}}}}{f{Bj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{Ah}}}}{f{Bn}}}Ab}{{{f{{l{C`}}}}{f{Bn}}}Ab}{{{f{{l{j}}}}{f{Bn}}}Ab}{{{f{{l{c}}}}{f{Bn}}}AbAl}{{{f{{l{An}}}}{f{Bn}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{Bn}}}AbCd}{{{f{{l{Aj}}}}{f{Bn}}}Ab}{{{f{{l{Bd}}}}{f{Bn}}}Ab}{{{f{{l{Aj}}}}}d}{{{f{{l{Aj}}}}}{{Cf{d}}}}{{{f{{l{Ah}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{C`}}}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{Ah}}}}{f{Bj}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}{{{f{{l{C`}}}}{f{Bj}}}{{D`{{`{{Cn{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}}}}}54{{{f{Db{l{c}}}}{f{{l{c}}}}}b{{Dh{}{{Dd{Df}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{{Cf{Ab}}}{{Ad{{Cf{Ab}}}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dj{Cf}{{Ad{Cf}}}}Dl}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{Cf{{f{c}}}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dj{{Cf{{f{{Bh{Bf}}}}}}}{{Ad{{Cf{{Dn{{Bh{Bf}}}}}}}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Dj{{Cf{{f{Bj}}}}}{{Ad{{Cf{{Dn{Bj}}}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{C`}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Cf{E`}}}{{Ad{{Cf{c}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{l{C`}}}{{Af{E`}{{Ad{Ab}}}}}}{{{f{{l{Eb}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ed}}}}c}Ab{{Dj{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{}{{Af{Cf}{{Ad{{Cf{e}}}}}}}Dh}{{{l{c}}e}{{l{c}}}Al{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{Bd}}}}{f{Dj}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{Dj}}}{{l{c}}}Al}{{{f{{l{An}}}}{f{Dj}}}{{l{An}}}}{{{f{{l{Aj}}}}{f{Dj}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{Dj}}}{{l{e}}}AlDh}{{{f{{l{An}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Aj}}}}{f{Dj}}}{{l{c}}}Dh}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Af{{f{{Bh{Bf}}}}}{{Ad{{f{{Bh{Bf}}}}}}}}}}{{{f{Db{l{c}}}}e}bAl{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{Bj}}}{{Ad{{f{Bj}}}}}}}}{{{f{{l{c}}}}Efg}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{Bj}}{f{DbEh}}}}}}{{{f{{l{C`}}}}{f{Dj}}}{{A`{{l{C`}}n}}}}{{{f{{l{Ah}}}}{f{Dj}}}{{A`{{l{Ah}}n}}}}{{{f{{l{{Cb{c}}}}}}g{f{Db{Bh{e}}}}}bCd{}{{Dj{{Cf{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{c}}}}g{f{Db{Bh{e}}}}}bAl{}{{Dj{Cf{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{{f{Bj}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bd}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{{f{{Bh{Bf}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Aj}}}}e{f{Db{Bh{c}}}}}b{}{{Dj{{Cf{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Aj}}}}c}{{l{Aj}}}{{Dj{d}{{Ad{d}}}}Dl}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dj{{f{{Bh{Bf}}}}}{{Ad{{Dn{{Bh{Bf}}}}}}}}Dl}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dj{Ab}{{Ad{Ab}}}}Dl}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dj{{f{c}}}{{Ad{c}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dj{}{{Ad{}}}}Dl}}{{{f{{l{An}}}}c}{{l{An}}}{{Dj{{f{Bj}}}{{Ad{{Dn{Bj}}}}}}Dl}}{{{f{{l{c}}}}g}{{l{i}}}Dh{}{{Af{}{{Ad{e}}}}}Dh}{{{f{{l{Ej}}}}El}{{l{En}}}}{{{f{{l{j}}}}El}{{l{En}}}}{{{f{{l{Bd}}}}El}{{l{En}}}}{{{f{{l{Aj}}}}El}{{l{En}}}}{{{f{{l{c}}}}El}{{l{En}}}Al}{{{f{{l{An}}}}El}{{l{En}}}}{{{f{{l{Bd}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}}{{{f{{l{Ej}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}}{{{f{{l{Aj}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}}{{{f{{l{An}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}}{{{f{{l{c}}}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}Al}{{{f{{l{An}}}}}{{A`{{l{En}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{En}}n}}}Cd}{{{f{{l{c}}}}}{{A`{{l{En}}n}}}Al}{{{f{{l{Bd}}}}}{{A`{{l{En}}n}}}}{{{f{{l{Aj}}}}}{{A`{{l{En}}n}}}}`{{{f{{l{C`}}}}}{{f{{l{C`}}}}}}{{{f{{l{Bd}}}}}{{f{{l{Bd}}}}}}{{{f{{l{An}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dh}{{{f{{l{c}}}}}{{f{Ef}}}Dh}{{{f{{l{An}}}}}{{f{{l{An}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DhDh{{Af{{Cf{E`}}CfCf}{{Ad{{Cf{Ab}}}}}}}}{{{l{Aj}}{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fb}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}}021120{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0``{{{f{{l{j}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dj{}{{Ad{}}}}Dl}Al}{{{f{{l{Ah}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{Ej}}}}{f{Ef}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ef}}}{{A`{Abn}}}Al}{{{f{{l{j}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{C`}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ef}}Fd}{{A`{Abn}}}Al}{{{f{{l{An}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{Ej}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{Ah}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Ff}{{{f{{l{c}}}}e}{{A`{Abn}}}FfBb}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{Fh}}}}}}}Dh}{{{f{{l{c}}}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fh}}}}}}}Dh}{{{f{{l{c}}}}}{{f{{G`{{Cl{Cj}}}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{G`{{Cl{Cj}}}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Dh}0{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Db{l{c}}}}}b{DhAl}}`{{{f{{l{c}}}}}{{A`{{f{Bh}}n}}}Al}{{{f{Db{l{c}}}}{f{{l{c}}}}Gb}bDh}{{{f{Db{l{c}}}}{f{{l{e}}}}Gb}bDhDh}{{{f{{l{c}}}}}{{`{Gd}}}Al}{{}{{l{c}}}Dh}{Fh{{f{c}}}{}}0{Fh{{f{Dbc}}}{}}0{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}}bDh}{Fhb}0{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Ef}}}Dh}{{{f{{l{c}}}}e}{{l{Aj}}}AlBb}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Aj}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Aj}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Aj}}}}{{{f{{l{An}}}}{f{Bj}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Al}1568790432{{{f{{l{Ah}}}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}{{{f{{l{C`}}}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}{{{f{Db{l{c}}}}{f{{l{c}}}}}bAl}{{{f{{l{j}}}}{f{Bj}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{G`{Ab}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{Aj}}}}d}{{A`{{l{Aj}}n}}}}{{{f{{l{An}}}}{f{{l{Aj}}}}}{{A`{{l{An}}n}}}}{{{f{{l{{Cb{c}}}}}}{f{{l{Aj}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bd}}}}{f{{l{Aj}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}}{{A`{{l{c}}n}}}{{Dh{}{{Gl{Df}}{Gn{Df}}}}}}{{{f{{l{c}}}}}{{Cf{Fh}}}Dh}`{{{f{{l{Bd}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{Aj}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{C`}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{c}}}}{f{DbH`}}}{{A`{bHb}}}Al}{{{f{{l{An}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{{Cb{c}}}}}}{f{DbH`}}}{{A`{bHb}}}Cd}{{{f{{l{Ah}}}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{l{c}}}}e}bDh{{Af{Cf}}}}{{{f{{l{Ah}}}}c}b{{Af{{Cf{E`}}}}}}{{{f{{l{C`}}}}c}b{{Af{{Cf{E`}}}}}}{cc{}}{c{{l{e}}}Cj{{Dh{}{{Hd{c}}}}}}1{{{f{Bj}}c}{{l{e}}}Hf{{Dh{}{{Hd{}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}{{Dh{}{{Hd{}}}}Dh}Hf}{{{f{Bj}}{G`{{Cl{Cj}}}}}{{l{c}}}Dh}{{{f{Bj}}{G`{{Cl{Cj}}}}Ef}{{l{c}}}Dh}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{c{{l{Aj}}}{{Hf{}{{Ch{d}}}}}}{e{{l{Bd}}}{{Hj{{Bh{Bf}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{c{{l{Aj}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{e{{l{Bd}}}{{Hl{{Bh{Bf}}}}}{{Hf{}{{Ch{c}}}}}}{c{{l{e}}}{{Hf{}{{Ch{Cf}}}}}Al}{c{{l{Ah}}}{{Hf{}{{Ch{{Cf{Ab}}}}}}}}{e{{l{An}}}{{Hl{Bj}}}{{Hf{}{{Ch{c}}}}}}{c{{l{e}}}{{Hf{}{{Ch{{Gj{G`{Cf{Hn}}}}}}}}}Al}{c{{l{Ah}}}{{Hf{}{{Ch{{Cf{{Cl{Cj}}}}}}}}}}{e{{l{Ah}}}{{I`{Ab}}}{{Hf{}{{Ch{c}}}}}}{e{{l{An}}}{{Hj{Bj}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{e{{l{{Cb{c}}}}}Cd{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{Cn{}{{Ch{{Cf{d}}}}}}}}{{{f{Bj}}c}{{l{e}}}{{Cn{}{{Ch{Cf}}}}}Al}{{{f{Bj}}e}{{l{An}}}{{Hj{Bj}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}{{l{Bd}}}{{Hj{{Bh{Bf}}}}}{{Cn{}{{Ch{{Cf{c}}}}}}}}6{c{{l{Aj}}}{{Hf{}{{Ch{d}}}}}}={e{{l{Ej}}}{{Hl{{Bh{Bf}}}}}{{Hf{}{{Ch{c}}}}}}7<=?9{e{{l{Ej}}}{{Hj{{Bh{Bf}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{c{{l{Aj}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{e{{l{Bd}}}{{Hj{{Bh{Bf}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{Cn{}{{Ch{d}}}}}}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}c}{{l{e}}}{{Cn{}{{Ch{}}}}}Al}{{{f{Bj}}e}{{l{Bd}}}{{Hj{{Bh{Bf}}}}}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}e}{{l{An}}}{{Hj{Bj}}}{{Cn{}{{Ch{c}}}}}}`{e{{l{An}}}{{Hj{Bj}}IbId}{{If{}{{Ch{{Cf{c}}}}}}}}{e{{l{Bd}}}{{Hj{{Bh{Bf}}}}IbId}{{If{}{{Ch{{Cf{c}}}}}}}}{e{{l{An}}}{{Hl{Bj}}IbIdIh}{{If{}{{Ch{c}}}}}}{c{{l{Ah}}}{{If{}{{Ch{{Cf{Ab}}}}}}}}{c{{l{e}}}{{If{}{{Ch{Cf}}}}}Al}{c{{l{Aj}}}{{If{}{{Ch{d}}}}}}{c{{l{Aj}}}{{If{}{{Ch{{Cf{d}}}}}}}}{e{{l{Bd}}}{{Hl{{Bh{Bf}}}}IbIdIh}{{If{}{{Ch{c}}}}}}{{c{f{Bj}}Ef}{{l{Ah}}}{{If{}{{Ch{{Cf{Ab}}}}}}}}{{{f{Bj}}{f{{Bh{Ab}}}}}{{A`{{l{j}}n}}}}{{{f{Bj}}{f{{Bh{d}}}}}{{l{Aj}}}}{{{f{Bj}}{f{{Bh{c}}}}}{{l{An}}}{{Hj{Bj}}}}{{{f{Bj}}{f{{Bh{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{f{{Bh{c}}}}}{{l{Bd}}}{{Hj{{Bh{Bf}}}}}}{{{f{Bj}}{f{Bh}}}{{l{c}}}Al}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}{{l{An}}}{{Hj{Bj}}}}{{{f{Bj}}{f{{Bh{Cf}}}}}{{l{c}}}Al}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}{{l{Bd}}}{{Hj{{Bh{Bf}}}}}}{{{f{Bj}}{f{{Bh{{Cf{d}}}}}}}{{l{Aj}}}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}{{l{{Cb{c}}}}}Cd}{c{{l{Aj}}}{{Ij{}{{Ch{{Cf{d}}}}}}}}{c{{l{e}}}{{Ij{}{{Ch{Cf}}}}}Al}{{{f{Bj}}G`}{{l{c}}}Al}{{{f{Bj}}G`{Cf{Hn}}}{{l{c}}}Al}{{{f{Bj}}Fh}{{l{c}}}Al}{{{f{Bj}}{f{{Bh{Bf}}}}Fh}{{l{Ej}}}}{{{f{Bj}}{f{Ab}}Fh}{{l{Ah}}}}{{{f{Bj}}dFh}{{l{Aj}}}}{{{f{Bj}}cFh}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{f{Bj}}Fh}{{l{An}}}}{{{f{Bj}}{f{{Bh{Bf}}}}Fh}{{l{Bd}}}}{{{f{Bj}}{f{Ab}}Fh}{{l{C`}}}}{{{f{Bj}}Fh}{{l{Ej}}}}{{{f{Bj}}Fh}{{l{C`}}}}{{{f{Bj}}Fh}{{l{Bd}}}}{{{f{Bj}}Fh}{{l{j}}}};{{{f{Bj}}Fh}{{l{Ah}}}}{{{f{Bj}}Fh}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}Fh}{{l{An}}}}{{{f{Bj}}Fh}{{l{Aj}}}}{{{f{{l{c}}}}Fh}{{l{c}}}Dh}{{{f{Bj}}Fh{f{Ef}}Fh}{{l{C`}}}}{{{f{Bj}}Fh{f{Ef}}}{{l{Ah}}}}{{{f{{l{c}}}}Fh}CfDh}{{{f{{l{Bd}}}}Fh}{{A`{Iln}}}}{{{f{{l{C`}}}}Fh}{{A`{Iln}}}}{{{f{{l{Ej}}}}Fh}{{A`{Iln}}}}{{{f{{l{Aj}}}}Fh}{{A`{Iln}}}}{{{f{{l{j}}}}Fh}{{A`{Iln}}}}{{{f{{l{{Cb{c}}}}}}Fh}{{A`{Iln}}}Cd}{{{f{{l{Ah}}}}Fh}{{A`{Iln}}}}{{{f{{l{An}}}}Fh}{{A`{Iln}}}}{{{f{{l{c}}}}Fh}{{A`{Iln}}}Al}{{{f{{l{Aj}}}}Fh}Il}{{{f{{l{Ej}}}}Fh}Il}{{{f{{l{C`}}}}Fh}Il}{{{f{{l{c}}}}Fh}IlAl}{{{f{{l{Bd}}}}Fh}Il}{{{f{{l{j}}}}Fh}Il}{{{f{{l{An}}}}Fh}Il}{{{f{{l{{Cb{c}}}}}}Fh}IlCd}{{{f{{l{Ah}}}}Fh}Il}{{{f{{l{C`}}}}Fh}{{Cf{Ab}}}}{{{f{{l{Ah}}}}Fh}{{Cf{Ab}}}}{{{f{{l{c}}}}}{{Cf{In}}}Dh}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}J`Dh}{{{f{{l{Ah}}}}}Ab}{{{f{{l{C`}}}}}Ab}{{{f{{l{c}}}}}CfDh}0{{{f{{l{{Cb{c}}}}}}Fh}{{Cf{{f{Jb}}}}}Cd}0{{{f{{l{j}}}}El}{{A`{{l{Ej}}n}}}}{{{f{{l{j}}}}El}{{A`{{Jd{Gf}}n}}}}{{{f{{l{c}}}}Fh}CfDh}{{{f{{l{Ej}}}}}Fh}{{{f{{l{Ah}}}}}Fh}{{{f{{l{An}}}}}Fh}{{{f{{l{C`}}}}}Fh}{{{f{{l{Ah}}}}dd}{{A`{Bnn}}}}{{{f{{l{Ej}}}}dd}{{A`{Bnn}}}}{{{f{{l{Aj}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}dd}{{A`{Bnn}}}Al}{{{f{{l{{Cb{c}}}}}}dd}{{A`{Bnn}}}Cd}{{{f{{l{C`}}}}dd}{{A`{Bnn}}}}{{{f{{l{Bd}}}}dd}{{A`{Bnn}}}}{{{f{{l{An}}}}dd}{{A`{Bnn}}}}{{{f{{l{c}}}}FhdFh}BnFb}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Al}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Aj}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Aj}}}}{{{f{{l{An}}}}{f{Bj}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AlBb}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Aj}}}}687402135{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}{Cf{Fh}}}{{l{c}}}Dh}{{}Fh}0{{FhJf{Cf{Jh}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{Ef}}}}{{{f{{l{C`}}}}}{{f{Ef}}}}{{{f{{l{c}}}}}{{Jl{{Jj{c}}}}}Dh}{ce{}{}}0{{{l{Jn}}}{{Kb{K`Jn}}}}{{{l{Kd}}Kf{Cf{Eh}}}{{Kb{KhKd}}}}{{{l{Kj}}{Cf{Fh}}Fh}{{A`{{Kb{KlKj}}n}}}}{{{l{Kj}}{Cf{Fh}}Fh}{{Kb{KlKj}}}}{{{l{Kd}}Kf}{{Kb{KnKd}}}}{{{f{{l{C`}}}}}}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{Aj}}}}}}{{{f{{l{An}}}}}}{{{f{{l{Ej}}}}}}{{{f{{l{Bd}}}}}}{{{f{{l{c}}}}}{{`{IbIdL`GdIj}}}Al}{{{l{Kj}}}Ab}{{{l{c}}}AbDh}{{{l{Kd}}}{{Kb{LbKd}}}}{{{f{{l{c}}}}}dDh}{{{f{{l{c}}}}}{{l{Aj}}}Ld}000{{{f{{l{c}}}}}{{l{Aj}}}Dh}02{{{f{{l{c}}}}}LfDh}{{{f{{l{c}}}}}{{`{Lh}}}Dh}{{{f{{l{c}}}}}{{`{{Cn{}{{Ch{{l{c}}}}}}}}}Dh}{{{f{{l{Ah}}}}}{{`{{Cn{}{{Ch{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{{Cf{{f{Hn}}}}}}}}}}}Dh}`{{{f{{l{c}}}}}CfDh}{{{f{{l{c}}}}}{{Cf{Fh}}}Dh}{{{f{{l{c}}}}}{{Lj{c}}}Dh}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}10{{{f{{l{c}}}}}FhDh}0{{{f{{l{c}}}}e}{{l{c}}}Al{B`Ll}}00{{{f{{l{c}}}}Fh}{{l{c}}}Dh}{{{f{{l{An}}}}{f{Bj}}}{{l{Aj}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AlBb}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Aj}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Al}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}701283654{{{f{{l{Aj}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}CfAl}{{{f{{l{Bd}}}}}Ln}{{{f{{l{Aj}}}}}Ln}{{{f{{l{An}}}}}Ln}{{{f{{l{c}}}}}LnAl}{{{f{{l{c}}}}}{{Cf{M`}}}Al}{{{f{{l{Aj}}}}}{{Cf{M`}}}}{{{f{{l{Eb}}}}}{{Cf{Jf}}}}{{{f{{l{c}}}}}{{Cf{M`}}}Fb}{{{f{{l{Ed}}}}}{{Cf{M`}}}}{{{f{{l{Eb}}}}}Ln}{{{f{{l{Ed}}}}}Ln}{{{f{{l{c}}}}}LnFb}{{{f{Db{l{c}}}}{Jj{c}}}bDh}`{{{f{{l{c}}}}}{{Mb{c}}}Dh}{{{f{{l{c}}}}}{{f{{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Cf{{Mj{Mh}}}}}Dh}{{{f{Db{l{c}}}}}{{f{Db{Mf{{Md{c}}}}}}}Dh}{{{f{{l{c}}}}}{{Mf{{Md{c}}}}}Dh}{{{f{{l{Aj}}}}}{{Cf{d}}}}{{{f{{l{c}}}}}CfAl}{{{f{{l{c}}}}}{{Cf{Gj}}}Al}{{{f{{l{c}}}}}LnAl}{{{f{{l{Aj}}}}}Ln}{{{f{{l{An}}}}}Ln}{{{f{{l{Bd}}}}}Ln}{{{f{Bj}}{f{{Bh{Bf}}}}FhFh}{{l{Aj}}}}{{{f{Bj}}{f{Bh}}}{{l{c}}}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}FhDh}{{{f{{l{c}}}}}{{A`{Fhn}}}Al}{{{f{{l{An}}}}}{{A`{Fhn}}}}{{{f{{l{Bd}}}}}{{A`{Fhn}}}}{{{f{{l{c}}}}}{{f{Bj}}}Dh}{{{f{Bj}}c}{{l{Bd}}}{{Hj{{Bh{{Dn{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}{{l{Ml}}}{{Hj{{Bh{{Cf{Mn}}}}}}}}{{{f{Bj}}c}{{l{N`}}}{{Hj{{Bh{Bf}}}}}}{{{f{Bj}}c}{{l{Nb}}}{{Hj{{Bh{{Cf{Nd}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{Hj{{Bh{{Cf{Eh}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{Hj{{Bh{{Cf{{f{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}{{l{Eb}}}{{Hj{{Bh{Jf}}}}}}{{{f{Bj}}c}{{l{Nf}}}{{Hj{{Bh{Nh}}}}}}{{{f{Bj}}c}{{l{En}}}{{Hj{{Bh{{Cf{In}}}}}}}}{{{f{Bj}}{Nl{Nj}}}{{l{Jn}}}}{{{f{Bj}}c}{{l{Ml}}}{{Hj{{Bh{Mn}}}}}}{{{f{Bj}}c}{{l{Kd}}}{{Hj{{Bh{Gf}}}}}}{{{f{Bj}}{Nl{Gf}}}{{l{Kd}}}}{{{f{Bj}}c}{{l{N`}}}{{Hj{{Bh{{Cf{Bf}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{Hj{{Bh{{f{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{Hj{{Bh{{Dn{Bj}}}}}}}}{{{f{Bj}}c}{{l{Nn}}}{{Hj{{Bh{{Cf{Jh}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{Hj{{Bh{d}}}}}}{{{f{Bj}}c}{{l{An}}}{{Hj{{Bh{{Cf{{f{Bj}}}}}}}}}}{{{f{Bj}}{Nl{In}}}{{l{En}}}}{{{f{Bj}}c}{{l{Nn}}}{{Hj{{Bh{Jh}}}}}}{{{f{Bj}}c}{{l{En}}}{{Hj{{Bh{In}}}}}}{{{f{Bj}}c}{{l{An}}}{{Hj{{Bh{{Cf{{Dn{Bj}}}}}}}}}}{{{f{Bj}}c}{{l{Kj}}}{{Hj{{Bh{O`}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{Hj{{Bh{{Cf{{G`{Bf}}}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{Hj{{Bh{{f{Bj}}}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{Hj{{Bh{{G`{Bf}}}}}}}}{{{f{Bj}}c}{{l{Nf}}}{{Hj{{Bh{{Cf{Nh}}}}}}}}{{{f{Bj}}c}{{l{An}}}{{Hj{{Bh{Eh}}}}}}{{{f{Bj}}{Nl{Jh}}}{{l{Nn}}}}{{{f{Bj}}c}{{l{Kj}}}{{Hj{{Bh{{Cf{O`}}}}}}}}{{{f{Bj}}c}{{l{Jn}}}{{Hj{{Bh{Nj}}}}}}{{{f{Bj}}c}{{l{Bd}}}{{Hj{{Bh{{Cf{{Dn{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}{{l{Ed}}}{{Hj{{Bh{M`}}}}}}{{{f{Bj}}c}{{l{Ed}}}{{Hj{{Bh{{Cf{M`}}}}}}}}{{{f{Bj}}e}{{l{{Cb{c}}}}}Cd{{Hj{{Bh{{Cf{c}}}}}}}}{{{f{Bj}}{f{{Bh{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}c}{{l{Eb}}}{{Hj{{Bh{{Cf{Jf}}}}}}}}{{{f{Bj}}c}{{l{Aj}}}{{Hj{{Bh{{Cf{d}}}}}}}}{{{f{Bj}}c}{{l{Jn}}}{{Hj{{Bh{{Cf{Nj}}}}}}}}{{{f{Bj}}c}{{l{Nb}}}{{Hj{{Bh{Nd}}}}}}{{{f{Bj}}c}{{l{Kd}}}{{Hj{{Bh{{Cf{Gf}}}}}}}}{{{f{Bj}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{C`}}}}FhFh}{{l{C`}}}}{{{f{{l{c}}}}FhFh}{{l{c}}}Al}{{{f{{l{Ej}}}}FhFh}{{l{Ej}}}}{{{f{{l{Ah}}}}FhFh}{{l{Ah}}}}{{{f{{l{An}}}}FhFh}{{l{An}}}}{{{f{{l{Aj}}}}FhFh}{{l{Aj}}}}{{{f{{l{j}}}}FhFh}{{l{j}}}}{{{f{{l{{Cb{c}}}}}}FhFh}{{l{{Cb{c}}}}}Cd}{{{f{{l{Bd}}}}FhFh}{{l{Bd}}}}{{{f{Bj}}{G`{c}}}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}{G`{c}}Hn}{{l{{Cb{c}}}}}Cd}{{{f{Bj}}G`}{{l{c}}}Al}{{{Mf{Ob}}{G`{{Cl{Cj}}}}InIn}{{l{c}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{l{Aj}}}}{{{f{{l{Aj}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Aj}}}Al}{{{f{{l{C`}}}}{f{{l{C`}}}}}{{l{Aj}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}{f{{Bh{Bf}}}}}{{l{Aj}}}}{{{f{{l{c}}}}e}{{l{Aj}}}AlBb}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Aj}}}}{{{f{{l{An}}}}{f{Bj}}}{{l{Aj}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Aj}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Aj}}}}426397{{{f{{l{C`}}}}{f{{l{C`}}}}}}126{{{f{{l{c}}}}}FhDh}`{{{f{{l{C`}}}}}{{A`{{Gh{Gf}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Gh{Gf}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Od{}{{Ch{{Cf{Ab}}}}}}}}}}{{{f{{l{An}}}}}{{`{{Od{}{{Ch{{Cf{{f{Bj}}}}}}}}}}}}{{{f{{l{An}}}}}{{`{Of}}}}{{{f{Db{l{Ah}}}}}{{`{Of}}}}{{{f{{l{c}}}}}LnAl}{{{f{Db{l{c}}}}}bDh}{{{f{{l{Ed}}}}M`Oh}{{A`{{Cf{M`}}n}}}}{{{f{{l{Eb}}}}M`Oh}{{A`{{Cf{Jf}}n}}}}{{{f{{l{c}}}}M`Oh}{{A`{{Cf{M`}}n}}}Fb}{{{f{{l{Ed}}}}M`Oh}{{A`{Lnn}}}}{{{f{{l{c}}}}M`Oh}{{A`{Lnn}}}Fb}{{{f{{l{Eb}}}}M`Oh}{{A`{Lnn}}}}{{{f{Bj}}FhM`}{{A`{{l{Aj}}n}}}}{{{f{Bj}}FhM`M`}{{A`{{l{c}}n}}}Al}{{{f{Bj}}Fh}{{l{c}}}Al}{{{f{Bj}}FhM`M`}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dh}{{{f{{l{c}}}}}{{f{Ob}}}Dh}{{{f{{l{En}}}}}Ab}{{{f{{l{Ed}}}}}Ab}{{{f{{l{Nf}}}}}Ab}{{{f{{l{Jn}}}}}Ab}{{{f{{l{Kd}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Eb}}}}}Ab}{{{f{{l{Nb}}}}}Ab}{{{f{{l{N`}}}}}Ab}{{{f{{l{Ml}}}}}Ab}{{{f{{l{Ah}}}}}Ab}50691:32478{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{Db{l{c}}}}{f{Bj}}}bDh}{{{f{{l{Ej}}}}}{{l{Ej}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{Aj}}}}}{{l{Aj}}}}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{C`}}}}}{{l{C`}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}{f{Dj}}Oj}{{A`{Abn}}}Al}{{{f{{l{c}}}}Fhe}{{A`{{l{c}}n}}}Ld{{Af{{f{Db{l{c}}}}}{{Ad{Cf}}}}}}{{{f{{l{c}}}}M`dd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}Fhdd{Cf{Jh}}}{{A`{{l{c}}n}}}Dh}{{{f{Db{l{c}}}}{f{{Bh{In}}}}e}{{A`{Abn}}}Ol{{Hf{}{{Ch{Cf}}}}}}{{{f{{l{An}}}}{f{{Bh{In}}}}c}{{A`{Abn}}}{{Hf{}{{Ch{{Cf{{f{Bj}}}}}}}}}}{{{f{{l{Aj}}}}{f{{Bh{In}}}}c}{{A`{Abn}}}{{Hf{}{{Ch{{Cf{d}}}}}}}}{{{f{{l{Bd}}}}c{Cf{{f{{Bh{Bf}}}}}}}{{A`{{l{Bd}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{c}}}}eCf}{{A`{{l{c}}n}}}Al{{Hf{}{{Ch{In}}}}}}{{{f{{l{An}}}}c{Cf{{f{Bj}}}}}{{A`{{l{An}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{Aj}}}}c{Cf{d}}}{{A`{{l{Aj}}n}}}{{Hf{}{{Ch{In}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{{f{Bj}}}}}{{Ad{{Cf{Eh}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Hf{}{{Ch{In}}}}}{{Dj{Cf}{{Ad{Cf}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{{f{{Bh{Bf}}}}}}}{{Ad{{Cf{{G`{Bf}}}}}}}}}}{{{f{{l{Aj}}}}ce}{{A`{{l{Aj}}n}}}{{Hf{}{{Ch{In}}}}}{{Dj{{Cf{d}}}{{Ad{{Cf{d}}}}}}}}{{{f{{l{Aj}}}}{f{{l{Aj}}}}{Cf{d}}}{{A`{{l{Aj}}n}}}}{{{f{{l{An}}}}{f{{l{Aj}}}}{Cf{{f{Bj}}}}}{{A`{{l{An}}n}}}}{{{f{{l{Bd}}}}{f{{l{Aj}}}}{Cf{{f{{Bh{Bf}}}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{c}}}}{f{{l{Aj}}}}Cf}{{A`{{l{c}}n}}}Al}{{{f{Db{l{Ah}}}}}b}{{{f{Db{l{c}}}}d}bDh}{{{f{Db{l{Ah}}}}Ef}b}{{{f{Db{l{c}}}}In}bDh}{{{f{Db{l{c}}}}Lf}bDh}{{{f{{l{Bd}}}}Gf}{{l{Bd}}}}{{{f{{l{C`}}}}Gf}{{l{C`}}}}{{{f{{l{Ej}}}}Gf}{{l{Ej}}}}{{{f{{l{Aj}}}}Gf}{{l{Aj}}}}{{{f{{l{An}}}}Gf}{{l{An}}}}{{{f{{l{c}}}}Gf}{{l{c}}}Al}{{{f{{l{{Cb{c}}}}}}Gf}{{l{{Cb{c}}}}}Cd}{{{f{{l{Ah}}}}Gf}{{l{Ah}}}}{{{f{{l{C`}}}}Gf{Cf{{f{Ab}}}}}{{l{C`}}}}{{{f{{l{Ej}}}}Gf{Cf{{f{{Bh{Bf}}}}}}}{{l{Ej}}}}{{{f{{l{{Cb{c}}}}}}Gf{Cf{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Ah}}}}Gf{Cf{{f{Ab}}}}}{{l{Ah}}}}{{{f{{l{c}}}}GfCf}{{l{c}}}Al}{{{f{{l{Bd}}}}Gf{Cf{{f{{Bh{Bf}}}}}}}{{l{Bd}}}}{{{f{{l{Aj}}}}Gf{Cf{d}}}{{l{Aj}}}}{{{f{{l{An}}}}Gf{Cf{{f{Bj}}}}}{{l{An}}}}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}GfFh}{{l{c}}}Dh}0{{{f{{l{Ej}}}}d}{{l{Ej}}}}{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{Aj}}}}d}{{l{Aj}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Bd}}}}El}{{l{Bd}}}}{{{f{{l{An}}}}El}{{l{An}}}}{{{f{{l{Ej}}}}El}{{l{Ej}}}}{{{f{{l{j}}}}El}{{l{j}}}}{{{f{{l{Aj}}}}El}{{l{Aj}}}}{{{f{{l{c}}}}El}{{l{c}}}Al}{{{f{{l{c}}}}Gf}{{Gj{{l{c}}{l{c}}}}}Dh}0{{{f{{l{c}}}}Bf}{{Cf{M`}}}Al}{{{f{{l{c}}}}Bf}LnFb}{{{f{{l{Ed}}}}Bf}Ln}{{{f{{l{Eb}}}}Bf}Ln}{{{f{{l{j}}}}}{{f{{Bh{Ob}}}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bl}{{{f{{l{c}}}}}CfAl}{{{f{{l{Aj}}}}}{{Cf{In}}}}{{{f{{l{Aj}}}}}Ln}{{{f{{l{Bd}}}}}Ln}{{{f{{l{c}}}}}LnAl}{{{f{{l{c}}}}{Cf{Fh}}}{{l{c}}}Dh}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dh{{Hj{{Bh{In}}}}On}}{{{f{{l{c}}}}{f{{l{En}}}}}{{A`{{l{c}}n}}}Dh}{{{f{{l{c}}}}{f{{Bh{A@`}}}}Lf}{{l{c}}}Dh}{{{f{{l{c}}}}{f{{Bh{A@`}}}}}{{l{c}}}Dh}{{{f{{l{Bd}}}}{f{c}}}{{l{Bd}}}{{Hj{{Bh{In}}}}On}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{Hj{{Bh{In}}}}On}}{{{f{{l{c}}}}{f{{l{En}}}}}{{l{c}}}{{Dh{}{{Gl{Df}}{A@b{Df}}}}Dh}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dh{}{{Gl{Df}}{A@b{Df}}}}Dh}{{Hj{{Bh{In}}}}On}}{{{f{{l{An}}}}{f{{l{En}}}}}{{l{An}}}}{{{f{{l{Bd}}}}{f{{l{En}}}}}{{l{Bd}}}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{Hj{{Bh{In}}}}On}}{{{f{{l{j}}}}{f{{l{En}}}}}{{l{j}}}}`{{{f{{l{c}}}}dA@d}{{G`{{G`{A@f}}}}}Dh}{{{f{{l{c}}}}}{{l{c}}}Ld}{{{f{{l{An}}}}Fh}{{A`{Abn}}}}{{{f{Db{l{C`}}}}Ef}b}{{{f{Db{l{Ah}}}}Ef}b}{{{f{{l{c}}}}}{{A`{{A@n{{A@h{f}}{A@l{{A@j{Fh}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{A@n{AA`{A@l{{A@j{Fh}}}}}}n}}}}{{{f{c}}}e{}{}}{{{f{{l{Bd}}}}}{{l{An}}}}{{{f{{l{c}}}}}{{G`{Cf}}}Al}{{{f{{l{c}}}}}{{AAb{G`{G`{Cf}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{C`}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Cf{E`}}}{{Ad{{A`{{Cf{c}}n}}}}}}Dl}Dh}{{{f{{l{C`}}}}c}{{A`{{l{C`}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{C`}}}}c}{{A`{{l{Ah}}n}}}{{Af{E`}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}Dl}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{c{{A`{e}}}{}{}}0{{{f{Bj}}g}{{A`{{l{i}}e}}}Cj{}{{Hf{}{{Ch{{A`{ce}}}}}}}{{Dh{}{{Hd{c}}}}Dh}}11{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{A`{{Cf{Ab}}n}}}}}}}}{{{f{c}}}AAd{}}0{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Aj}}}}}{{A`{{l{Aj}}n}}}}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{l{j}}}AAf}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{Db{l{c}}}}}bDh}{{{f{{l{c}}}}Fh}{}Dh}{{{f{{l{c}}}}Bf}{{Cf{M`}}}Al}{{{f{{l{c}}}}Bf}LnFb}{{{f{{l{Eb}}}}Bf}Ln}{{{f{{l{Ed}}}}Bf}Ln}{{{f{{l{Ej}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{N`}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}Cd}{{{f{{l{Ed}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ml}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nb}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{{l{En}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kd}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ej}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Kj}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nf}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Eb}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Aj}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nb}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Jn}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ed}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{Ml}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}Cd}{{{f{{l{N`}}}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}{ce{}{}}0{{{f{{l{C`}}}}}Fh}{{{f{Bj}}c}{{l{e}}}Cj{{Dh{}{{Hd{c}}}}Dh}}{{{f{{l{e}}}}c}{{l{e}}}Cj{{Dh{}{{Hd{c}}}}Dh}}{{{f{{l{c}}}}{G`{{Cl{Cj}}}}}{{l{c}}}Dh}{{{l{c}}{f{Bj}}}{{l{c}}}Dh}{{{f{{Bh{AAh}}}}e}c{}{{AAj{{f{{l{En}}}}}{{Ad{c}}}}}}{{{l{j}}{Cf{Hn}}}{{l{j}}}}{{{l{j}}{l{Aj}}}{{l{j}}}}{{{f{{l{c}}}}Lf}{{l{c}}}Dh}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}23013223103232012323102323102323{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{{l{C`}}}}{f{{l{c}}}}e}{{l{C`}}}Dh{{Af{{Cf{E`}}Cf}{{Ad{{Cf{Ab}}}}}}}}{{{f{Db{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{c}}}}{f{{l{Aj}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}````{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{DbABd}}{f{Cj}}}b}{{{f{DbABd}}}b}{{{f{DbABf}}}b}{{{f{DbABh}}c}b{{Cn{}{{Ch{{Cf{d}}}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAl{{Cn{}{{Ch{Cf}}}}Ij}}{{{f{Db{ABj{c}}}}e}bAl{{Cn{}{{Ch{}}}}Ij}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}65{{{f{DbAC`}}}b}{{{f{DbACb}}}b}{{{f{DbABh}}}b}{{{f{DbACd}}}b}{{{f{Db{ABj{c}}}}}bAl}{{{f{Db{ACf{c}}}}}b{AChOn}}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAl}{{{f{DbABd}}{Cf{{f{Cj}}}}}b}{{{f{DbABd}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{Cf{{f{Bh}}}}}bAl}{{{f{Db{ACf{c}}}}{Cf{e}}}b{AChOn}{{Hj{c}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABd}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABf}}{f{Ab}}}{{A`{bn}}}}{{{f{DbAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACb}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABh}}{f{Ab}}}{{A`{bn}}}}{{{f{DbACd}}{f{Ab}}}{{A`{bn}}}}{{{f{Db{ABj{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Db{ABj{c}}}}{f{Bh}}}bAl}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{Cf{{f{Bj}}}}}}}}Ij}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{Cf{{f{{Bh{Bf}}}}}}}}}}Ij}}{{{f{DbABn}}c}b{}}{{{f{Db{ACf{c}}}}e}b{AChOn}{{Hj{c}}}}{{{f{DbACj}}d}b}{{{f{Db{ACn{c}}}}}bAl}{{{f{DbAC`}}c}b{{Cn{}{{Ch{{f{Bj}}}}}}}}{{{f{DbACb}}c}b{{Cn{}{{Ch{{f{{Bh{Bf}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000`{{{f{{ACf{c}}}}}{{ACf{c}}}{AChOn}}{{{f{ACj}}}ACj}{{{f{ACl}}}ACl}{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`Al}}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}000{{}ABd}{{}ABf}{Fh{{f{c}}}{}}0000000000{Fh{{f{Dbc}}}{}}0000000000{Fhb}0000000000{{{f{AC`}}}d}{{{f{ACb}}}d}{{{f{ABh}}}d}{{{f{{ABj{c}}}}}dAl}{{{f{ABl}}}d}{{{f{AC`}}}{{f{Ob}}}}{{{f{ACb}}}{{f{Ob}}}}{{{f{ABh}}}{{f{Ob}}}}{{{f{{ABj{c}}}}}{{f{Ob}}}Al}{{{f{ABl}}}{{f{Ob}}}}{ABn{{l{c}}}Dh}{{{f{DbABd}}}{{l{Ah}}}}{{{f{DbABf}}}{{l{Ah}}}}{{{f{DbACd}}}{{l{Ah}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{ACf{Bj}}}{{l{An}}}}{{{ACf{{Bh{Bf}}}}}{{l{Bd}}}}{ACj{{l{Aj}}}}{AClADb}{{{ACn{c}}}{{l{c}}}Al}`{cc{}}0000000000{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}{f{{Bh{c}}}}}ADd{}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}ADd{}}{{{f{Ef}}FhFh{f{Bj}}}{{A`{{Cl{ABl}}n}}}}{{}Fh}0000000000{{{f{DbAC`}}}{{Cl{Cj}}}}{{{f{DbACb}}}{{Cl{Cj}}}}{{{f{DbABh}}}{{Cl{Cj}}}}{{{f{Db{ABj{c}}}}}{{Cl{Cj}}}Al}{{{f{DbABl}}}{{Cl{Cj}}}}{ce{}{}}0000000000`{{{f{Bj}}Fh{Cf{Ef}}}ABd}{{{f{Bj}}Fh{Cf{Ef}}}ABf}{{{f{Bj}}FhFh}AC`}{{{f{Bj}}FhFh}ACb}{{{f{Bj}}FhFh}ABh}{{{f{Bj}}Fh}ACd}{{{f{Bj}}FhFhEf}{{ABj{c}}}Al}{{{f{Bj}}Fh}{{ACf{c}}}{AChOn}}{{{f{Bj}}Fh}ACj}{{{f{Bj}}Fh}ACl}{{{f{Bj}}Fh}{{ACn{c}}}Al}{{{f{Bj}}FhFhEfEf}{{ABj{c}}}Al}{{{f{DbABn}}}b}{{{f{DbACj}}}b}{{{f{DbACl}}}b}{{{f{Db{ACn{c}}}}}bAl}{{{f{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000000000000000{{{f{c}}}AAd{}}0000000000{ce{}{}}0000000000````````{{{f{DbABl}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}`{{{f{ABl}}}d}{{{f{ABl}}}{{f{Ob}}}}{{{f{DbABl}}}{{l{Ah}}}}{{{f{Ef}}FhFh{f{Bj}}}{{A`{{Cl{ABl}}n}}}}{{{f{DbABl}}}{{Cl{Cj}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{Fd}}}Fd}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}Fd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{Fd}}{f{Fd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fd}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{Fd}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{Fd}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4``{{ADh{f{Bj}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bj}}Ef}{{l{c}}}Dh}0{{ADh{f{Bj}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bj}}Ef}{{A`{{l{c}}e}}}Dh{}}0`{ADlADl}``{{ADn{f{Bj}}Ef}e{}{{AE`{c}}}}{{e{f{Bj}}Ef}AE`{}{{If{}{{Ch{c}}}}}}````{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{Fh{{f{c}}}{}}00{Fh{{f{Dbc}}}{}}00{Fhb}00{cc{}}00{{}Fh}00{ce{}{}}00000{{{f{AEb}}}AEd}{{{f{AEf}}Ef}AEh}{{{f{DbAEd}}}Cf}{{{f{DbAEh}}}Cf}{{{f{Db{AEj{c}}}}}CfCn}21{{{f{Db{AEj{c}}}}}CfGd}`{{{f{AEd}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{AEh}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{{AEj{c}}}}}{{Gj{Fh{Cf{Fh}}}}}Cn}{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00;;;`````````````````````````{{{f{c}}h}b{}}0000{{}Gb}{{}J`}{{GbGb}Gb}{{J`J`}J`}{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}3210{{{f{Gb}}}In}0{{{f{J`}}}Bf}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000{{{f{{Md{c}}}}}{{Md{c}}}Dh}{{{f{{Jj{c}}}}}{{Jj{c}}}Dh}{{{f{AEl}}}AEl}{{{f{Gb}}}Gb}{{{f{J`}}}J`}{{{f{c}}{f{Dbe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{DbAEn}}}b}{GbGb}{J`J`}{{{f{Gb}}Gb}d}{{{f{J`}}J`}d}{{}{{Md{c}}}Dh}{{}{{Jj{c}}}Dh}{{}Gb}{{}J`}{Fh{{f{c}}}{}}{{{f{{Mb{c}}}}}fDh}111111{Fh{{f{Dbc}}}{}}000000{{GbGb}Gb}{{J`J`}J`}{{}d}{{{f{Mh}}}{{Cf{In}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{Jj{c}}In}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{In}}}{{Jj{c}}}Dh}{Fhb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{J`}}{f{J`}}}d}7{{{f{DbGb}}c}b{{Hf{}{{Ch{Gb}}}}}}{{{f{DbJ`}}c}b{{Hf{}{{Ch{J`}}}}}}{{{Jj{c}}d}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{d}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gb}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}Gb}{{Jj{e}}}DhDh}{{{Jj{c}}J`}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{J`}}}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{f{DbH`}}}{{A`{bHb}}}Dh}{{{f{AEl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Gb}}{f{DbH`}}}{{A`{bHb}}}}0000{{{f{J`}}{f{DbH`}}}{{A`{bHb}}}}0000{cc{}}000000{In{{Cf{Gb}}}}{Bf{{Cf{J`}}}}{InGb}0{BfJ`}010{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}0{cGb{{Hf{}{{Ch{Gb}}}}}}{cJ`{{Hf{}{{Ch{J`}}}}}}{{{f{Bj}}}{{Cf{Gb}}}}{{{f{Bj}}}{{Cf{J`}}}}{{{f{{Jj{c}}}}}{{Cf{In}}}Dh}{{{f{{Jj{c}}}}}dDh}{{{f{J`}}}d}{{{f{Mh}}}J`}{{{f{{Jj{c}}}}}J`Dh}0{{{f{{Jj{c}}}}}{{Cf{f}}}Dh}0{{{f{Db{Md{c}}}}}{{f{Db{Jj{c}}}}}Dh}{{{f{J`}}}Lf}{{}Fh}000000{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{{GbGb}Gb}{{J`J`}J`}{{{f{Gb}}Gb}d}{{{f{J`}}J`}d}{ce{}{}}000000{Gb}{J`}{{{f{Gb}}}d}{{{f{J`}}}d}{{{f{{Jj{c}}}}}dDh}21{{{f{{Jj{c}}}}}LfDh}111{{{f{Gb}}}{{AF`{Gb}}}}{{{f{J`}}}{{AF`{J`}}}}{{{f{Gb}}}{{AFb{Gb}}}}{{{f{J`}}}{{AFb{J`}}}}{{}d}{{}{{f{{AFf{AFd}}}}}}{{{f{Mh}}}{{Cf{Ln}}}}{{{f{{Jj{c}}}}}{{Cf{Ln}}}Dh}{{{Jj{c}}}{{Jj{c}}}Dh}{{{Jj{c}}Cf}{{Jj{c}}}Dh}{{{f{{Jj{c}}}}{Jj{c}}}{{AFh{c}}}Dh}4321{{{Jj{c}}}{{Md{c}}}Dh}{GbGb}{J`J`}{{{f{{Md{c}}}}}{{Mj{{Jj{c}}}}}Dh}{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{{{f{DbGb}}Gbd}b}{{{f{DbJ`}}J`d}b}{{{f{Db{Jj{c}}}}{Cf{In}}}bDh}{{{f{Db{Jj{c}}}}d}bDh}{{{f{DbJ`}}d}b}{{{f{Db{Jj{c}}}}J`}bDh}{{{f{Db{Jj{c}}}}Cf}bDh}033{{{f{Db{Jj{c}}}}Lf}bDh}{{{f{DbJ`}}Lf}b}{{{Jj{c}}Lf}{{Jj{c}}}Dh}{{{Jj{c}}{Cf{Lf}}}{{Jj{c}}}Dh}{{GbGb}Gb}{{J`J`}J`}>=10{{{Md{c}}}{{Jj{c}}}Dh}{{{f{c}}}e{}{}}0000{{{f{DbGb}}Gb}b}{{{f{DbJ`}}J`}b}{c{{A`{e}}}{}{}}0000000000000{{{f{{Md{c}}}}}{{Cf{{Mj{{Jj{c}}}}}}}Dh}{{{f{{Md{c}}}}}{{Cf{{Jl{{Jj{c}}}}}}}Dh}{{{f{c}}}AAd{}}00000098{{{f{{Md{c}}}}}{{f{{AFj{Mh}}}}}Dh}{ce{}{}}000000{AEnAEn}{{{f{{Md{c}}}}}{{Jl{{Jj{c}}}}}Dh}````{{{f{c}}h}b{}}{{{f{{AFl{c}}}}Fh}{{Gj{{AFl{c}}{AFl{c}}}}}Cd}{e{{AFl{c}}}Cd{{Hf{}{{Ch{{f{c}}}}}}}}{e{{AFl{c}}}Cd{{Hf{}{{Ch{{Cf{{f{c}}}}}}}}}}{{AFne}g{}{{Hf{}{{Ch{c}}}}}{}}0{{{f{Jb}}}{{f{AG`}}}}{{{f{{AFl{c}}}}}{{f{AG`}}}Cd}{{{f{Db{AFl{c}}}}}{{f{DbAG`}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`{{{f{{AFl{c}}}}Fh}dCd}{{{f{{AFl{c}}}}}{{AFl{c}}}{AD`Cd}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{{AFl{c}}}}}{{f{AFn}}}Cd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{{f{Jb}}}}{f{{f{Jb}}}}}d}{{{f{Jb}}{f{Jb}}}d}{{{f{{AFl{c}}}}{f{DbH`}}}{{A`{bHb}}}{AGbCd}}{cc{}}{{FhAFn}{{AFl{c}}}Cd}{{{f{{AFl{c}}}}Fh}{{Cf{{f{c}}}}}Cd}{{}AFn}{{{f{Hn}}{f{{AFl{c}}}}{f{{AFl{c}}}}}{{AFl{c}}}Cd}{{AFn{f{Hn}}}{{AFl{c}}}Cd}{{{f{Hn}}{f{{AFl{c}}}}}{{AFl{c}}}Cd}0{{}Fh}{ce{}{}}{{{f{{AFl{c}}}}}{}Cd}{{{f{{AFl{c}}}}Fh}dCd}0{{{f{c}}Fh}d{}}{{{f{{AFl{c}}}}}{{AGf{{f{c}}{Fj{c}}AGd}}}Cd}{{{f{{AFl{c}}}}}{{AGf{AGd}}}Cd}{{{f{{AFl{c}}}}}FhCd}0`{db}{{{f{Db{AFl{c}}}}{Cf{Hn}}}bCd}{{{f{Db{AFl{c}}}}FhFh}bCd}{{{f{c}}FhFh}e{}{}}01{{{f{{AFl{c}}}}Fh}{{Gj{{Cl{Cj}}{Cl{Cj}}}}}Cd}0{{{f{Jb}}}{{Cl{Jb}}}}{{{f{{AFl{c}}}}}{{Cl{Cj}}}Cd}{{{f{c}}}e{}{}}{g{{A`{{AFl{c}}e}}}Cd{}{{Hf{}{{Ch{{A`{{Cf{{f{c}}}}e}}}}}}}}{g{{A`{{AFl{c}}e}}}Cd{}{{Hf{}{{Ch{{A`{{f{c}}e}}}}}}}}{{AFng}{{A`{ie}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{Jb}}}{{f{Bj}}}}{{}{{f{Bj}}}}{{{f{{AFl{c}}}}}{{Cf{{f{Hn}}}}}Cd}{{{f{{AFl{c}}}}Fh}{{f{c}}}Cd}{{{f{{AFl{c}}}}Fh}{}Cd}1{{{f{{AFl{c}}}}}{{f{{Mf{{G`{c}}}}}}}Cd}{{{f{{AFl{c}}}}}{}Cd}{{{f{{AFl{c}}}}}{{Fj{c}}}Cd}{ce{}{}}{{{AFl{c}}{Cf{Hn}}}{{AFl{c}}}Cd}{{{f{{AFl{c}}}}{Cf{Hn}}}{{Cl{Cj}}}Cd}1`{{{f{Db{AGh{c}}}}}bCd}0{{{f{Db{AGh{c}}}}{Cf{c}}}bCd}{{{f{Db{AGh{c}}}}{f{AG`}}}bCd}{{{f{Db{AGh{c}}}}c}bCd}{{{f{Db{AGh{c}}}}{f{AG`}}}{{A`{bn}}}Cd}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}{{AGh{c}}}Cd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{AGh{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{}Fh}{ce{}{}}{{{f{Bj}}Fh}{{AGh{c}}}Cd}{{{f{Db{AGh{c}}}}}AbCd}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{DbAGj}}}b}{{{f{DbAGj}}{Cf{{f{AG`}}}}}b}{{{f{DbAGj}}{f{AG`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}`?>={{{f{AGl}}{f{DbH`}}}{{A`{bHb}}}}<{{{f{Bj}}Fh}{{Cl{AGj}}}}{{}{{Mf{Dj}}}}{{}AFn}>={{}d}`{{{Cl{Dj}}{Mf{Dj}}AFn}b}{{{f{DbAGj}}}Ab}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bh{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{{f{AHd}}El}{{l{En}}}}{{{f{AHd}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}}{{{f{AHf}}}{{A`{{l{En}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{AHh}}{f{Ef}}}{{A`{Abn}}}}0{{{f{AHh}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{El}}}El}{{{f{F`}}}F`}{{{f{AHj}}}AHj}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{}El}{{}F`}{Fh{{f{c}}}{}}00{Fh{{f{Dbc}}}{}}00``{Fhb}00{{{f{El}}{f{El}}}d}{{{f{F`}}{f{F`}}}d}{{{f{AHj}}{f{AHj}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AHn}}}{{A`{Abn}}}}{{{f{AHn}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}`{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{Aj}}}}}{{A`{{l{c}}n}}}Dh}`{{{f{El}}{f{DbH`}}}{{A`{bHb}}}}{{{f{F`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AHj}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{F`}}}El}1{{{f{El}}}F`}2`{{{f{Bj}}cFh}AId{}}{{{f{Bj}}Fh}AIf}`{{{f{AIh}}Fh}{{A`{Iln}}}}{{{f{AIh}}Fh}Il}??{{{f{El}}{f{Dbc}}}bADf}{{{f{F`}}{f{Dbc}}}bADf}{{{f{AHj}}{f{Dbc}}}bADf}{{}Fh}00{ce{}{}}00{{{f{AIj}}}{{A`{{l{Aj}}n}}}}{{{f{AIl}}}{{A`{{l{Aj}}n}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0``{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AIn}}}{{Cf{M`}}}}{{{f{AJ`}}}{{Cf{c}}}{}}2{{{f{AIn}}}{{Cf{{Gj{cc}}}}}{}}``{{{f{AHf}}}{{A`{Fhn}}}}{{}El}{{}F`}{{{f{AJb}}FhFh}{{l{c}}}Dh}88``{{{f{AHn}}}{{A`{{Gh{Gf}}n}}}}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{{f{AJd}}}Ab}0{{{f{AJf}}}AJf}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}`{{{f{AJj}}{f{{l{Aj}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{AJl}}Gf}{{l{c}}}Dh}{{{f{AJn}}Gfc}{{l{e}}}{}Dh}{{{f{AK`}}FhFh}AK`}0`{{{f{AHd}}d}{{l{c}}}Dh}{{{f{AHd}}El}{{l{c}}}Dh}{{{f{AKb}}Bf}{{Cf{M`}}}}{{{f{AIn}}}{{Cf{c}}}{}}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{AKf}}{f{c}}}AKfOn}{{{f{AKh}}}{{G`{{f{{Bh{Bf}}}}}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00{{{f{AHf}}}{{A`{AHfn}}}}8{ce{}{}}00{{Eld}El}{{F`d}F`}1010{{F`c}F`{{Hf{}{{Ch{d}}}}}}210{ElEl}{F`F`}`{{{f{AKj}}{f{{l{Aj}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bj}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}0{{{f{{l{c}}}}}FhAl}0{{LfLf}Lf}{{{f{{l{En}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eALhd}{{G`{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{ALh}}}ALh}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}ALh}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{ALh}}{f{ALh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{ALh}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{ALh}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{{Bh{f}}}}cIne}{{G`{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFhf}{{Ad{d}}}}}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4`{{Fh{f{Db{G`{d}}}}}b}```{{{f{AK`}}FhFh}AK`}0{{Fh{f{{Bh{Ab}}}}{f{DbF`}}}{{A`{{ALj{{l{En}}}}n}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Jd{Gf}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{Ej}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}}{{A`{{l{Ej}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{Ej}}n}}}}0```````````88`{ALnGf}00{{{f{Bj}}}{{A`{Ehn}}}}{{{f{Bj}}}{{A`{AM`n}}}}{{{f{AMb}}}Gf}{{{f{Bj}}}{{A`{bn}}}}444`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000{{{f{AMd}}}d}{{{f{Il}}}{{`{{Cn{}{{Ch{Il}}}}}}}}{{{f{Il}}{f{Db{G`{Il}}}}}b}{{AMdd}AMd}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{Il}}{f{Il}}}Il}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Aj}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbAMf}}{Cf{{f{Bj}}}}}b}{{{f{DbAMd}}{f{AMd}}}{{A`{bn}}}}{{{f{DbAMf}}}b}{{{f{DbAMf}}{f{Bj}}}b}{{{f{AMd}}El}{{l{En}}}}{eAMh{}{{Hf{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{{f{Il}}}Il}{{{f{{Kb{K`Jn}}}}}{{`{Ij}}}}{{{f{{Kb{KhKd}}}}}{{`{Ij}}}}{{{f{Ef}}}{{f{Ef}}}}{{{f{Ob}}}{{f{Ef}}}}{{{f{AMl}}}{{f{Ef}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bh{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{{Kb{LbKd}}}}}{{`{Ij}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000000000000000000000000000000000000000000{Ef{{Cl{Ef}}}}{{{ANh{Bj}}}ANj}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Ef}}}{{A`{Abn}}}}{{{f{Il}}{f{Ef}}}Il}{{{f{Ef}}Ef}Ef}{{{f{{Kb{KhKd}}}}Kf}{{Kb{KhKd}}}}{{{f{{Kb{KnKd}}}}Kf}{{Kb{KnKd}}}}{{{f{ANn}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{KhKd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{K`Jn}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{KlKj}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{KnKd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{{Kb{LbKd}}}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{AMd}}{f{Ef}}Fd}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eb}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ed}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{Kb{ce}}}}}{{Kb{ce}}}DhDh}{{{f{AO`}}}AO`}{{{f{ANj}}}ANj}{{{f{AMd}}}AMd}{{{f{AOb}}}AOb}{{{f{Il}}}Il}{{{f{AOd}}}AOd}{{{f{Ef}}}Ef}{{{f{AOf}}}AOf}{{{f{Ob}}}Ob}{{{f{Kf}}}Kf}{{{f{N`}}}N`}{{{f{Nb}}}Nb}{{{f{En}}}En}{{{f{Nn}}}Nn}{{{f{Ml}}}Ml}{{{f{Nf}}}Nf}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{Eb}}}Eb}{{{f{Ed}}}Ed}{{{f{K`}}}K`}{{{f{Lb}}}Lb}{{{f{An}}}An}{{{f{Bd}}}Bd}{{{f{Ej}}}Ej}{{{f{Aj}}}Aj}{{{f{Kl}}}Kl}{{{f{Kh}}}Kh}{{{f{Kn}}}Kn}{{{f{AOh}}}AOh}{{{f{AFn}}}AFn}{{{f{AOj}}}AOj}{{{f{c}}{f{Dbe}}}b{}{}}00000000000000000000000000000000{{{f{c}}}b{}}000000000000000000000000000000000000000000000000000000000{{{f{DbOb}}Ef}b}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{f{Ef}}}d}00{{{ANh{Bj}}}Ef}{{{f{Ob}}}{{f{Ef}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{}AOn}{{}AO`}{{}ANj}{{}Il}{{}AOd}{{}Ef}{{}AFn}{Fh{{f{c}}}{}}0{{{f{{Kb{ce}}}}}fDhDh}11111111111111111111111111111111111111111{Fh{{f{Dbc}}}{}}0{{{f{Db{Kb{ce}}}}}{{f{Db}}}DhDh}11111111111111111111111111111111111111111{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMfc}AMd{{Hf{}{{Ch{{Cf{{f{Bj}}}}}}}}}}{Fhb}000000000000000000000000000000000000000000{{{f{ANn}}}{{f{Ef}}}}{{{f{{Kb{KlKj}}}}}{{f{Ef}}}}{{{f{{Kb{KnKd}}}}}{{f{Ef}}}}{{{f{{Kb{LbKd}}}}}{{f{Ef}}}}{{{f{{Kb{K`Jn}}}}}{{f{Ef}}}}{{{f{{Kb{KhKd}}}}}{{f{Ef}}}}{{{f{AMd}}}{{f{Ef}}}}{{{f{Il}}}Ef}`{{{f{AO`}}{f{AO`}}}d}{{{f{Il}}{f{Il}}}d}{{{f{AOd}}{f{AOd}}}d}{{{f{Ef}}{f{Ef}}}d}{{{f{Ef}}{f{AFn}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Ob}}{f{Ob}}}d}{{{f{Kf}}{f{Kf}}}d}{{{f{AFn}}{f{AFn}}}d}{{{f{AOj}}{f{AOj}}}d}{{{f{Il}}{f{Il}}d}d}{{{f{AMd}}{f{AMd}}}}{{{f{AMd}}{f{{l{An}}}}}}{{{f{AMd}}{f{Bj}}}}120{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{{Kb{ce}}}}}ObDhDh}{{{f{ANj}}{f{Bj}}}{{Cf{In}}}}{{ANl{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{AMfAMd}{AOn{{Mf{ANj}}}}{{{f{AO`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{ANj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AOb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Il}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AOd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ef}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AOf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ob}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Kf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{AFn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AOj}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}0{{{l{Kd}}}{{Kb{LbKd}}}}1{{{l{Jn}}}{{Kb{K`Jn}}}}222222222222{{{Cf{c}}}Il{{B@`{Il}}}}{cIlB@b}4{{{f{Bj}}}Il}{dIl}{{{f{{Bh{Bf}}}}}Il}77{{{f{Il}}}Ef}{IlEf}{{{f{AFn}}}Ef}:{{{f{Il}}}Ob}{{{f{B@d}}}Ob}<<{{{f{AOj}}}Kf}===================={B@fAFn}{B@hAFn}??{{{f{AFn}}d}Ef}{{{l{En}}{Mf{ANj}}dAO`}AMd}{{{f{Bj}}cKf}{{Kb{KnKd}}}{{Hf{}{{Ch{B@j}}}}}}{{{f{Bj}}cKf}{{Kb{KnKd}}}{{Hf{}{{Ch{{Cf{B@j}}}}}}}}{{{l{En}}AO`}AMd}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hf{}{{Ch{B@l}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hf{}{{Ch{{Cf{B@l}}}}}}}}{{{f{Bj}}cKf}{{Kb{KhKd}}}{{Hf{}{{Ch{ALn}}}}}}{{{f{Bj}}cKf}{{Kb{KhKd}}}{{Hf{}{{Ch{{Cf{ALn}}}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hf{}{{Ch{AMb}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hf{}{{Ch{{Cf{AMb}}}}}}}}{{{BA`{B@n}}Ef}Ob}{{{f{{l{An}}}}{f{{ANh{Bj}}}}AO`}{{A`{AMdn}}}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIbId}}{{FhcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{FhAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{Bj}}dFhAO`}AMd}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{ANj}}In}{{f{Bj}}}}{{{f{{Kb{KhKd}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{LbKd}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{K`Jn}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{KlKj}}}}Fh}{{A`{Iln}}}}{{{f{{Kb{KnKd}}}}Fh}{{A`{Iln}}}}{{{f{ANn}}Fh}{{A`{Iln}}}}{{{f{AMd}}Fh}{{A`{Iln}}}}{{{f{{Kb{LbKd}}}}Fh}Il}{{{f{{Kb{KhKd}}}}Fh}Il}{{{f{{Kb{K`Jn}}}}Fh}Il}{{{f{{Kb{KlKj}}}}Fh}Il}{{{f{{Kb{KnKd}}}}Fh}Il}{{{f{ANn}}Fh}Il}{{{f{AMd}}Fh}Il}{{{f{ANj}}}{{f{{ANh{Bj}}}}}}{{}Ef}0000000000000000000000000{{{f{ANj}}In}{{Cf{{f{Bj}}}}}}{{{f{AMd}}}{{f{{Mf{ANj}}}}}}{{{f{Ef}}}{{Cf{{G`{Fh}}}}}}{{{f{Il}}}{{Cf{{f{Bj}}}}}}{{{f{BAb}}Fh}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{{l{An}}}}}}{{{f{AMd}}{f{AMd}}}}120{{{f{Il}}{f{Dbc}}}bADf}{{{f{AOd}}{f{Dbc}}}bADf}{{{f{Ef}}{f{Dbc}}}bADf}{{{f{Ob}}{f{Dbc}}}bADf}{{{f{Kf}}{f{Dbc}}}bADf}{{{f{AFn}}{f{Dbc}}}bADf}{{{f{AOj}}{f{Dbc}}}bADf}{{{f{Il}}{f{Dbc}}d}bADf}{{{f{{Kb{LbKd}}}}}{{l{Ml}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{EfEf}{{}Fh}000000000000000000000000000000000000000000{{{f{Ef}}}{{Cf{{f{Ef}}}}}}{{{f{AFn}}}{{Cf{{f{AFn}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{BAdEf}{{A`{Lnn}}}}{{{Kb{KlKj}}}Ab}{{{Kb{KhKd}}}Ab}{{{Kb{LbKd}}}Ab}{{{Kb{K`Jn}}}Ab}{{{Kb{KnKd}}}Ab}{AMdAb}{Il{{A`{Iln}}}}{{{f{Ef}}}d}00{{{f{Il}}}d}11{{{f{AMd}}}d}0212{{{f{ANj}}}d}23330332323233332333323{{{f{AFn}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}}BAf}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{Ef}}}{{f{Ef}}}}{{{f{ANj}}}Fh}{{{f{AMd}}}Fh}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{{l{An}}}}}}{{{f{AMd}}{f{AMd}}}}201{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Ef}}{f{Ef}}}{{A`{dn}}}}{{{f{AOd}}}{{Cf{Ef}}}}{{{f{AMd}}}Ln}{{{f{Ef}}{f{Ef}}}{{A`{Efn}}}}{{{f{DbAOn}}{f{{Mf{ANj}}}}}{{A`{bn}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}03{{{f{{Kb{LbKd}}}}}{{l{Ml}}}}1{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMd}}}{{A`{Fhn}}}}{{{f{AMd}}}{{f{Bj}}}}{{{f{Ob}}}{{f{{BA`{B@n}}}}}}`{{{f{{Kb{LbKd}}}}}{{l{Jn}}}}8{{}c{}}0{{{f{Bj}}FhAO`}AMf}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hj{{Bh{B@l}}}}}}{{{f{Bj}}c}{{Kb{K`Jn}}}{{Hj{{Bh{{Cf{B@l}}}}}}}}{{{f{Bj}}c}{{Kb{KhKd}}}{{Hj{{Bh{ALn}}}}}}{{{f{Bj}}c}{{Kb{KhKd}}}{{Hj{{Bh{{Cf{ALn}}}}}}}}{{{f{Bj}}c}{{Kb{KnKd}}}{{Hj{{Bh{{Cf{B@j}}}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hj{{Bh{AMb}}}}}}{{{f{Bj}}c}{{Kb{KnKd}}}{{Hj{{Bh{B@j}}}}}}{{{f{Bj}}c}{{Kb{LbKd}}}{{Hj{{Bh{{Cf{AMb}}}}}}}}{{{Mf{ANj}}}AOn}{{{f{Bj}}Ef}Ob}{{{l{c}}}{{Kb{ec}}}DhDh}{{}AOf}{{{f{DbBAf}}}Cf}{{{f{AMd}}{f{{l{An}}}}}}{{{f{AMd}}{f{Bj}}}}{{{f{AMd}}{f{AMd}}}}012{{{f{AMd}}}Fh}5{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Il}}{f{Il}}}{{Cf{BAh}}}}{{{f{Kf}}{f{Kf}}}{{Cf{BAh}}}}{{{f{{Kb{ce}}}}}{{f{{l{e}}}}}DhDh}{{{f{AMd}}}{{f{{l{En}}}}}}{{{f{{Kb{KlKj}}}}}{{Cf{Fh}}}}{{{f{DbAMf}}{f{Bj}}}{{Gj{Ind}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KhKd}}}}{f{{l{An}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Kb{K`Jn}}}}{f{{l{An}}}}{Cf{{f{AM`}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{ANj}}{f{ANj}}}d}{{{f{{Kb{KlKj}}}}}Fh}{{{f{{Kb{LbKd}}}}}{{l{Ml}}}}{{{f{{Kb{KnKd}}}}}{{l{Kd}}}}{{{f{DbOb}}{BA`{B@n}}}b}{{{f{Db{Kb{KnKd}}}}Kf}b}{{{f{Db{Kb{KhKd}}}}Kf}b}{{{f{Db{Kb{KhKd}}}}KfEh}{{A`{bn}}}}{{{f{Db{Kb{KhKd}}}}Eh}{{A`{bn}}}}{{{f{BAf}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{AMd}}d}AMd}{{{f{AMd}}El}AMd}{{{f{{Kb{K`Jn}}}}{f{Bj}}}{{l{An}}}}{{{f{{Kb{KhKd}}}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{{Kb{LbKd}}}}{f{Bj}}}{{l{An}}}}{{{f{Il}}{f{Ef}}}{{Cf{Il}}}}{{{f{{Kb{KlKj}}}}{f{{Kb{KlKj}}}}}}{{{f{{l{C`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{Kb{KhKd}}}}}Kf}{{{f{{Kb{KnKd}}}}}Kf}{{{f{{Kb{KhKd}}}}}{{f{{Cf{Eh}}}}}}{{{f{AMd}}AOfd}{{Cl{Cj}}}}{{{f{Ef}}AOf}AFn}{{{f{Ob}}AOf}B@d}{KfAOj}{{{f{Ef}}{f{Bj}}AOf}B@d}{Kf{{f{Bj}}}}{{{f{AMd}}{f{{ANh{Bj}}}}BAj}AMd}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}AMd}{{{f{AFn}}}{{f{AFn}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000{{{f{Ef}}}Ef}{{{f{AFn}}}BAl}{{{f{{Kb{KlKj}}}}Fh}{{A`{{Dn{{Kb{KlKj}}}}n}}}}{{{f{{Kb{K`Jn}}}}{f{Bj}}}{{l{An}}}}{{{f{{Kb{KhKd}}}}{f{Bj}}}{{A`{{l{An}}n}}}}{{{f{{Kb{LbKd}}}}{f{Bj}}}{{l{An}}}}{{{f{c}}}Eh{}}00{{{f{Il}}{f{Il}}}d}{{{f{{Kb{K`Jn}}}}{Cf{{f{AM`}}}}{f{{l{An}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{AM`}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{Il}}}{{A`{cn}}}Ll}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Il}}{f{Ef}}}{{A`{Iln}}}}{{{f{Ef}}AOf}{{A`{AFnn}}}}{{{f{c}}}AAd{}}000000000000000000000000000000000000000000{{{f{AFn}}}AFn}{{{f{AMd}}}{{A`{AMdn}}}}{{{f{AMd}}}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}}{{A`{AAfn}}}}1{{{f{Ef}}Il}d}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{ce{}{}}000000000000000000000000000000000000000000{Fhc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hn}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{Ef}}}Il}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}BAn}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{{}b}{Fhb}{{{f{DbBAn}}}b}2{cc{}}6{{}Fh}{ce{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{}d}3``````````````````````````{{{f{BB`}}}{{f{Bj}}}}>>>===`{{nBB`}n}{nn}={{{f{BB`}}}f}>>===;;;`{{{f{BBb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BB`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{n}}{f{DbH`}}}{{A`{bHb}}}}0<<{cBB`{{B@`{{Dn{Bj}}}}}}{BBdn}{BBfn}{BBhn}{BBjn}{BBln}{cc{}}{BBnn}{{}{{Fl{{f{Bj}}BBb}{{Ad{b}}}}}}{{}Fh}00{ce{}{}}00{cnALb}````{{{Fl{{f{Bj}}BBb}{{Ad{b}}}}}b}{cnBC`}{{{f{c}}}Eh{}}0{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{DbAAf}}{G`{Ab}}{f{BCb}}}{{A`{bn}}}}{{{f{AAf}}{f{Dj}}}{{G`{Ab}}}}0{{{f{AAf}}{f{{l{Aj}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{Bh{{BA`{B@n}}}}}}}{{A`{AAfn}}}}0{{{f{AAf}}GfFh}AAf}{{{f{DbAAf}}}{{f{DbAAf}}}}{{{f{DbAAf}}{f{Bj}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}{{{f{DbAAf}}Fhe}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000{{{f{AAf}}}{{`{{Cn{}{{Ch{Fh}}}}}}}}{{{f{AAf}}}AAf}{{{f{BCf}}}BCf}{{{f{BCh}}}BCh}2{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{AAf}}{f{Bj}}}{{A`{{f{Ab}}n}}}}{{{f{AAf}}e}{{A`{{G`{{f{Ab}}}}n}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{}BCh}{{}AAf}{Fh{{f{c}}}{}}0000{Fh{{f{Dbc}}}{}}0000{Fhb}000{{{f{AAf}}{f{Bj}}}{{A`{AAfn}}}}1{{{f{DbAAf}}{f{Bj}}}{{A`{Abn}}}}{{{f{AAf}}{f{{Bh{c}}}}}AAf{{Hj{Bj}}}}{{{f{AAf}}{f{{BCj{{f{Bj}}A@d}}}}}AAf}{{{f{AAf}}{Cf{{f{{Bh{c}}}}}}}{{A`{AAfn}}}{{Hj{Bj}}}}{{{f{AAf}}}{{G`{Ef}}}}9{{{f{BCl}}}AAf}{{{f{BCb}}}AAf}{{{f{BCh}}{f{BCh}}}d}{{{f{AAf}}{f{AAf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{AAf}}}Fh}`{{{f{AAf}}e}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}{G`{Ab}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}}{{G`{Ob}}}}{{{f{AAf}}AHj}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{Aj}}}}}{{A`{AAfn}}}}{{{f{BCf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AAf}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}0000{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cAAf{{Hf{}{{Ch{Ab}}}}}}{{{f{{Bh{BCn}}}}}{{A`{AAfn}}}}{{{f{{Bh{BCn}}}}{f{BCb}}}{{A`{AAfn}}}}{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{f{BCn}}}}}}}}{{{f{AAf}}Fh}{{Cf{{G`{Il}}}}}}{{{f{AAf}}{f{Bj}}}{{Cf{Fh}}}}{{{f{AAf}}}{{G`{{f{Bj}}}}}}{{{f{AAf}}}{{G`{{BA`{B@n}}}}}}{{{f{AAf}}}{{f{{Bh{Ab}}}}}}{{{f{DbAAf}}}{{f{Db{G`{Ab}}}}}}{{{f{AAf}}Fh}{{A`{BCnn}}}}{{{f{AAf}}Fh{f{DbBCn}}}{{A`{bn}}}}{{{f{AAf}}Fh{f{DbBCn}}}b}{{{f{AAf}}}{{Cf{{A`{Efn}}}}}}`{{{f{AAf}}e}{{A`{BD`n}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}{G`{Ab}}{f{BDb}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}1{{{f{AAf}}{G`{Ab}}dd}{{A`{BD`n}}}}{{{f{BCh}}{f{Dbc}}}bADf}{{{f{AAf}}{Cf{Fh}}}AAf}{{{f{AAf}}}Fh}{{{f{AAf}}{f{{Bh{Ab}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{{Bh{Ab}}}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{{Bh{Ab}}}}}{{f{DbAAf}}}}{{{f{AAf}}Fh}f}{{{f{AAf}}{BDd{Fh}}}f}{{{f{AAf}}{BDf{Fh}}}f}{{{f{AAf}}{Nl{Fh}}}f}{{{f{AAf}}BDh}f}{{{f{AAf}}{f{Bj}}}f}{{{f{AAf}}{BDj{Fh}}}f}{{{f{AAf}}{BDl{Fh}}}f}{{}Fh}0000{{{f{DbAAf}}Fhc}{{A`{{f{DbAAf}}n}}}BCd}{ce{}{}}000000{{AAf{f{Bj}}}{{l{j}}}}{{{f{AAf}}}{{A`{{l{Aj}}n}}}}{{{f{AAf}}}d}1{{{f{AAf}}}{{Fj{Ab}}}}{{{f{AAf}}AOfd}BDn}{{{f{AAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{{f{AAf}}}BE`}{AAfBEb}{{{f{AAf}}}Fh}{{{f{AAf}}}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}122{{{G`{c}}}{{A`{AAfn}}}BCd}{{{G`{Ab}}}AAf}{{{G`{Ab}}}{{A`{AAfn}}}}{{{f{DbBDn}}}Cf}{{{f{DbBE`}}}Cf}{{{f{AAf}}}AAf}{{AAfe}{{A`{cn}}}{}{{Dj{AAf}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}e}{{A`{cn}}}{}{{Dj{{f{DbAAf}}}{{Ad{{A`{cn}}}}}}}}{{AAfgc}{{A`{en}}}{}{}{{Dj{AAfc}{{Ad{{A`{en}}}}}}}}{{{f{DbAAf}}}{{Cf{Ab}}}}{{{f{AAf}}{f{AAf}}}d}{{{f{DbAAf}}{f{Bj}}{f{Bj}}}{{A`{{f{DbAAf}}n}}}}{{{f{DbAAf}}{f{Bj}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Fhc}{{A`{{f{DbAAf}}n}}}BCd}18{{{f{AAf}}{G`{Ab}}{f{BEd}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}`{{{f{AAf}}{f{Ab}}dd{Cf{Jh}}}{{A`{AAfn}}}}0{{{f{AAf}}Fhdd{Cf{Jh}}}{{A`{AAfn}}}}{{{f{AAf}}}BCb}{{{f{AAf}}{f{AAf}}}{{A`{bn}}}}{{{f{AAf}}e}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}Fh}{{Cf{{f{Ab}}}}}}{{{f{AAf}}c}{{A`{AAfn}}}{{BEf{Fh}}}}2{{{f{AAf}}c}{{A`{{G`{Ab}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}e{f{{Mf{BCb}}}}}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{AAf}}e{f{BCb}}}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DbAAf}}{f{{Bh{c}}}}}{{A`{bn}}}{{Hj{Bj}}}}{{{f{AAf}}}{{Gj{FhFh}}}}{{{f{AAf}}Gf}AAf}{{{f{AAf}}}d}{{{f{DbAAf}}}b}{{{f{BDn}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{BE`}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{AAf}}GfFh}AAf}00{{{f{AAf}}cF`}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}}{{{f{DbAAf}}cF`}{{A`{{f{DbAAf}}n}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}Gf}{{Gj{AAfAAf}}}}0{{{f{DbAAf}}}{{`{{Cn{}{{Ch{AAf}}}}}}}}{{AAfFhd}{{G`{AAf}}}}{{{f{AAf}}BCf}{{A`{{Cf{Ab}}n}}}}{{{f{AAf}}{Cf{Fh}}}AAf}{{{f{AAf}}{f{{l{En}}}}}{{A`{AAfn}}}}{{{f{AAf}}{f{{l{En}}}}}AAf}{{{f{AAf}}{f{{l{En}}}}d}AAf}{{{f{AAf}}}{{f{AAf}}}}{{{f{AAf}}BEj}{{A`{{A@n{AA`{A@l{{A@j{Fh}}}}}}n}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Eh{}}{{{f{DbAAf}}{Cf{{f{Bj}}}}{Cf{{AAb{Eh{G`{Eh}}}}}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}e}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DbAAf}}Fhe}{{A`{{f{DbAAf}}n}}}BCd{{AAj{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}0000{BEl{{A`{AAfn}}}}{{{Gj{{BEn{{Cl{Cj}}}}{f{{Bh{B@d}}}}}}}{{A`{AAfn}}}}{{c{f{BCb}}}{{A`{AAfn}}}{{Cn{}{{Ch{{A`{{f{BCn}}n}}}}}}}}{{{f{AAf}}{f{Bj}}}{{A`{Fhn}}}}44444{{{f{c}}}AAd{}}0000{{{f{AAf}}{Cf{{f{{Bh{Eh}}}}}}BCh{Cf{{Gj{GfFh}}}}}{{A`{AAfn}}}}{{{f{AAf}}d{Cf{{f{{Bh{Eh}}}}}}BCh{Cf{{Gj{GfFh}}}}}{{A`{AAfn}}}}1{{{f{AAf}}c}{{A`{AAfn}}}{{BEh{Eh}}}}{{{f{AAf}}ce}{{A`{AAfn}}}{{BEh{{BA`{B@n}}}}}{{BEh{{BA`{B@n}}}}}}{{{f{AAf}}BF`}{{A`{AAfn}}}}{{{f{AAf}}c{f{Bj}}BFb}{{A`{AAfn}}}{{BEh{Eh}}}}0{{{f{AAf}}{f{AAf}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{AAf}}}{{A`{{f{DbAAf}}n}}}}{ce{}{}}0000{{{f{AAf}}}Fh}{{{f{DbAAf}}c}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}c{f{BCb}}}{{A`{{f{DbAAf}}n}}}BCd}{{{f{DbAAf}}Ab}{{f{DbAAf}}}}{{{f{AAf}}{f{Bj}}{Cf{In}}}{{A`{AAfn}}}}{{{f{DbAAf}}{f{Bj}}{Cf{In}}}{{f{DbAAf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{BF`}}}BF`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}BF`}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{BF`}}{f{BF`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BF`}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{BF`}}{f{Dbc}}}bADf}`{{}Fh}{ce{}{}}``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BD`}}}{{A`{AAfn}}}}`{{{f{BFd}}}{{f{{Bh{{BFf{In}}}}}}}}{{{f{BD`}}c}{{A`{AAfn}}}{{Af{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{{f{Bn}}}{{l{Ah}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000{{{f{BFd}}}BFd}{{{f{Bn}}}Bn}{{{f{BD`}}}BD`}{{{f{BFh}}}BFh}{{{f{c}}{f{Dbe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFd}{{}Bn}{Fh{{f{c}}}{}}00{{{f{BFj}}}f}11111{Fh{{f{Dbc}}}{}}0000000`{{BFlc}{}BFn}{Fhb}000{{{f{DbBFd}}}b}1111{{{f{BFd}}{f{BFd}}}d}{{{f{Bn}}{f{Bn}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BG`}}}In}{{{f{BFd}}}{{f{{Bh{In}}}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBFd}}}{{f{Db{G`{In}}}}}}{{{f{BFd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Bn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BD`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BFh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{Bj}}BFh}Eh}{cc{}}000{{{G`{{Gj{{G`{In}}{G`{{BFf{In}}}}}}}}}BFd}1{{{G`{{G`{{Gj{In{BFf{In}}}}}}}}}BFd}{{{G`{{Gj{In{BFf{In}}}}}}}BFd}{BFdBn}444{BGbBFh}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cBFd{{Hf{}{{Ch{{Gj{In{BFf{In}}}}}}}}}}{cBFd{{If{}{{Ch{{Gj{In{BFf{In}}}}}}}}}}{{{f{Bn}}Fh}BG`}{{{f{BD`}}}{{f{Bn}}}}{{{f{DbBD`}}}{{f{DbBn}}}}{{{f{Bn}}}{{l{En}}}}{{{f{BGd}}dd}{{A`{Bnn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{{{f{DbBn}}}{{f{DbBFd}}}}{{}Fh}0000000{ce{}{}}0000000{BnBFd}1{{{f{BFd}}}}{BFd}301{{{f{BG`}}}d}{{{f{Bn}}}d}{{{f{BFd}}}d}{{{f{BFd}}}{{BGh{{BGf{{Fj{In}}}}{Fj{{BFf{In}}}}}}}}{{{f{Bn}}}BGj}{{{f{BD`}}}{{G`{Ab}}}}{{{f{BD`}}{Cf{{Gj{GfFh}}}}}{{G`{Ab}}}}={{{f{BG`}}}Fh}{{{f{Bn}}}Fh}?????{{{G`{In}}{G`{{BFf{In}}}}d}BFd}{{{f{AAf}}{G`{Ab}}Bn{Cf{{G`{Eh}}}}}BD`}{{{f{DbBGj}}}Cf}{{{f{DbBGj}}Fh}Cf}{{{f{BD`}}c}{{A`{AAfn}}}{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{{f{c}}}{}{}}{{{f{Bn}}}BFl}{{{f{BD`}}M`Oh}{{A`{AAfn}}}}{{BD`e}BD`{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{Bn}}GfFh}BFj}{{{f{DbBFd}}}b}{{{f{DbBn}}}b}{{{f{BD`}}Bf}{{A`{AAfn}}}}{{{f{BD`}}}{{A`{AAfn}}}}{Bn{{G`{In}}}}0{BD`Bn}{{{f{DbBD`}}}Bn}{{{f{c}}}e{}{}}000{{{f{c}}}Eh{}}{c{{A`{e}}}{}{}}000000000000000{{{f{c}}}AAd{}}0000000{BnBn}{{{f{Bn}}}{{f{BFd}}}}{{{f{Bn}}}{{f{{G`{{A@j{In}}}}}}}};{ce{}{}}0000000`````{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IbId}}{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{}}}}IbId}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IbId}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IbId}}{{{f{{Bh{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{Bh{c}}}}{f{Hn}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{G`{{A@j{In}}}}}}{f{{Bh{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{Bn}}}Ab}{{BHbBHb}BHb}0`{{{f{BHd}}{f{AAf}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bj}}n}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{DbBHf}}Il}{{Cf{b}}}}{{{f{DbBHh}}{f{Il}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Dbc}}}{{f{Dbe}}}{}{}}00{{{f{BHf}}}BHf}{{{f{BHh}}}BHh}{{{f{BCn}}}BCn}{{{f{c}}{f{Dbe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Bh{c}}}}}Ef{{I`{Ef}}}}{{}BCn}{Fh{{f{c}}}{}}00{Fh{{f{Dbc}}}{}}00{Fhb}00{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{Gj{{f{Ef}}Fh}}}BHf}1{{{Gj{{f{Ef}}Fh}}}BHh}2{{eFh}BCb{{B@`{Ef}}}{{Cn{}{{Ch{{G`{{Gj{Ehc}}}}}}}}}}{{}Fh}00{ce{}{}}00{BHfAb}{BHhAb}{{{f{Ef}}Fh}BHf}{{{f{Ef}}Fh}BHh}{{{G`{Il}}}BCn}{{{f{DbBHf}}Fh}Ab}{{{f{DbBHh}}Fh}Ab}{{{f{{Bh{BCn}}}}{Cf{Fh}}}{{A`{BCbn}}}}0{{{f{{Bh{BCn}}}}{Cf{Fh}}}{{A`{{G`{Ef}}n}}}}{{{f{c}}}e{}{}}00{c{{A`{e}}}{}{}}00000{{{f{c}}}AAd{}}00<<<{{{f{{Bh{AAf}}}}}{{A`{AAfn}}}}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAf{f{{Bh{{f{Bj}}}}}}{f{{Bh{{f{Bj}}}}}}{Cf{{f{Bj}}}}{f{AAf}}}AAf}{{BEbc}{{A`{AAfn}}}{{Dj{BHj{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BIb}}{f{{Bh{In}}}}dd}AAf}{{{f{BIb}}{f{AAf}}{f{Ab}}{f{Ab}}BId}{{A`{AAfn}}}}{{{f{Bj}}{f{Bj}}}Eh}{{{f{BEl}}Fh}{{Gj{BElBEl}}}}{{{f{BIf}}{f{{Bh{A@`}}}}Lf}AAf}0{{{f{BIf}}{f{{Bh{A@`}}}}}AAf}0{{{f{BIh}}{Cf{{G`{{f{Bj}}}}}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{BEbd}BEb}{{{BIj{c}}{Cf{{Mf{BIl}}}}}{{BIj{c}}}BIn}{{{f{Ab}}}{{A`{Abn}}}}{BJ`BJ`}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}0{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}1{{BJfc}BEb{{Hj{{Bh{BJ`}}}}}}5`{{BJ`{f{Bj}}}BJ`}{{}BJ`}{{BJ`d}BJ`}{{}BJh}{c{{A`{BJ`n}}}{{Hj{{Bh{BJ`}}}}}}{{{f{{Mf{ce}}}}}{{f{e}}}{}BJj}{{BJld}BJl}`{{{f{BJn}}}d}00`{{BJ`c}BJ`{{B@`{BJ`}}}}{{{Mf{BJn}}BK`}{{A`{BEbn}}}}75{{BJ`cd}BJ`{{B@`{BJ`}}}}{{{f{DbABl}}}b}{{{f{DbABn}}}b}{{{f{DbABl}}{Cf{{f{Ab}}}}}{{A`{bn}}}}{{{f{DbABn}}{Cf{c}}}b{}}{{{f{DbABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DbABn}}c}b{}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{c}}}}}}Dl}}{{BJfc{Mf{BCb}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{{f{BJ`}}{f{Dbc}}f}{{A`{BKfn}}}{{Af{{f{BJ`}}f}{{Ad{{A`{BKfn}}}}}}}}{{{f{AHb}}{f{Dj}}}AHb}{{{f{AHb}}{f{Dj}}}{{l{c}}}Dh}{{BJ`c{f{{Bh{BJ`}}}}{BKd{{Mf{BKb}}}}}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BKh{f{{Bh{BJ`}}}}dd}BJ`}{{ce{BKd{{Mf{BKb}}}}d}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}{{Hj{{Bh{BJ`}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}i{f{Db{Bh{g}}}}}b{}{}{}{{Dj{{Cf{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AH`{}{{AGn{c}}}}}}g}{{AH`{}{{AGn{c}}}}}{}{}{{Dj{e}{{Ad{c}}}}Dl}}{{BJ`BJ`GfEf}BJ`}{BEl{{Mf{Cj}}}}{{{f{BKj}}}{{Cf{Fh}}}}{BKlBJ`}{BKnBJ`}{BJ`BJ`}3210{{{f{AHd}}El}{{l{En}}}}{{BJ`El}BJ`}{{{f{BL`}}El}{{l{En}}}}{{cF`}BJ`{{Hj{{Bh{BJ`}}}}}}{{{f{AHd}}{f{{Bh{Ab}}}}{f{F`}}}{{A`{{l{En}}n}}}}{{{f{AHf}}}{{A`{{l{En}}n}}}}6{{{f{BL`}}}{{A`{{l{En}}n}}}}{cBJ`{{B@`{BJ`}}}}{{{f{BLb}}}{{f{{Bh{Ob}}}}}}``{BJ`BKl}{eAMh{}{{Hf{}{{Ch{c}}}}}}{cBEl{{Hf{}{{Ch{b}}}}}}{cBEl{{Hf{}{{Ch{{Cf{b}}}}}}}}2{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{AFnc}BEl{{Hf{}{{Ch{{Cf{b}}}}}}}}{{AFnc}BEl{{Hf{}{{Ch{b}}}}}}`{{{f{Db{BLd{c}}}}}{{A`{BCln}}}BLf}{{{f{BJn}}}{{f{AG`}}}}{{{f{BL`}}}{{f{AG`}}}}{{{f{BLh}}}{{f{AG`}}}}{{{f{BEl}}}{{f{AG`}}}}{{{f{DbBL`}}}{{f{DbAG`}}}}{{{f{DbBEl}}}{{f{DbAG`}}}}{{{f{Ln}}}Il}{{{f{BLj}}}{{f{{l{Bd}}}}}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Eh}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Eh}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{{Mf{c}}}}}BLn{BM`On}}{{{f{BMb}}}{{f{{l{Ah}}}}}}{{{f{{Mf{ce}}}}}{}OnBJj}{{{f{{Mf{c}}}}}NjBMd}{{{f{BMf}}}{{f{BJ`}}}}{{{f{{Mf{ce}}}}}{{f{c}}}OnBJj}{{{f{AMl}}}{{f{Ef}}}}{{{f{BMh}}}{{f{Ab}}}}{{{f{DbBL`}}}{{A`{Fhn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bh{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{BMj}}}{{f{{l{An}}}}}}{{{G`{BJ`}}}BJ`}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{Mf{{BMl{c}}e}}}{{Mf{ce}}}{}BJj}{{{Mf{{Bh{{BMl{c}}}}e}}}{{Mf{{Bh{c}}e}}}{}BJj}{{{f{Bj}}}BJ`}{{BJ`{Cf{In}}}BJ`}{{{f{BMn}}}{{A`{{l{An}}n}}}}{{{f{BMn}}}{{l{An}}}}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{{{BIj{{Cl{BIn}}}}{Cf{{Mf{BCb}}}}}{{A`{BN`n}}}}{{{BNb{c}}{f{BCb}}}{{A`{{BNd{c}}n}}}BNf}{{{BNh{c}}{f{BCb}}}{{A`{{BNj{c}}n}}}BNf}{{{BNl{c}}Fh}{{A`{BNnn}}}BIn}{{{BO`{c}}{f{BCb}}}{{A`{{BOb{c}}n}}}BNf}{{{f{Db{BIj{c}}}}}{{A`{BOdn}}}BIn}`{BJ`BOf}{{BJ`BOhBJ`}BJ`}{{BJhBJh}BJh}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJh}}BJh}b}210{{{f{BJh}}}In}0321{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}{{f{c}}}OnBJj}111111111111111111{{{f{Dbc}}}{{f{Dbe}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BEbIncF`}BEb{{Hj{{Bh{BJ`}}}}}}{BEl{{Cl{Cj}}}}``{BEbBEb}```{{{f{BOj}}{f{Bj}}}{{A`{Ehn}}}}{{BOl{G`{BJ`}}}{{A`{BJ`n}}}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{BLh}}{f{Db{Bh{Ab}}}}}{{A`{{Cf{Ab}}n}}}}{{{f{BOn}}AbAb}{{A`{Abn}}}}{{BOl{G`{BJ`}}}BJ`}{{{f{C@`}}}b}{{BJ`Ef}BJ`}{{{f{BL`}}{f{Ef}}Fd}{{A`{Abn}}}}{{BEb{C@b{{f{Bj}}EfA@d}}d}BEb}{{{f{AHh}}{f{Ef}}}{{A`{Abn}}}}3{{{f{ANn}}{f{Ef}}}{{A`{Abn}}}}{{BEbEfd}BEb}2{{{f{AHh}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{ANn}}{f{Ef}}Fd}{{A`{Abn}}}}{{BJ`EfFd}BJ`}`{BJ`C@d}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{BJ`BJ`}{{{f{C@f}}}{{A`{Abn}}}}1`{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{BEl}}Fh}d}{{{BNl{c}}{f{BCl}}}{{A`{{BNl{c}}n}}}BIn}{{{f{C@j}}{f{Ab}}}{{A`{Abn}}}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@j}}c}{{A`{Abn}}}Bb}{{{f{BL`}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fh}}}}}}}}``{{{f{BL`}}}{{f{{G`{{Cl{Cj}}}}}}}}{{{f{DbBL`}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BJ`BJ`}BJ`}10{{{f{C@`}}}C@`}{{{f{BEb}}}BEb}{{{f{BJf}}}BJf}{{{f{BK`}}}BK`}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{BDb}}}BDb}{{{f{BEd}}}BEd}{{{f{CAf}}}CAf}{{{f{BFb}}}BFb}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{AAh}}}AAh}{{{f{A@`}}}A@`}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{BId}}}BId}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{BMf}}}BMf}{{{f{BJ`}}}BJ`}{{{f{CFb}}}CFb}{{{f{BOh}}}BOh}{{{f{{BKd{c}}}}}{{BKd{c}}}AD`}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{BKh}}}BKh}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{BOl}}}BOl}{{{f{BJh}}}BJh}{{{f{CH`}}}CH`}{{{f{{Mf{ce}}}}}{{Mf{ce}}}On{BJjAD`}}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{CHh}}}CHh}{{{f{Oj}}}Oj}{{{f{BEj}}}BEj}{{{f{BEl}}}BEl}{{{f{Ln}}}Ln}{{{f{BCb}}}BCb}{{{f{B@d}}}B@d}{{{f{BCl}}}BCl}{{{f{Oh}}}Oh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{BL`}}}{{Mf{BL`}}}}{{{f{c}}{f{Dbe}}}b{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{c}}}b{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CI`}}}{{Cf{{f{CIb}}}}}}{{{f{C@l}}}{{Cf{{f{CIb}}}}}}{{{f{CA`}}}{{Cf{{f{CIb}}}}}}``{{{f{BFb}}{f{BFb}}}BAh}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}BAh{CIdOn}BJj}{{{f{{Bh{BJ`}}}}}BJ`}{{BJlCBn}BJl}{{{f{CBn}}{f{CCb}}}d}`{{{f{{Bh{Ab}}}}}{{A`{Abn}}}}{{{f{Bj}}}BJ`}{BEb{{A`{AAfn}}}}{c{{A`{{G`{AAf}}n}}}{{If{}{{Ch{BEb}}}}}}{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{ADh{f{Bj}}}{{l{c}}}Dh}{{ADj{f{{l{c}}}}}{{l{c}}}Dh}10{{ADj{f{Bj}}Ef}{{l{c}}}Dh}0{BEb{{A`{C@`n}}}}{cBJ`{{BEh{Eh}}}}{{{f{CHh}}Fh}CIf}``{{{f{BIh}}{G`{{f{Bj}}}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}`{{{f{c}}{f{e}}}BAh{}{}}0{BJhBJh}``{{{f{CEh}}}{{A`{{Mf{BCb}}n}}}}{{cCHf}{{A`{BEbn}}}{{Hj{{Bh{BEb}}}}}}{{{f{BMn}}{f{{l{An}}}}}{{l{An}}}}{{ed}{{A`{BJ`n}}}{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{{f{CI`}}{G`{BEb}}}{{A`{BEbn}}}}{{{f{C@l}}{G`{BEb}}}{{A`{BEbn}}}}44{e{{A`{BJ`n}}}{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{c{f{Bj}}d}BJ`{{Hj{{Bh{BJ`}}}}}}{{BKlc}BJ`{{B@`{BJ`}}}}{{{f{CIh}}{f{{Bh{Bf}}}}}{{l{Aj}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{Aj}}n}}}}{{BKnc}BJ`{{B@`{BJ`}}}}{{{f{BJh}}BJh}d}{{{f{BCb}}{f{Bj}}}d}{{{f{CIh}}{f{{l{Bd}}}}}{{l{Aj}}}}{{{f{BMn}}{f{{l{An}}}}dd}{{A`{{l{Aj}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{Aj}}n}}}}{{{f{Cj}}{f{AFn}}}{{Cl{Cj}}}}{{{f{Ab}}Fh}{{A`{{l{En}}n}}}}{BEbBEb}{{{CIj{c}}}{{A`{Fhn}}}BIn}{BJ`BJ`}{{{f{BMn}}{f{Bj}}d}{{A`{{l{En}}n}}}}{{{f{BMn}}{f{{l{An}}}}d}{{A`{{l{En}}n}}}}{{{f{CIl}}Bf{Cf{Bf}}{Cf{{f{CBf}}}}Bfd}{{A`{Fhn}}}}{{{ANh{Bj}}}Ef}{{{f{BIb}}{f{{Bh{A@`}}}}d}AAf}`{{BEbBEb{Cf{Eh}}}BEb}{{{f{CIn}}{f{AAf}}{Cf{{f{Bj}}}}{Cf{{Gj{GfFh}}}}}{{A`{AAfn}}}}{{{f{CIn}}{f{AAf}}{Cf{{Gj{GfFh}}}}d}{{A`{{Gj{AAfAAf}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BJ`d}BJ`}{{BJ`ced}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{Hj{{Bh{BJ`}}}}}}212121{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{Hj{{Bh{BJ`}}}}}}32{{CJ`BJ`Fhd}BJ`}`{{{f{BEl}}}{{f{AFn}}}}{{{f{B@d}}}{{f{AFn}}}}```{{BJ`BJ`BFbCAh}BJ`}`{CG`BJ`}`{{BJ`BJ`BFbCAh{Cf{Kf}}{Cf{Eh}}}BJ`}0{ALnGf}00{{{f{CJb}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}{{{f{BFb}}}Gf}`{{{f{BFb}}}d}```{{}b}{cbBJj}{{}BEb}{{}BK`}{{}C@n}{{}CAb}{{}CJh}{{}BDb}{{}BEd}{{}CAl}{{}CB`}{{}CBb}{{}CBd}{{}CBj}{{}BId}{{}CBl}{{}CBn}{{}CC`}{{}CCf}{{}CCh}{{}CCj}{{}CCl}{{}CCn}{{}CD`}{{}CDf}{{}CDh}{{}CDl}{{}CDn}{{}CE`}{{}CEh}{{}BJ`}{{}{{BKd{{Mf{CJj}}}}}}{{}{{BKd{{Mf{BOn}}}}}}{{}{{BKd{{Mf{BKb}}}}}}{{}CG`}{{}CGb}{{}CGf}{{}CGh}{{}CGj}{{}CGl}{{}BJh}{{}{{Mf{{Bh{c}}}}}{}}{{}{{Mf{Bj}}}}{{}{{Mf{c}}}CJl}{{}{{Mf{CJn}}}}{{}CHb}{{}CHd}{{}CHf}{{}Oj}{{}BEj}{{}BCb}{{}B@d}{{}BCl}{{}Oh}`{{}{{AAb{{G`{AAh}}{G`{A@`}}}}}}{Fh{{f{c}}}{}}0{{{f{{ALj{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BKd{c}}}}}f{}}22222222222222222222{{{f{{Mf{ce}}}}}{{f{c}}}OnBJj}33333333333333333{Fh{{f{Dbc}}}{}}0{{{f{Db{ALj{c}}}}}{{f{Db}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CEh}}}{{A`{Ehn}}}}{{{f{BEb}}}{{A`{Ehn}}}}0001{{{f{{Mf{c}}}}}{{f{Bj}}}{ALbOn}}{{{f{B@d}}{f{CK`}}}{{A`{CKbn}}}}```{{{f{Ab}}GfCKd}{{A`{Abn}}}}{{BKnGfCKd}BJ`}{{BJ`GfCKd}BJ`}{{BJhBJh}BJh}{{{f{CEh}}}{{A`{{`{BC`}}n}}}}``{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{Mf{AG`c}}}{{A`{{Mf{ec}}{Mf{AG`c}}}}}BJj{AG`IbId}}{{{Mf{AG`c}}}{{Mf{ec}}}BJj{AG`IbId}}{{{f{{Mf{ce}}}}}{{CKf{ce}}}On{AD`BJj}}{Fhb}0000000{{{f{DbC@`}}}b}1{{BEbe}BEb{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Db{Mf{ce}}}}}bOnBJj}333333333333333333{BJ`BJ`}2{{BEb{Cf{{G`{BJ`}}}}}BEb}1{{{f{BL`}}}Ab}{{{f{{Kb{KhKd}}}}{f{Kf}}{f{AM`}}}{{Kb{KnKd}}}}`{BJ`CKh}{{{f{ANn}}}{{f{Ef}}}}{{{f{BL`}}}{{f{Ef}}}}{{{f{Ln}}}{{f{Ef}}}}`{{{f{Ef}}}BJ`}{cBJ`{{Hj{{Bh{Ef}}}}}}`{CGbBJ`}{{}BJh}{{}CHb}{{{f{c}}}e{}{{CKl{CKj}}}}0`{{{f{CIh}}{f{{Bh{Bf}}}}}{{l{Aj}}}}{{{f{CIh}}{f{{l{Bd}}}}}{{l{Aj}}}}{{BFb{f{Ef}}{f{Bj}}}{{A`{bn}}}}{{BFb{Cf{{f{Bj}}}}{f{Bj}}}{{A`{bn}}}}{{{f{c}}{f{c}}}{{A`{bn}}}CKn}{{{f{CL`}}{f{Bj}}}{{A`{bn}}}}`{{{f{CAd}}{f{CAd}}}d}{{{f{BDb}}{f{BDb}}}d}{{{f{BEd}}{f{BEd}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{AAh}}{f{AAh}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{BId}}{f{BId}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{BMf}}{f{BMf}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CFb}}{f{CFb}}}d}{{{f{BOh}}{f{BOh}}}d}{{{f{{BKd{{Mf{c}}}}}}{f{{BKd{{Mf{c}}}}}}}dOn}{{{f{{BKd{Ab}}}}{f{{BKd{Ab}}}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{BKh}}{f{BKh}}}d}{{{f{CGd}}{f{CGd}}}d}{{{f{CGf}}{f{CGf}}}d}{{{f{CGh}}{f{CGh}}}d}{{{f{CGj}}{f{CGj}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{{Mf{Cj}}}}{f{Cj}}}d}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLbOn}BJj}{{{f{{Mf{CLd}}}}{f{CLd}}}d}{{{f{CKb}}{f{CKb}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{BEj}}{f{BEj}}}d}{{{f{BEl}}{f{BEl}}}d}{{{f{BEl}}{f{{f{Cj}}}}}d}{{{f{BCb}}{f{BCb}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{BCl}}{f{BCl}}}d}{{{f{Oh}}{f{Oh}}}d}{{{f{CHn}}{f{CHn}}}d}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CLfBJ`d}BJ`}``{{BJ`c}BJ`{{BEh{Eh}}}}{{BJ`c}BJ`{{Hj{{Bh{Ef}}}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBj}}}{}CLh{}}{{{f{{Bh{CIl}}}}d{Cf{{f{CIb}}}}}{{A`{{Mf{{Bh{CIl}}}}n}}}}{{{f{{Bh{CIl}}}}d{Cf{{f{CIb}}}}d}{{A`{{Gj{{Mf{{Bh{CIl}}}}Fh}}n}}}}{{{f{{Bh{c}}}}{f{{Bh{c}}}}}d{{Hj{CLj}}}}{{{f{BEb}}d}{{A`{Ehn}}}}{{BEbe}BEb{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{{f{AHn}}}{{A`{Abn}}}}{BJ`BJ`}{{{f{AHn}}}{{A`{{Gj{Ab{Gh{Gf}}}}n}}}}`{{{f{DbBJh}}c}b{{Hf{}{{Ch{BJh}}}}}}{{BJ`BJ`BJ`}BJ`}{{{f{BMn}}{f{{l{An}}}}Fh}{{A`{{l{An}}n}}}}{A@`{{Gj{InIn}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{Bj}}{f{Ef}}}{{A`{Abn}}}}{{{f{ABl}}}d}{{{f{C@`}}}{{Cf{{A`{AAfn}}}}}}{{BEbFh}{{A`{AAfn}}}}{{{f{C@`}}}{{A`{AAfn}}}}{{{f{ABl}}}{{f{Ob}}}}{{{f{BL`}}}{{Dn{Ob}}}}{{CLlGf}BJ`}{{CLl{f{Bj}}}BJ`}{{CLl{f{{Bh{c}}}}}BJ`{{Hj{Bj}}}}{{{f{BEl}}}{{f{{Bh{B@d}}}}}}`{{BEbc}BEb{{B@`{BJ`}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}`10{{BJ`AHj}BJ`}{{{f{AI`}}c}{{A`{AI`n}}}{}}{{{f{AIb}}{f{{l{Aj}}}}}{{A`{{l{c}}n}}}Dh}{{{f{BL`}}{f{{l{Aj}}}}}{{A`{Abn}}}}{{BEbBJ`}BEb}5{{BClc}BCl{{Dj{Fh{f{B@d}}}{{Ad{d}}}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{En}}n}}}}{{{f{BMn}}{f{{l{An}}}}dd}{{A`{{l{En}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{En}}n}}}}{CLn{{A`{AAfn}}}}{{{f{DbCM`}}{f{DbAAf}}}{{A`{bn}}}}{ABn{{l{c}}}Dh}{{ANl{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{BJlBEb}{CI`{{A`{BEbn}}}}{{{BIj{c}}}{{A`{AAfn}}}BIn}{C@l{{A`{BEbn}}}}{CA`{{A`{BEbn}}}}{{{f{Db{BNb{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{CMb{c}}}{{A`{AAfn}}}BIn}{{{BLd{c}}}{{A`{AAfn}}}BLf}{{{f{Db{CMd{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{f{Db{BNh{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{f{Db{CMf{c}}}}{f{DbAAf}}}{{A`{bn}}}BNf}{{{CMh{c}}}{{A`{AAfn}}}BIn}{{{CIj{c}}}{{A`{AAfn}}}BIn}{{{BNl{c}}}{{A`{AAfn}}}BIn}{{{BO`{c}}{f{DbAAf}}}{{A`{Jhn}}}BNf}{{{f{DbABl}}}{{l{Ah}}}}><;{{{CMb{c}}{Cf{{Mf{BIl}}}}d}{{A`{AAfn}}}BIn}{{{f{BNn}}Fh}d}{{}BJ`}{BEbBEb}{BKnBJ`}{BJ`BJ`}`0```{{}{{BKd{{Mf{BKb}}}}}}{{{f{C@f}}}{{A`{Abn}}}}2{{BJ`BJ`}BJ`}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Db{Mf{AFd}}}}}{{A`{bBBj}}}}{{{f{BLh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BDb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BFb}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CAh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CAl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{AAh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{A@`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CB`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CMj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BId}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CBn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CC`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCb}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CCd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CCh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CCn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CD`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CDn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CE`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CEf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJ`}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{{BKd{c}}}}{f{DbH`}}}{{A`{bHb}}}{}}{{{f{CFd}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFf}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFj}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFl}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CFn}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{BKh}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{CG`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CGn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BOl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BJh}}{f{DbH`}}}{{A`{bHb}}}}0000{{{f{CH`}}{f{DbH`}}}{{A`{bHb}}}}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}{BC`On}BJj}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}{AGbOn}BJj}{{{f{{Mf{ce}}}}{f{DbH`}}}{{A`{bHb}}}OnBJj}{{{f{CKb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHd}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Oj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BEl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCb}}{f{DbH`}}}{{A`{bHb}}}}{{{f{B@d}}{f{DbH`}}}{{A`{bHb}}}}{{{f{BCl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Oh}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHj}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHl}}{f{DbH`}}}{{A`{bHb}}}}{{{f{CHn}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Bj}}BFh}Eh}```{{BJ`ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{Hj{{Bh{BJ`}}}}}}{{BJld}BJl}``{{{f{Bj}}c}{{A`{BJ`n}}}{{Hj{{Bh{BJ`}}}}}}{{BJ`{Cf{In}}}BJ`}{cc{}}00000000{CEhBEb}{BJfBEb}2222222222222222222222222222222222{InAAh}3333333{{{f{Bj}}}CBf}444{CCbBId}55555555555555555555555555555{M`BJ`}{NdBJ`}{NjBJ`}{NhBJ`}{InBJ`}{JhBJ`}{JfBJ`}{GfBJ`}{{{f{Bj}}}BJ`}{dBJ`}?{MnBJ`}{BfBJ`}{BMfBJ`}{cc{}}0{CMl{{BKd{{Mf{BLh}}}}}}{CMn{{BKd{{Mf{BLh}}}}}}{CFh{{BKd{{Mf{BLh}}}}}}3{CFd{{BKd{{Mf{BLh}}}}}}{CN`{{BKd{{Mf{BLh}}}}}}{CFn{{BKd{{Mf{BLh}}}}}}{CFf{{BKd{{Mf{BLh}}}}}}{BKh{{BKd{{Mf{BLh}}}}}}{CFl{{BKd{{Mf{BLh}}}}}}{CNb{{BKd{{Mf{BLh}}}}}}:::::::{CFlBKh}{CFfBKh}{CMlBKh}{CFdBKh}>>>>>{CGlCGj}??????{{{f{CLj}}}{{Mf{CLj}}}}{c{{Mf{c}}}{}}{{{Cl{ce}}}{{Mf{ce}}}OnBJj}{{{A@j{c}}}{{Mf{{Bh{c}}}}}{}}{{{f{{Bh{c}}}}}{{Mf{{Bh{c}}}}}AD`}{{{f{CJn}}}{{Mf{CJn}}}}{CNd{{Mf{CNf}}}}{{{f{Bj}}}{{Mf{Bj}}}}{CNhc{}}{cc{}}{{{Mf{Bj}}}{{Mf{{Bh{Bf}}}}}}{{{f{CNf}}}{{Mf{CNf}}}}{CIl{{Mf{CLj}}}}{{{G`{ce}}}{{Mf{{Bh{c}}e}}}{}{BJjAD`}}{Eh{{Mf{Bj}}}}{{{Dn{c}}}{{Mf{c}}}{CNjOn}}{CNl{{Mf{CJn}}}}{CNnCKb}888888888{CO`BEl}{CObBEl}:{BClBCb};{{{f{{Mf{BCl}}}}}BCb}{{{Mf{BCl}}}BCb}{{{f{{Bh{Ab}}}}}BCb}{{{f{BCn}}}BCb}{{{f{BCl}}}BCb}{cc{}}{{{G`{B@d}}}BCl}11111{In{{Cf{BJh}}}}{InBJh}00{{c{Cf{Hn}}}COd{}}{{{COf{Gf}}{COf{Bf}}{Cf{Hn}}}COh}{{{COf{Gf}}{COf{Bf}}{Cf{Hn}}}COj}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}000{c{{ALj{{l{Aj}}}}}{{Hf{}{{Ch{d}}}}}}{c{{ALj{{l{e}}}}}{{Hf{}{{Ch{}}}}}Al}{cBJh{{Hf{}{{Ch{BJh}}}}}}{e{{Mf{{Bh{c}}}}}{}{{Hf{}{{Ch{c}}}}}}{eBCb{{B@`{Ob}}}{{Hf{}{{Ch{c}}}}}}{{gFh}{{COl{Gf}}}Hj{{Hf{}{{Ch{{Cf{c}}}}}}}{{Hf{}{{Ch{{Cf{e}}}}}}}}0{e{{COl{Gf}}}{{Hf{}{{Ch{{Cf{d}}}}}}}{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{{Cf{c}}}}}}}}{{gAFn}{{COl{Gf}}}BGn{{Hf{}{{Ch{{Cf{c}}}}}}}{{Hf{}{{Ch{{Cf{e}}}}}}}}873{{{f{Bj}}e}ADd{}{{Cn{}{{Ch{c}}}}}}{{{f{Bj}}}{{Cf{BJh}}}}{c{{ALj{{l{e}}}}}{{If{}{{Ch{}}}}}Al}{e{{Mf{{Bh{c}}}}}Ib{{If{}{{Ch{c}}}}}}`{c{{A`{{CIj{AFd}}n}}}{{B@`{CIl}}}}{{}{{Mf{c}}}On}{c{{Mf{ec}}}BJjOn}{{{f{Bj}}{f{{Bh{c}}}}}ADd{}}{{{f{Bj}}{f{{Bh{{Cf{c}}}}}}}ADd{}}{{{f{Bj}}}{{A`{COn}}}}{c{{ALj{{l{e}}}}}{{Ij{}{{Ch{}}}}}Al}{c{{ALj{{l{Aj}}}}}{{Ij{}{{Ch{d}}}}}}{Ef{{BKd{{Mf{BKb}}}}}}{{{f{Bj}}c}D@`{}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIbId}}`{{{f{Bj}}cFh}AId{}}{{FhcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{}CHb}{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{Bj}}Fh}AIf}{{FhAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{FhAFn}BEl}``{{BJ`c{BKd{{Mf{BKb}}}}D@d}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}`{{BJ`c}BJ`{{B@`{BJ`}}}}{{BJ`FhFh}BJ`}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}{{{f{BL`}}Fh}{{A`{Iln}}}}{{BKlBJ`d}BJ`}{{BKnBJ`d}BJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}6{{{f{BCb}}{f{Bj}}}{{Cf{{f{Ef}}}}}}{{{f{AIh}}Fh}{{A`{Iln}}}}{{{f{ANn}}Fh}{{A`{Iln}}}}{{{f{AIh}}Fh}Il}{{{f{ANn}}Fh}Il}{{{f{BCb}}Fh}{{Cf{{Gj{{f{{BA`{B@n}}}}{f{Ef}}}}}}}}{{{f{DbBCb}}Fh}{{Cf{{Gj{{f{Db{BA`{B@n}}}}{f{DbEf}}}}}}}}{C@dBJ`}{{{f{BEb}}}BJh}{{{f{CH`}}}Ef}{{}Ef}{{{f{CAn}}GfCAh{Cf{{f{AM`}}}}}{{A`{CAfn}}}}00{{{f{CJj}}{f{BCb}}D@h{f{Ob}}{f{Ob}}}{{Cf{Ob}}}}{{{f{BKb}}{f{BCb}}D@h{f{{Bh{Ob}}}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bj}}}{{Cf{Ob}}}}{{{f{AFn}}}{{f{{Bh{B@d}}}}}}{{{f{BLb}}}Fh}{{{f{BCb}}{f{Bj}}}{{Cf{{Gj{Fh{f{{BA`{B@n}}}}{f{Ef}}}}}}}}{{{f{{Bh{Bf}}}}}{{Cf{Fh}}}}{{{f{Db{BNl{c}}}}}{{A`{{f{{Mf{CHh}}}}n}}}BIn}{{{f{BL`}}}{{Cf{{Mj{Mh}}}}}}{{{f{Db{Mf{ce}}}}}{{Cf{{f{Dbc}}}}}OnBJj}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}OnBJj}{{{f{D@j}}}{{G`{{f{Bj}}}}}}{{{f{BCb}}}{{G`{{f{Bj}}}}}}{{{f{BCl}}}{{G`{{f{Bj}}}}}}{{{f{{CKn{}{{D@l{c}}}}}}}{{G`{{Gj{{f{Bj}}c}}}}}{AGbCLb}}{{{f{BCb}}}{{G`{{Gj{{f{Bj}}}}}}}}{{{f{BCl}}}{{G`{{Gj{{f{Bj}}}}}}}}{{{f{BL`}}Fh}{{Cf{{f{Jb}}}}}}{{{f{BL`}}FhFh}{{Cf{{f{Jb}}}}}}{{{f{BLh}}}{{Cf{{BKd{{Mf{BKb}}}}}}}}{{{f{CAn}}CAfCAhKf{Cf{{f{AM`}}}}CAl}{{A`{D@nn}}}}{{{f{CB`}}}{{Mf{CBb}}}}{{{f{Dbc}}}{{A`{DA`n}}}{BLfBInOn}}{{{f{CMj}}{f{BCb}}}{{A`{{Mf{BCb}}n}}}}{{cFh}{{G`{{Gj{FhFh}}}}}{{Cn{}{{Ch{Fh}}}}}}{{{f{BAb}}Fh}Il}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{BL`}}Fh}Il}{{{f{CI`}}}d}{{{f{C@l}}}d}`{{BEbe}BJf{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{{f{DAb}}{G`{Ab}}{f{BDb}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}{{BEbBJ`cBDb}BJf{{Hj{{Bh{BJ`}}}}}}2{{BFbBFb{f{{Bh{Gf}}}}CAhKf{Cf{AM`}}}{{A`{{G`{{A@j{In}}}}n}}}}{{CAn{f{{Bh{Gf}}}}CAhKf{f{{Cf{Eh}}}}ddCAl}{{Gj{{G`{{A@j{In}}}}{G`{Gf}}{G`{Gf}}}}}}{{{f{BGd}}dd}{{A`{Bnn}}}}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}21`{{{f{BL`}}}d}{{{f{BDb}}{f{Dbc}}}bADf}{{{f{BEd}}{f{Dbc}}}bADf}{{{f{BFb}}{f{Dbc}}}bADf}{{{f{CAh}}{f{Dbc}}}bADf}{{{f{CAj}}{f{Dbc}}}bADf}{{{f{CAl}}{f{Dbc}}}bADf}{{{f{CB`}}{f{Dbc}}}bADf}{{{f{CBb}}{f{Dbc}}}bADf}{{{f{CBd}}{f{Dbc}}}bADf}{{{f{CBf}}{f{Dbc}}}bADf}{{{f{CBh}}{f{Dbc}}}bADf}{{{f{CBj}}{f{Dbc}}}bADf}{{{f{BId}}{f{Dbc}}}bADf}{{{f{CBl}}{f{Dbc}}}bADf}{{{f{CBn}}{f{Dbc}}}bADf}{{{f{CC`}}{f{Dbc}}}bADf}{{{f{CCb}}{f{Dbc}}}bADf}{{{f{CCd}}{f{Dbc}}}bADf}{{{f{CCf}}{f{Dbc}}}bADf}{{{f{CCh}}{f{Dbc}}}bADf}{{{f{CCj}}{f{Dbc}}}bADf}{{{f{CCl}}{f{Dbc}}}bADf}{{{f{CCn}}{f{Dbc}}}bADf}{{{f{CD`}}{f{Dbc}}}bADf}{{{f{CDb}}{f{Dbc}}}bADf}{{{f{CDd}}{f{Dbc}}}bADf}{{{f{CDf}}{f{Dbc}}}bADf}{{{f{CDh}}{f{Dbc}}}bADf}{{{f{CDj}}{f{Dbc}}}bADf}{{{f{CDl}}{f{Dbc}}}bADf}{{{f{CDn}}{f{Dbc}}}bADf}{{{f{CE`}}{f{Dbc}}}bADf}{{{f{CEb}}{f{Dbc}}}bADf}{{{f{CEd}}{f{Dbc}}}bADf}{{{f{CEf}}{f{Dbc}}}bADf}{{{f{BMf}}{f{Dbc}}}bADf}{{{f{BJ`}}{f{Dbc}}}bADf}{{{f{CFb}}{f{Dbc}}}bADf}{{{f{BOh}}{f{Dbc}}}bADf}{{{f{CFd}}{f{Dbc}}}bADf}{{{f{CFf}}{f{Dbc}}}bADf}{{{f{CFh}}{f{Dbc}}}bADf}{{{f{CFj}}{f{Dbc}}}bADf}{{{f{CFl}}{f{Dbc}}}bADf}{{{f{CFn}}{f{Dbc}}}bADf}{{{f{BKh}}{f{Dbc}}}bADf}{{{f{CGd}}{f{Dbc}}}bADf}{{{f{CGf}}{f{Dbc}}}bADf}{{{f{CGh}}{f{Dbc}}}bADf}{{{f{CGj}}{f{Dbc}}}bADf}{{{f{CGl}}{f{Dbc}}}bADf}{{{f{CGn}}{f{Dbc}}}bADf}{{{f{CH`}}{f{Dbc}}}bADf}{{{f{{Mf{ce}}}}{f{Dbg}}}b{DAdOn}BJjADf}{{{f{CHb}}{f{Dbc}}}bADf}{{{f{CHd}}{f{Dbc}}}bADf}{{{f{CHf}}{f{Dbc}}}bADf}{{{f{BEj}}{f{Dbc}}}bADf}{{{f{BCb}}{f{Dbc}}}bADf}{{{f{B@d}}{f{Dbc}}}bADf}{{{f{Oh}}{f{Dbc}}}bADf}{{{f{CHn}}{f{Dbc}}}bADf}{{{f{DAf}}{f{Ab}}CCfd}{{A`{{Gj{{Gj{{G`{In}}{G`{In}}}}d}}n}}}}{{{f{DAf}}{f{Ab}}CCfd}{{A`{{Gj{{ALf{In}}{ALf{In}}}}n}}}}{{BJf{Cf{Fh}}}BEb}{{BKnBJ`}BJ`}{{BJ`{Cf{Fh}}}BJ`}{{{f{BMn}}}{{A`{{l{An}}n}}}}{{{f{BMn}}}{{l{An}}}}``{{{f{{Bh{{f{{l{An}}}}}}}}{f{Bj}}d}{{A`{{l{An}}n}}}}{{{f{DAh}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}`{{BJlCCb}BJl}`{{{f{AAh}}}In}`{{{f{{Kb{KhKd}}}}{f{{l{An}}}}CHn{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{BJ`BJ`}{{{f{ALn}}}d}{{{BNb{c}}d}{{BNb{c}}}BNf}````0`{{}b}{cb{AD`BJj}}`{cBJ`{{Hj{{Bh{Gf}}}}}}``{{{f{D@j}}{f{Bj}}}{{Cf{Fh}}}}{{{f{BCb}}{f{Bj}}}{{Cf{Fh}}}}{{{f{BCl}}{f{Bj}}}{{Cf{Fh}}}}{{{f{{Bh{In}}}}}{{`{{Cn{}{{Ch{Fh}}}}}}}}{{{f{DA`}}Bf{Cf{Fh}}d{Cf{{f{BCb}}}}FhFh{Cf{{f{CBf}}}}{Cf{Bf}}Bf{Cf{{f{CBh}}}}dd{f{Db{Cf{Fh}}}}d}{{A`{{Gj{BCbFhFh}}n}}}}{{{CMh{c}}{Cf{{DAj{Fh}}}}}{{CMh{c}}}BIn}{{{CIj{c}}{Cf{{DAj{Fh}}}}}{{CIj{c}}}BIn}``{{}Fh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DbABl}}}{{Cl{Cj}}}}{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DbA@`}}}{{f{DbJh}}}}`{{{f{DbBJh}}BJh}b}{{{f{DbBCb}}Fh{BA`{B@n}}Ef}{{A`{{Cf{Ef}}n}}}}{{BJ`BJ`GfEf}BJ`}{{BJ`BJ`BJ`}BJ`}``{{{f{Ab}}CDb}Ab}{{BJ`CDb}BJ`}`{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{BJ`BJ`}BJ`}{{BJhBJh}BJh}{{{f{BJh}}BJh}d}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BEl{{Gj{{G`{B@d}}{G`{{Cl{Cj}}}}{Cf{Hn}}}}}}{{{ALj{c}}}c{}}{{{Mf{ce}}}{{Cf{c}}}{}BJj}33{{{f{BJ`}}}}{BJh}{{{f{BEl}}}}{BCb}{DAlBKn}{BKnBKn}{{{Mf{ce}}}{}OnBJj}{{{Mf{ce}}}{{Gj{e}}}OnBJj}{{CB`c}{{BIj{c}}}BIn}{{BAdEf}{{A`{Lnn}}}}{BCdAb}{{{Mf{BL`}}}Ab}{{Ln{f{Bj}}}Ab}{CHhDAn}{BEh{{G`{c}}}{}}{c{{G`{{BA`{B@n}}}}}{}}{c{{G`{Eh}}}{}}{{{f{BJh}}}d}{{{f{BOh}}}d}{{{f{CCb}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CDf}{{A`{{l{Aj}}n}}}}{{BJ`ccCDf}BJ`{{B@`{BJ`}}}}{cd{{Hj{CLj}}}}{{{f{{Bh{Bf}}}}}d}{{{f{BFb}}{Cf{{f{Bj}}}}}d}7{{{f{CHb}}}d}{{{f{BL`}}}d}{{{f{BCb}}}d}{{{f{BCl}}}d}{{{f{BNn}}}d}{BJ`BJ`}{{{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{AIj}}}{{A`{{l{Aj}}n}}}}27{{{f{BFb}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}54{{{f{AIl}}}{{A`{{l{Aj}}n}}}}6{{{f{CJb}}}{{l{Aj}}}}{{{f{CJd}}}{{l{Aj}}}}{{{f{C@h}}}{{A`{{l{Aj}}n}}}}999{{{f{BL`}}}{{l{Aj}}}}::0{{{f{A@`}}}d};{{{f{AAh}}}d}`{{{f{Ab}}}d}{{{f{{Mf{AFd}}}}}d}{{}d}{{{f{CL`}}El}{{A`{dn}}}}{{{f{c}}}d{}}0{{{f{CCf}}{f{CCb}}}{{A`{bn}}}}4?{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{BJh}}}{{AF`{BJh}}}}{{{f{BEl}}}{{AGf{{G`{{Cl{CLd}}}}DB`AGd}}}}{{{f{BCb}}}{{`{{Cn{}{{Ch{{Gj{{f{{BA`{B@n}}}}{f{Ef}}}}}}}}}}}}{{{f{BCb}}}{{`{L`}}}}{{{f{DbBCb}}}{{`{L`}}}}1{{{f{BJh}}}{{AFb{BJh}}}}2{{BKlBJ`d}BJ`}{{BEbBEbccBId}BEb{{Hj{{Bh{BJ`}}}}}}{{BKnBJ`d}BJ`}{{{f{D@b}}{f{AAf}}eeBId}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{{f{DBb}}{f{AAf}}{f{Bj}}{f{Bj}}eeCD`{Cf{Il}}}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{BEbBJl}{{{f{DBd}}{f{Bj}}d}{{A`{{l{An}}n}}}}{{{f{DBd}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{BJld}BJl}`{CLlBJ`}{DBfBJ`}{{{f{CHh}}}{{f{{Cf{{G`{DBh}}}}}}}}``{{}BJ`}{BEbBEb}{BKnBJ`}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{BJ`BJ`}{DBjBEb}4{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}`{{BEbBEbcc}BEb{{B@`{BJ`}}}}{{{f{D@b}}{f{AAf}}ee}{{A`{AAfn}}}{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{BJlc}BJl{{Hj{{Bh{BJ`}}}}}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}<{{{f{BL`}}}Fh};9{{{f{BEl}}}Fh}{{{f{BCb}}}Fh}{{{f{BCl}}}Fh}{{BEbIn}BEb}{{{f{BL`}}Fh}Ab}{{{f{BNn}}}d}`{BJ`BKn}{cBJ`DBl}{DBlBJ`}{BFbBJ`}{DBnBJ`}{CH`BJ`}{{BJ`c}BJ`{{B@`{BJ`}}}}0``{{CA`d}CA`}{{{CIj{c}}d}{{CIj{c}}}BIn}```{BJ`BJ`}{{{f{DBd}}}{{l{En}}}}0{{{f{DBd}}{f{{Bh{Ab}}}}}{{A`{{l{Ah}}n}}}}{{{f{DBd}}GfCKd}{{A`{{l{Ah}}n}}}}{{{f{DBd}}Gfd}{{A`{Abn}}}}{{{f{DBd}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}4{{{f{DBd}}}{{A`{Abn}}}}{{{f{DBd}}}Ab}01{{{f{DBd}}}{{A`{{l{En}}n}}}}{{{f{DBd}}}{{l{Ah}}}}{{{f{DBd}}{f{Ab}}}{{A`{{l{Ah}}n}}}}{{{f{DBd}}GfFh}{{l{Ah}}}}{{{f{DBd}}El}{{A`{{l{Ah}}n}}}}{{{f{DBd}}Bf}Ab}7{{{f{DBd}}}{{A`{{l{Ah}}n}}}}01{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{D@fOn}BJj}21``````{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Db{Mf{ce}}}}}{{f{Dbc}}}{DC`On}{BJjAD`}}{{BEbcBJh{Cf{{Mf{CMj}}}}{Cf{{f{Bj}}}}}BEb{{Dj{AAf}{{Ad{{A`{AAfn}}}}}}IbId}}{{DBfc}BJ`{{Dj{{f{Bj}}}{{Ad{{A`{Ehn}}}}}}IbId}}{{BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{Ab}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BJ`c{BKd{{Mf{BKb}}}}}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`{f{Dbc}}{f{Db}}}{{A`{BJ`n}}}{{Af{BJ`{f{Db}}}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BLb}}{Cf{{f{Eh}}}}}{{A`{Obn}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{Ef}}}{{Ad{Ef}}}}}}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{Ef}}}{{Ad{{A`{Efn}}}}}}IbId}}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{{Bh{{f{Ef}}}}}}}{{Ad{{A`{Efn}}}}}}IbId}}{{BJ`c}BJ`{{Af{BJ`}{{Ad{BJ`}}}}}}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}IbId}}{{DBf{Mf{Dj}}}BJ`}{c{{BKd{{Mf{BKb}}}}}{{Dj{{f{{Bh{Ob}}}}}{{Ad{{A`{Obn}}}}}}IbId}}:{{ce{BKd{{Mf{BKb}}}}}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}{{Hj{{Bh{BJ`}}}}}}{{BJ`c{f{{Bh{BJ`}}}}{BKd{{Mf{BKb}}}}}BJ`{{Dj{{f{Db{Bh{Ab}}}}}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbId}}{{BJ`BKh{f{{Bh{BJ`}}}}dd}BJ`}2{{{f{BLb}}}{{A`{Obn}}}}{{CB`c}CB`{{Dj{CBb}{{Ad{CBb}}}}}}1111{CH`CH`}{{{Cf{{f{{Bh{Fh}}}}}}{f{BCl}}{Cf{{f{{Bh{Ab}}}}}}{Cf{{f{DCb}}}}}AAf}{{{Cf{{f{{Bh{Eh}}}}}}{f{BCb}}{Cf{{f{{Bh{Ab}}}}}}d}{{Cf{{G`{Fh}}}}}}{{{f{Bj}}}BJ`}{BKlBJ`}{BEbBEb}{BKnBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCd}}}Ln}{{{f{BL`}}}{{A`{Lnn}}}}``754{{{f{AIn}}}{{Cf{M`}}}}3{{{f{BL`}}}{{Cf{M`}}}}9876{{{f{AJ`}}}{{Cf{c}}}{}}51{{{f{DCf}}}Ln}4``{{{CMb{c}}{Cf{CIl}}}{{CMb{c}}}BIn}{{{f{DbBCb}}BCb}b}{{{f{Ef}}{f{Ef}}}{{A`{Efn}}}}{{{f{DbBCb}}{f{BCb}}}b}````{{{f{CJf}}}{{l{Kd}}}}`{{{f{C@h}}}{{A`{{l{Jn}}n}}}}1`{{{f{Bj}}}BJ`}{BKlBJ`}{BEbBEb}{BKnBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{AIn}}}{{Cf{{Gj{cc}}}}}{}}```{{{f{DCd}}}Ln}{{{f{BL`}}}{{A`{Lnn}}}}``{{{f{DAh}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}`=```6{{{f{CJb}}}{{l{Ml}}}}21`{{{f{BFb}}}Gf}{{{f{BFb}}}d}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BFbGf}BFb}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BL`}}}Fh}{{{f{CI`}}}{{Cf{Fh}}}}{{{f{C@l}}}{{Cf{Fh}}}}{{{f{CA`}}}{{Cf{Fh}}}}`````{{{BNb{c}}Fh}{{BNb{c}}}BNf}`{BKlBJ`}{BKnBJ`}{{{f{AHf}}}{{A`{Fhn}}}}{BJ`BJ`}{{{f{BL`}}}{{A`{Fhn}}}}{{{f{BL`}}}{{f{Bj}}}}{BJ`DBf}````33`{{{f{DAh}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{CJf}}}{{l{Kd}}}}{{{f{BFb}}}Gf}`{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}d{CLbOn}BJj}{{{f{CCf}}}d}{BFb}{BJ`}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BFb}}}d}{{DChFh}{{Cf{Fh}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}0{{{f{BLb}}}{{A`{Obn}}}}{{}c{}}{cCLnBLf}{cCM`BNf}2{{{f{Bj}}c}DCj{}}{c{{ALj{c}}}{}}{BEbBJl}{c{{BIj{c}}}BIn}{cC@l{{Hj{CLj}}}}{cCA`{{Hj{CLj}}}}{c{{BNb{c}}}BNf}{{{f{{Bh{Ob}}}}}BLb}{c{{CMb{c}}}BIn}{c{{BLd{c}}}BLf}{c{{CMd{c}}}BNf}{{}CJh}{c{{BNh{c}}}BNf}{GfBFb}{c{{CMf{c}}}BNf}{c{{CMh{c}}}BIn}{{BFbBFbBFb}CAn}{c{{CIj{c}}}BIn}{{DCl{Mf{CHh}}{Mf{BCl}}Fh{Cf{{G`{Fh}}}}{Cf{{Mf{BIl}}}}{Cf{DCb}}Fhd{Cf{{G`{Ab}}}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}CDh}{{A`{BNnn}}}}{c{{BNl{c}}}BIn}{c{{BO`{c}}}{BNfBNf}}{CCbBId}{c{{BKd{c}}}{}}{{BJ`BJ`BJ`}CG`}{{}CGb}{{{f{Bj}}{G`{Ob}}{BKd{{Mf{BKb}}}}c}BOlBLh}{c{{Mf{c}}}{}}{{AFn{G`{{Cl{Cj}}}}{Cf{Hn}}}BEl}{{EfIl}Ln}{{}BCb}{{cAFnd}B@d{{B@`{Eh}}}}{e{{Mf{c}}}{}{{AAj{{f{{CKf{c}}}}}{{Ad{c}}}}}}{AFnBEl}{{{f{AJb}}FhFh}{{l{c}}}Dh}{{{f{BL`}}FhFh}Ab}{{{f{Bj}}}CBf}{{ce}{{Mf{ce}}}{}BJj}{{{f{BCb}}Fh{BA`{B@n}}Ef}{{A`{BCbn}}}}{{Gf{f{Bj}}}{{A`{Abn}}}}{EhCBf}{{AFnFh}BEl}{{{Mf{{Bh{CIl}}}}}C@l}{{{Mf{{Bh{CIl}}}}}CA`}{BfCBf}{{}{{Mf{{BMl{c}}}}}{}}{c{{Mf{{BMl{e}}c}}}BJj{}}{Fh{{Mf{{Bh{{BMl{c}}}}}}}{}}{{Fhc}{{Mf{{Bh{{BMl{e}}}}c}}}BJj{}}3210{{{f{DbDCn}}}Cf}{{{f{DbD@n}}}Cf}{{{f{DbBOd}}Fh}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{DbBN`}}Fh}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{DbBNn}}Fh}{{A`{{Cf{{G`{AAf}}}}n}}}}{{{f{BJ`}}{f{Db{BFf{{f{BJ`}}}}}}}b}{{BJ`{f{Db{BFf{BJ`}}}}}b}{BJ`BJ`}0{BJhBJh}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}0{GfBJ`}`{{}AAh}{{}A@`}`{{{f{BL`}}}Fh}{BEbBEb}7`````{{{f{Db{BNl{c}}}}}{{A`{Fhn}}}BIn}````{{{f{AHn}}}{{A`{{Gh{Gf}}n}}}}{{BJlc}BJl{{Hj{{Bh{BJ`}}}}}}`{{BEb{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{BHjn}}}}`{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CJb}}}{{l{Nf}}}}{{{f{CJd}}}{{l{Nf}}}}{{{f{C@h}}}{{A`{{l{Nf}}n}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{CElc}BJ`{{B@`{BJ`}}}}{{CF`c}BJ`{{B@`{BJ`}}}}`{{BJ`e}BJ`{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{BJ`e{Cf{{Gj{eEl}}}}CGl}BJ`{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{{f{DbBCb}}{f{BCb}}}{{A`{bn}}}}```{{{f{Bj}}}BFb}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}Kf}{{Kb{KhKd}}}}``{{{f{BFb}}{f{BFb}}}{{Cf{BAh}}}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}{{Cf{BAh}}}{D@fOn}BJj}`{{{f{CI`}}}{{f{{Bh{CIl}}}}}}{{{f{C@l}}}{{f{{Bh{CIl}}}}}}{{{f{CA`}}}{{f{{Bh{CIl}}}}}}``{{}BJ`}{c{{DD`{{Mf{c}}}}}{}}{{ce}{{DD`{{Mf{ce}}}}}{}BJj}````{{BJ`c}BJ`{{B@`{BJ`}}}}`{{DBf{f{Bj}}}BJ`}0{{{f{AAf}}{f{AAf}}d}{{A`{{Gj{{AAb{{G`{In}}{G`{A@`}}}}{AAb{{G`{AAh}}{G`{A@`}}}}}}n}}}}`{{{f{DCd}}}Ln}{BJ`BJ`}{BEb{{A`{{Gj{AAfAAf}}n}}}}`{{{f{BEl}}}BEl}{{{f{{Mf{c}}}}{f{DbDDb}}}b{ALbOn}}{{{f{{Mf{ce}}}}{f{{Mf{ce}}}}}dOnBJj}{{{f{Bj}}BJ`Oh}BJ`}{{BEbBJ`Oh}BEb}{{{f{AJ`}}M`Oh}{{A`{{Cf{c}}n}}}{}}{{BJ`BJ`Oh}BJ`}{{{f{DCf}}M`Oh}{{A`{Lnn}}}}{{{f{BL`}}M`Oh}{{A`{Lnn}}}}{{{f{CJb}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}{{{f{Dbc}}e}{{A`{{f{Dbg}}BBj}}}{}CLh{}}````{{{f{DDd}}CDl{Cf{Jh}}}Ab}{{BJ`CDl{Cf{Jh}}}BJ`}{{{f{Db{Mf{AFd}}}}{f{Db{Bh{Bf}}}}}{{A`{FhBBj}}}}{{{f{Db{Mf{AFd}}}}DDf}{{A`{bBBj}}}}{{{BNl{c}}CDh}{{BNl{c}}}BIn}{{{f{Db{Mf{AFd}}}}{f{Db{G`{Bf}}}}}{{A`{FhBBj}}}}{{{f{Db{Mf{AFd}}}}{f{DbEh}}}{{A`{FhBBj}}}}{{{f{Dbc}}}{{A`{eBBj}}}{}DDh}{{{f{Db{Mf{AFd}}}}{f{Db{Bh{DDj}}}}}{{A`{FhBBj}}}}{{{f{CI`}}}d}{{{f{BL`}}}Ab}{{{f{C@l}}}d}{{{f{CA`}}}d}````{{ce}BJ`{{Dj{AbAb}{{Ad{{A`{{Cf{Ab}}n}}}}}}IbIdAD`}{{Hj{{Bh{BJ`}}}}}}{{{f{AJd}}}Ab}0{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DbBJh}}BJh}b}{{{f{DbBCb}}{f{Bj}}}{{Cf{Ef}}}}{{{f{DbBL`}}{f{Bj}}}b}{{BEbei}BEb{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}{{Hj{Bj}}}{{Hf{}{{Ch{g}}}}}}{{{f{DbBCb}}{f{Bj}}{BA`{B@n}}}{{Cf{{BA`{B@n}}}}}}{{CLl{G`{Eh}}}BJ`}{{cBJ`}BJ`{{B@`{BJ`}}}}{{{f{Ab}}{f{{l{En}}}}}{{A`{{l{Ah}}n}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BMn}}{f{Bj}}{f{Bj}}}{{A`{{l{An}}n}}}}{{BJ`cc}BJ`{{B@`{BJ`}}}}1{{{f{BLb}}{Cf{Ef}}}{{A`{Obn}}}}{{{f{BMn}}{f{Bj}}{f{Bj}}Fh}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Ef}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Cf{Ef}}}{{A`{Abn}}}}{{BJ`cc{Cf{c}}{Cf{Ef}}}BJ`{{B@`{BJ`}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{f{{l{An}}}}CHn}{{A`{{Kb{KhKd}}n}}}}{{{f{DbBCb}}Fh}b}{{BJ`{f{{Bh{Gf}}}}CGn}BJ`}{{{f{CLj}}}CIl}`{{{f{AJf}}}AJf}{{{f{BL`}}}Ab}{BKlBJ`}{BEbBEb}{BKnBJ`}{BJ`BJ`}`{{BJlc}BJl{{Hj{{Bh{BJ`}}}}}}{{{f{DAb}}{G`{Ab}}{f{BEd}}}{{A`{{Gj{Ab{G`{Ab}}Bn}}n}}}}{{BEbBJ`cBEd}BJf{{Hj{{Bh{BJ`}}}}}}{{BJ`BEd}BJ`}{{{f{AJh}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`{Mf{Dj}}{BKd{{Mf{BKb}}}}Oj}BJ`}{{{f{BL`}}{f{Dj}}Oj}{{A`{Abn}}}}{{BJ`Fhc}BJ`{{Af{{f{Db{l{Ed}}}}}{{Ad{{Cf{M`}}}}}}IbIdDl}}{{{f{DDl}}Oj}{{A`{Abn}}}}{{BJ`Oj}BJ`}{{{f{DDl}}{f{Ab}}CAd}{{A`{Abn}}}}{{BJ`BJ`CAd}BJ`}32102032103{{BJ`OhM`Oj}BJ`}2{{BJ`BJ`OhM`CAd}BJ`}543254325432{{{f{DDn}}{f{{l{An}}}}{Cf{{f{AM`}}}}}{{A`{DDnn}}}}{{{f{C@f}}In}{{A`{Abn}}}}{{BJ`In}BJ`}{{{f{CAn}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}0{{{f{C@f}}Nj}{{A`{Abn}}}}{{BJ`Nj}BJ`}2``{{{f{CI`}}}{{Cf{{f{DCb}}}}}}{{{f{C@l}}}{{Cf{{f{DCb}}}}}}{{{f{CA`}}}{{Cf{{f{DCb}}}}}}``````{{{f{DBd}}{l{Ah}}}{{l{Ah}}}}{{}{{BKd{{Mf{BKb}}}}}}{{BJ`BJ`dd{Cf{Jh}}}BJ`}0`{{{f{BJn}}DE`}{{A`{AAfn}}}}{{cC@n}{{A`{BEbn}}}{{Hj{CLj}}}}{{{Mf{{Bh{CIl}}}}C@n}{{A`{BEbn}}}}{{cCAb}{{A`{BEbn}}}{{Hj{CLj}}}}{{{Mf{{Bh{CIl}}}}CAb}{{A`{BEbn}}}}{{DEb{f{{Bh{In}}}}e}{{A`{Abn}}}Dl{{Hf{}{{Ch{{Cf{c}}}}}}}}{{{f{AJj}}c{Cf{e}}}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}}{{{f{AJj}}ci}{{A`{AJjn}}}{{Hf{}{{Ch{In}}}}}{}{}{{Dj{{Cf{e}}}{{Ad{{Cf{g}}}}}}}}{{{f{DbBEb}}}{{A`{{Mf{BCb}}n}}}}{{{f{Db{CMb{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{Db{BLd{c}}}}}{{A`{BCbn}}}BLf}{{{f{BNn}}}{{f{{Mf{BCl}}}}}}{{{f{Db{BNl{c}}}}}{{A`{{Mf{BCl}}n}}}BIn}{{{f{BJn}}{Cf{Fh}}}{{A`{{Mf{BCb}}n}}}}{{{f{CHh}}}{{f{DEd}}}}``````{{{f{DbBEb}}{f{Db{BHn{BHl}}}}{f{Db{BHn{BI`}}}}}{{A`{{Mf{BCb}}n}}}}`{{{f{DAh}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}`{{{f{CJf}}}{{l{Kd}}}}`{{{f{Db{Mf{AFd}}}}DEf}{{A`{JhBBj}}}}{{BEbc}BEb{{Hj{{Bh{BJ`}}}}}}0````{{{f{AJj}}{f{{l{Aj}}}}{Cf{c}}}{{A`{AJjn}}}{}}{{{f{DbBJh}}BJhd}b}{{{f{BEb}}{BHn{BHl}}{BHn{BI`}}}b}{{{f{DbBCb}}{f{Bj}}Ef}{{Cf{Ef}}}}{{{f{DbBCb}}FhEf}{{Cf{Ef}}}}{{{BNl{c}}d}{{BNl{c}}}BIn}{{{BO`{c}}d}{{BO`{c}}}BNf}{{{CMb{c}}d}{{CMb{c}}}BIn}{{{BLd{c}}d}{{BLd{c}}}BLf}{{{CMh{c}}d}{{CMh{c}}}BIn}4{{CLnd}CLn}{{BJ`Lf}BJ`}{{{f{DbBEl}}{Cf{Hn}}}b}{{{f{AJl}}Gf}{{l{c}}}Dh}{{{f{BL`}}Gf}Ab}{{BKlBJ`}BJ`}{{BEbc}BEb{{B@`{BJ`}}}}{{BKnBJ`}BJ`}{{BJ`BJ`}BJ`}{{{f{AJn}}Gfc}{{l{e}}}{}Dh}{{BEbce}BEb{{B@`{BJ`}}}{{B@`{BJ`}}}}{{BJ`ce}BJ`{{B@`{BJ`}}}{{B@`{BJ`}}}}{{{f{DbBCb}}{f{Bj}}}{{Cf{Ef}}}}{{{f{DbBCb}}Fh}{{Cf{{Gj{{BA`{B@n}}Ef}}}}}}{{{f{BId}}}d}{BJ`BJ`}{{{f{DbABn}}}b}{{{f{DbBL`}}}b}{{BJ`{Cf{Jh}}}BJ`}{{BEbcCBj}{{A`{bn}}}{{Hj{CLj}}}}{{BEbcCCh}{{A`{bn}}}{{Hj{CLj}}}}{{BEbcCCn}{{A`{bn}}}{{Hj{CLj}}}}{{BEbcCDn}{{A`{bn}}}{{Hj{CLj}}}}`````{{{f{BL`}}GfFh}Ab}{{BEbGfIn}BEb}{{BKnBJ`BJ`}BJ`}>{{{f{DbBEl}}FhFh}b}0`{{{f{AK`}}FhFh}AK`}{{{f{c}}FhFh}e{}{}}1022{{BElFhFh}BEl}0`{{{f{AHd}}d}{{l{c}}}Dh}{{BKlEl}BJ`}{{BEbcF`}BEb{{BEh{{BA`{B@n}}}}}}{{BKnEl}BJ`}{{BJ`El}BJ`}{{BJ`eF`}BJ`{{B@`{BJ`}}AD`}{{Hj{{Bh{c}}}}}}{{BEbcF`}BEb{{Hj{{Bh{BJ`}}}}}}{{{f{AHd}}El}{{l{c}}}Dh}{{{f{BL`}}El}{{A`{Abn}}}}{{{f{{Mf{c}}}}}{{Cf{{f{ALb}}}}}{ALbOn}}{{{f{BMn}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BL`}}Gf}{{Gj{AbAb}}}}{{{f{BEl}}Fh}{{Gj{{Cl{Cj}}{Cl{Cj}}}}}}0{{{f{BMn}}{f{{l{An}}}}Fh}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}4{{{f{{l{An}}}}{f{{l{An}}}}Fhed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{BJ`BJ`}`{{{f{CIh}}{f{{Bh{Bf}}}}}{{l{Aj}}}}{{{f{CIh}}{f{{l{Bd}}}}}{{l{Aj}}}}`{{BKlBf}BJ`}{{BEbBf}BEb}{{BKnBf}BJ`}{{{f{AKb}}Bf}{{Cf{M`}}}}{{BJ`Bf}BJ`}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{DEh}}Bf}Ln}{{{f{BL`}}Bf}{{A`{Lnn}}}}{{InIn}A@`}{BJ`DEj}{{{f{BMn}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{Bj}}d}{{l{An}}}}{{{f{BMn}}}{{l{En}}}}0{{{f{BMn}}}{{l{An}}}}{{{f{BMn}}{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}4``{{{f{C@h}}{f{Bj}}}{{A`{Abn}}}}`{{BJ`Ef}BJ`}`{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}707070{{{f{BMn}}{f{{l{An}}}}}{{l{An}}}}10{{{f{{Mf{ce}}}}}FhOnBJj}{BJ`CLl}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{BJ`BJ`}}{{BJhBJh}BJh}{{{f{DbBJh}}BJh}b}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{BJlc}BJl{{Hj{Bj}}}}{{DBf{f{Bj}}}BJ`}{{{f{BId}}}{{f{Bj}}}}`1{{{f{Bj}}}BJ`}{BKlBJ`}{BEbBEb}{BKnBJ`}{{{f{AIn}}}{{Cf{c}}}{}}{BJ`BJ`}{{{f{DCd}}}Ln}{{{f{BL`}}}{{A`{Lnn}}}}{{}{{BKd{{Mf{BKb}}}}}}>{{{f{Dbc}}i}{{A`{gBBj}}}{}{}{}{{AAj{{f{Dbe}}}{{Ad{g}}}}}}{{BEbIn}BEb}{{BJf{Cf{Fh}}}BEb}{{BKnBJ`}BJ`}{{BJ`{Cf{Fh}}}BJ`}{{{f{AKd}}{f{c}}}{{A`{AKdn}}}On}{{{f{BL`}}{f{{l{En}}}}}{{A`{Abn}}}}{{{f{DEl}}{f{{Bh{A@`}}}}Lf}DEl}{{{f{DEl}}{f{{Bh{A@`}}}}}DEl}{{{f{BL`}}{f{{Bh{In}}}}}{{A`{Abn}}}}{{{f{BL`}}{f{{Bh{In}}}}}Ab}{{{f{AKf}}{f{c}}}AKfOn}{{{f{BL`}}{f{{l{En}}}}}Ab}{{{f{DbBEl}}}{{Cf{Hn}}}}{{BJ`BJ`BJ`}BJ`}{{CEjc}CEl{{B@`{BJ`}}}}{{CEnc}CF`{{B@`{BJ`}}}}`{{BJ`BJ`BFbCAh}BJ`}```{{{f{C@h}}Kf}{{A`{{l{Kd}}n}}}}{BEb{{A`{DEnn}}}}{CEh{{A`{DEnn}}}}1{{{f{CH`}}}{{Cf{Il}}}}{{BKnFh}BJ`}{{{f{BCb}}AOf}BCl}{{{f{BEl}}}{{Cl{Cj}}}}{{{f{AKh}}}{{G`{{f{{Bh{Bf}}}}}}}}{{{f{BEb}}d}{{A`{Ehn}}}}{{{f{DF`}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{BIh}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{BJ`}}{f{BCb}}D@h}{{A`{Obn}}}}{{{f{BMn}}{f{{l{En}}}}d}{{A`{{l{Kd}}n}}}}{BKlBJ`}{{{f{BMn}}}{{l{An}}}}{DBfBJ`}{{{f{AAh}}}{{Cf{In}}}}{{{f{c}}}e{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BJ`BJ`}{{{f{BLb}}}{{A`{Obn}}}}{{{f{C@h}}{f{Bj}}}{{A`{Abn}}}}{{{f{c}}}Eh{}}000000000000{{{f{DbBCb}}{f{BCb}}}{{A`{dn}}}}`887{{{f{CCh}}c}{{BNh{c}}}BNf}{{{f{CDn}}c}{{BO`{c}}}BNf}{{{f{DbBJh}}BJh}b}``{{BEbIncF`}BEb{{Hj{{Bh{BJ`}}}}}}{{{f{BEl}}{f{BEl}}}Hn}{{{f{BEl}}f}Hn}10{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}g{}{}{}}{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}g{}{}{}}{{{f{DFb}}{Cf{{f{AM`}}}}{f{{l{An}}}}}{{A`{DFbn}}}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}ceg}{{A`{Gfn}}}{{Dj{Gf}{{Ad{Gf}}}}}{{Dj{Gf}{{Ad{ALn}}}}}{{Dj{ALn}{{Ad{Gf}}}}}}{{{f{BFb}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}{{{f{CAn}}Gf{Cf{{f{AM`}}}}}{{A`{Gfn}}}}10`10{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}{e{{A`{BElc}}}{}{{Hf{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{e{{A`{BElc}}}{}{{Hf{}{{Ch{{A`{bc}}}}}}}}2{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFne}{{A`{BElc}}}{}{{Hf{}{{Ch{{A`{bc}}}}}}}}{{AFne}{{A`{BElc}}}{}{{Hf{}{{Ch{{A`{{Cf{b}}c}}}}}}}}{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{ADh{f{Bj}}}{{A`{{l{c}}e}}}Dh{}}{{ADj{f{{l{c}}}}}{{A`{{l{c}}e}}}Dh{}}10{{ADj{f{Bj}}Ef}{{A`{{l{c}}e}}}Dh{}}0{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Il{{A`{CH`n}}}}{{{Mf{{Bh{c}}e}}}{{A`{{Mf{{A@j{c}}e}}}}}{}BJj}222222222222222222{DAn{{A`{CHhBBn}}}}{{{f{BCb}}{f{Bj}}}{{A`{{f{Ef}}n}}}}{{{f{BCb}}Fh}{{A`{{Gj{{f{{BA`{B@n}}}}{f{Ef}}}}n}}}}{{{f{BCb}}{f{Bj}}}{{A`{Obn}}}}{{{f{BCb}}{f{Bj}}}{{A`{{Gj{Fh{f{{BA`{B@n}}}}{f{Ef}}}}n}}}}{{{f{DbBCb}}{f{Bj}}}{{A`{{f{DbEf}}n}}}}{{{f{D@j}}{f{Bj}}}{{A`{Fhn}}}}99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{CB`{Cf{CIl}}}{{A`{{BIj{AFd}}n}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{Ef}}}{{Ad{{A`{Efn}}}}}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{{Bh{{f{Ef}}}}}}}{{Ad{{A`{Efn}}}}}}}}{{BJ`c}{{A`{BJ`n}}}{{Af{BJ`}{{Ad{{A`{BJ`n}}}}}}}}{{{f{BLb}}c}{{A`{Obn}}}{{AAj{{f{Ob}}}{{Ad{{A`{Obn}}}}}}}}{{DChFh}{{A`{Fhn}}}}{Bf{{A`{CEbn}}}}{In{{A`{CEdn}}}}{Nj{{A`{CEfn}}}}{c{{A`{{Mf{c}}DFd}}}{}}{{AFn{G`{{Cl{Cj}}}}{Cf{Hn}}}{{A`{BEln}}}}{{ce}{{A`{{Mf{ce}}DFd}}}{}BJj}{{}{{A`{{Mf{{BMl{c}}}}DFd}}}{}}{c{{A`{{Mf{{BMl{e}}c}}DFd}}}BJj{}}10`{c{{A`{{DD`{{Mf{c}}}}DFd}}}{}}{{ce}{{A`{{DD`{{Mf{ce}}}}DFd}}}{}BJj}{{{f{BCl}}{f{{Bh{Fh}}}}}{{A`{BCln}}}}{{{f{BLh}}{f{Db{G`{Bf}}}}}{{A`{bn}}}}{{{Mf{ce}}}{{A`{c{Mf{ce}}}}}{}BJj}{{{f{c}}}AAd{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bj}}}}`{{BJhBJh}BJh}{{{f{AHf}}}{{A`{AHfn}}}}{BKlBJ`}{{BEb{Cf{{G`{Eh}}}}BCh}BEb}{BKnBJ`}{BJ`BJ`}{{{f{BL`}}}{{A`{Abn}}}}4321{{BEbe}BEb{{Hj{Bj}}}{{Hf{}{{Ch{c}}}}}}{{BEbBF`}BEb}{{{Mf{{AFj{c}}}}}{{A`{cb}}}Ib}{{{Mf{ce}}}cAD`BJj}{{{f{DbLn}}Il}b}{{{f{DbCB`}}{f{DFf}}}b}7{{{f{DFh}}c{f{Bj}}BFb}{{A`{AAfn}}}{{BEh{Eh}}}}0{{{BNl{c}}d}{{BNl{c}}}BIn}```{{BJlCCf}BJl}`{{{f{BEl}}}{{Cf{{f{Hn}}}}}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{Ln}}}{{f{Il}}}}{{{f{CL`}}ddEhd}{{A`{AAfn}}}}{{BJ`ddEhd}BJ`}`3{{{f{BEl}}}{{f{{Bh{{Cl{Cj}}}}}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{BEl}}}DB`}{{BKlBf}BJ`}{{BEbBf}BEb}{{BKnBf}BJ`}{{{f{AKb}}Bf}{{Cf{M`}}}}{{BJ`Bf}BJ`}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{DEh}}Bf}Ln}{{{f{BL`}}Bf}{{A`{Lnn}}}}`{{{f{DFj}}A@d{f{Db{G`{Jh}}}}}{{A`{bn}}}}{{{f{DFj}}A@d{f{Db{Bh{Jh}}}}}{{A`{bn}}}}`{{{f{{Mf{{AFj{c}}}}}}g}{{A`{eb}}}Ib{}{{AAj{{f{c}}}{{Ad{e}}}}}}{ce{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Mf{ce}}}}}FhOnBJj}{{{f{CJb}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}210{{{f{CAl}}}{{Cf{In}}}}{{{f{BFb}}}Gf}`{{{f{BFb}}}d}`{cCEj{{B@`{BJ`}}}}{{CElc}CEn{{B@`{BJ`}}}}{{CF`c}CEn{{B@`{BJ`}}}}```{{BJlBEb}BJl}{{CG`BJ`}CG`}{{CA`{Cf{{DAj{Fh}}}}}CA`}{{{BNb{c}}{DAj{Fh}}}{{BNb{c}}}BNf}{{{CMh{c}}{DAj{Fh}}}{{CMh{c}}}BIn}{{C@ld}C@l}{Fhc{}}0{FhBCb}{{{CIj{c}}{Cf{{DAj{Fh}}}}}{{CIj{c}}}BIn}{{CB`Fh}CB`}{{C@l{Cf{CIb}}}C@l}{{CA`{Cf{CIb}}}CA`}{{BEbd}BEb}{{BIdCBn}BId}{{BEbBJ`}BEb}{{{f{DbBCb}}{BA`{B@n}}Ef}{{Cf{Ef}}}}{{BEbc}BEb{{Hj{{Bh{BJ`}}}}}}{{{CMb{c}}{Cf{{G`{Eh}}}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{{G`{Eh}}}}}{{BLd{c}}}BLf}{{{BNl{c}}{Cf{{G`{Eh}}}}}{{BNl{c}}}BIn}{{CB`{Cf{{Mf{{Bh{Eh}}}}}}}CB`}`4{{C@l{Cf{{f{Bj}}}}}C@l}{{CBb{Cf{c}}}CBb{{B@`{CBf}}}}{{{CMd{c}}AOf}{{CMd{c}}}{}}{{{BNh{c}}AOf}{{BNh{c}}}BNf}{{{CMd{c}}{Cf{CCj}}}{{CMd{c}}}{}}{{CJh{Cf{CCj}}}CJh}{{{BNh{c}}{Cf{CCj}}}{{BNh{c}}}BNf}{{{BO`{c}}CE`}{{BO`{c}}}BNf}{{BEbc}BEb{{Hj{{Bh{BEb}}}}}}{{{BO`{c}}{Cf{Fh}}}{{BO`{c}}}BNf}{{{BNb{c}}{Cf{Eh}}}{{BNb{c}}}BNf}0{{CG`BJ`}CG`}{{CGbBJ`}CGb}{{C@ld}C@l}{{CBbd}CBb}{{{f{BLb}}Ef}{{A`{Obn}}}}{{C@l{Cf{{Mf{BCb}}}}}C@l}{{CB`{Cf{{Mf{{G`{Ef}}}}}}}CB`}{{C@lCBd}C@l}{{CBbCBd}CBb}{{C@lBf}C@l}{{CBbBf}CBb}{{CJhCIl}CJh}{{CLl{G`{BJ`}}}{{A`{BJ`n}}}}{{{BNb{c}}{Cf{Fh}}}{{BNb{c}}}BNf}{{{BNb{c}}{Cf{d}}}{{BNb{c}}}BNf}{{CGbBJ`BJ`BJ`}CGb}=={{CB`d}CB`}{{{CMb{c}}{Cf{{G`{Ab}}}}}{{CMb{c}}}BIn}{{{BNl{c}}{Cf{{G`{Ab}}}}}{{BNl{c}}}BIn}{{CG`BJ`BJ`BJ`}CG`}4{{CG`BJ`}CG`}{{CGbBJ`}CGb}{{C@ld}C@l}{{CA`d}CA`}{{{CMh{c}}d}{{CMh{c}}}BIn}{{{CIj{c}}d}{{CIj{c}}}BIn}9{{{CMb{c}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}}{{CMb{c}}}BIn}{{{BNl{c}}{Cf{{Gj{{Mf{Bj}}{Mf{Bj}}}}}}}{{BNl{c}}}BIn}{{C@l{Cf{{Mf{Bj}}}}}C@l}{{CA`{Cf{{Mf{Bj}}}}}CA`}{{C@l{Cf{Fh}}}C@l}{{CA`{Cf{{DAj{Fh}}}}}CA`}{{CB`{Cf{Fh}}}CB`}{{{CMf{c}}DFl}{{CMf{c}}}BNf}{{{CMh{c}}DFl}{{CMh{c}}}BIn}{{{BNb{c}}Eh}{{BNb{c}}}BNf}={{CB`d}CB`}{{B@d{DFn{EhEh}}}B@d}{{BCl{DFn{EhEh}}}BCl}{{CG`BJ`}CG`}{{CGbBJ`}CGb}010{{C@ld}C@l}{{CBbd}CBb}3{{CI`c}CI`{{B@`{{Cf{Fh}}}}}}={{C@lc}C@l{{B@`{{Cf{Fh}}}}}}{{CA`c}CA`{{B@`{{Cf{Fh}}}}}}{{CA`{Cf{Fh}}}CA`}{{{CMb{c}}{Cf{Fh}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{Fh}}}{{BLd{c}}}BLf}{{{CIj{c}}{Cf{Fh}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{Fh}}}{{BNl{c}}}BIn}{{CB`{Cf{Fh}}}CB`}20;{{BEbd}BEb}{{{BNb{c}}Eh}{{BNb{c}}}BNf}{{C@l{Cf{CBh}}}C@l}{{CBb{Cf{CBh}}}CBb}{{BEbBJh}BEb}{{CB`CBb}CB`}{{{CIj{c}}{Cf{e}}}{{CIj{c}}}BIn{{B@`{CIl}}}}{{CB`{Cf{c}}}CB`{{B@`{CIl}}}}{{CI`{Mf{{Bh{CIl}}}}}CI`}{{C@l{Mf{{Bh{CIl}}}}}C@l}{{CA`{Mf{{Bh{CIl}}}}}CA`}{{{CIj{c}}{Cf{{Mf{BIl}}}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{{Mf{BIl}}}}}{{BNl{c}}}BIn}<{{{CMb{c}}{Cf{{G`{Fh}}}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{{G`{Fh}}}}}{{BLd{c}}}BLf}{{{CMh{c}}{Cf{{G`{Eh}}}}}{{CMh{c}}}BIn}{{{CIj{c}}{Cf{{Mf{{Bh{Eh}}}}}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{{G`{Fh}}}}}{{BNl{c}}}BIn}{{CB`{Cf{{Mf{{G`{Fh}}}}}}}CB`}{{BEbd}BEb}{{C@l{Cf{Bf}}}C@l}{{{BNb{c}}Bf}{{BNb{c}}}BNf}{{CBb{Cf{Bf}}}CBb}{{{BNb{c}}CC`}{{BNb{c}}}BNf}{{C@ld}C@l}{{CB`d}CB`}{{CI`d}CI`}2{{CA`d}CA`}{{{CIj{c}}d}{{CIj{c}}}BIn}39{{{BO`{c}}{Cf{Fh}}}{{BO`{c}}}BNf}{{CI`c}CI`{{B@`{{Cf{DCb}}}}}}{{BEb{f{Bj}}{Cf{In}}}BEb}{{C@lc}C@l{{B@`{{Cf{DCb}}}}}}{{C@l{Cf{DCb}}}C@l}{{CA`{Cf{DCb}}}CA`}{{CA`c}CA`{{B@`{{Cf{DCb}}}}}}{{{CMb{c}}{Cf{DCb}}}{{CMb{c}}}BIn}{{{BLd{c}}{Cf{DCb}}}{{BLd{c}}}BLf}{{{CIj{c}}{Cf{{f{DbDCb}}}}}{{CIj{c}}}BIn}{{{BNl{c}}{Cf{DCb}}}{{BNl{c}}}BIn}{{CB`{Cf{DCb}}}CB`}{{{f{BLb}}}{{A`{Obn}}}}{{CB`Fh}CB`}{{C@l{Cf{{Mf{BCb}}}}}C@l}{{CA`{Cf{{Mf{BCb}}}}}CA`}{{{CMh{c}}{Mf{BCb}}}{{CMh{c}}}BIn}{{{CIj{c}}{Mf{BCb}}}{{CIj{c}}}BIn}{{CB`{Cf{{Mf{BCb}}}}}CB`}{{C@lc}{{A`{C@ln}}}{{Dj{BCb}{{Ad{{A`{BCbn}}}}}}}}4{{{CMh{c}}{f{BCb}}}{{CMh{c}}}BIn}{{{CIj{c}}{f{BCb}}}{{CIj{c}}}BIn}3{{CG`BJ`}CG`}{{CGbBJ`}CGb}{{C@lBf}C@l}{{{BNb{c}}Bf}{{BNb{c}}}BNf}{{CBbBf}CBb}{{BEbd}BEb}{{C@lFh}C@l}?0?1{{{BO`{c}}CHb}{{BO`{c}}}BNf}2{{BId{Cf{Eh}}}BId}{{{BNb{c}}{Cf{Eh}}}{{BNb{c}}}BNf}{{CG`Kf}CG`}{{CG`{Cf{Eh}}}CG`}{{C@ld}C@l}{{CBbd}CBb}108{{BEl{Cf{Hn}}}BEl}{{{f{BEl}}{Cf{Hn}}}{{Cl{Cj}}}}{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hn}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}2?{{CG`BJ`}CG`}{BEbBEb}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}{{{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}c}e{}{}{}}10{{c{ABb{}{{AAl{c}}{AAn{e}}{AB`{g}}}}}e{}{}{}}210213210210{{{f{Db{Mf{AFd}}}}{f{{Bh{Bf}}}}}{{A`{FhBBj}}}}{{{f{CCh}}AAfc}{{A`{bn}}}BNf}{{{f{CDn}}AAfc}{{A`{bn}}}BNf}{{{f{DbAAf}}{f{CLj}}{f{{Bh{c}}}}{f{e}}Fh}{{A`{bn}}}{{Hj{Bj}}}{DG`IbId}}{{{f{Dbc}}e}{{A`{FhBBj}}}{}DDh}{{{f{Db{Mf{AFd}}}}{f{{Bh{DGb}}}}}{{A`{FhBBj}}}}{{BJ`c}BJ`{{B@`{BJ`}}}}{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}``{{{f{AKj}}{f{{l{Aj}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dh}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{Cf}}}}IbId}}{{{f{BFd}}c}Ab{{Dj{{Gj{In{f{{BFf{In}}}}}}}{{Ad{}}}}IbId}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{Cf}}}}IbId}}{{{f{{Bh{{A@j{In}}}}}}c}Ab{{Dj{{A@j{In}}}{{Ad{}}}}IbId}}{{{f{{Bh{c}}}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{Bh{c}}}}{f{Hn}}e{Cf{{Mf{AG`}}}}}{{ALf{c}}}{BGlBGn}{{Cn{}{{Ch{{Gj{InIn}}}}}}Ij}}{{{f{{l{c}}}}InIn}{{l{c}}}Dh}{{{f{{G`{{A@j{In}}}}}}{f{{Bh{{Cl{Cj}}}}}}}d}{{{f{BH`}}{f{Bn}}}Ab}{{BHbBHb}BHb}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DhDh{{Dj{ff}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}{{Dj{f}{{Ad{}}}}}Dh}{{{l{c}}{l{e}}gik}{{l{m}}}DhDh{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}{{Dj{}{{Ad{}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DhDh{{AKl{CfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}g}bDhDh{{Af{CfCf}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DhDh{}{{Af{}{{Ad{g}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDh{CjAKn}{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bj}}}{{l{k}}}DhDhCj{{Af{ff}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DhDhCj{{Af{}{{Ad{g}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DhDh{{Af{ff}{{Ad{{Cl{Cj}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDh{}{}{{Af{CfCf}{{Ad{{A`{{Cf{g}}i}}}}}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DhDhDh{{AL`{CfCfCf}}}Dh}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bj}}}{{A`{{l{m}}i}}}DhDhCjALb{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dh{}{{Hd{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DhDhALb{{Af{ff}{{Ad{{A`{{Cl{Cj}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DhDhDh{}{}{{Af{CfCfCf}{{Ad{{A`{{Cf{i}}k}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{Cf}{{Ad{{A`{{Cf{e}}g}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dh}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dh{CjAKn}ALb{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dh{{ALd{Cf}}}Dh}{{{f{{l{c}}}}e}{{l{g}}}DhALdDh}{{{f{{l{c}}}}g}{{l{i}}}DhCj{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{l{c}}g}{{l{i}}}DhCj{{Af{}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dh{CjAKn}{{Af{f}{{Ad{e}}}}}{{Dh{}{{Hd{e}}}}}}0``{{{f{DGd}}}{{l{En}}}}0{{{f{DGd}}{f{{l{Kd}}}}d}{{A`{Abn}}}}{{{f{DGd}}{f{{l{An}}}}d}{{A`{Abn}}}}{{{f{DGd}}}Ab}{{{f{DGd}}}{{A`{Abn}}}}1{{{f{DGd}}}{{A`{{l{En}}n}}}}{{{f{DGd}}}{{l{C`}}}}{{{f{DGd}}{f{Ab}}}{{A`{Abn}}}}{{{f{DGd}}El}{{A`{{l{C`}}n}}}}{{{f{DGd}}Bf}{{A`{Abn}}}}5{{{f{DGd}}}{{A`{{l{Ah}}n}}}}01{{{f{DGf}}}{{f{{l{C`}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{BOfBJ`}BJ`}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}3{cc{}}{{}Fh}{ce{}{}}6{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}2`````````````````````{{{f{DbDGh}}{f{{Bh{Bf}}}}ddd}{{A`{bn}}}}{{{f{DbDGh}}d}b}<<<<;;;;999988887777{{{f{DGh}}}Ef}77776666{{{f{{Bh{Fh}}}}Fh{f{BCb}}{Cf{Bf}}CBdd}{{A`{{G`{DGh}}n}}}}6666{DGh{{A`{Abn}}}}6666666655557777```````````{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Eh}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Eh}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}`{{{f{CJb}}}{{l{Ml}}}}{{{f{CJd}}}{{l{Ml}}}}{{{f{CJf}}}{{l{Kd}}}}`{{{f{DAh}}}{{l{Ml}}}}21{{{f{CJb}}}{{l{Aj}}}}{{{f{CJd}}}{{l{Aj}}}}{{{f{CJb}}}{{l{Jn}}}}{{{f{CJd}}}{{l{Jn}}}}55`46576{{{f{DAh}}}{{l{Jn}}}}16{{{f{CJb}}}{{l{Nf}}}}{{{f{CJd}}}{{l{Nf}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{K`Jn}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}}{{Kb{LbKd}}}}{{{f{Bj}}{f{{Bh{{f{Bj}}}}}}{f{Bj}}Kf}{{Kb{KhKd}}}}=<{{{f{DDl}}Oj}{{A`{Abn}}}}{{{f{DDl}}{f{Ab}}CAd}{{A`{Abn}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}}{{A`{{Kb{K`Jn}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfdd{Cf{{f{Eh}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{BLl}}{Cf{{f{Bj}}}}Kfd{Cf{{f{Eh}}}}{f{{l{An}}}}}{{A`{{Kb{KhKd}}n}}}}{{{f{DGj}}}{{f{{l{An}}}}}}{{{f{BLl}}{Cf{{f{Bj}}}}d}{{A`{{Kb{LbKd}}n}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DGl}}}DGl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DGl}}{f{DGl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DGl}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{DGl}}{f{Dbc}}}bADf}`{{}Fh}{ce{}{}}{{{f{DGl}}{f{Bj}}}d}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{{DGn{c}}}}}{{DGn{c}}}{AD`Al}}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{cc{}}{{{f{Bj}}}{{Cf{DGl}}}}{{}Fh}{ce{}{}}`{{{f{Db{DGn{c}}}}{f{Bj}}}CfAl}{{{f{DbDH`}}{f{{Bh{Bf}}}}{Cf{Kf}}}{{Cf{c}}}{}}{{{f{Db{DGn{Jn}}}}{f{{Bh{Bf}}}}{Cf{Kf}}}{{Cf{Nj}}}}{{{f{Db{DGn{Kd}}}}{f{{Bh{Bf}}}}{Cf{Kf}}}{{Cf{Gf}}}}`{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{c{Cf{Kf}}}{{A`{{DHd{}{{DHb{e}}}}n}}}{}{}}{{DGl{Cf{Kf}}}{{A`{{DGn{Jn}}n}}}}{{DGl{Cf{Kf}}}{{A`{{DGn{Kd}}n}}}}3{{{f{c}}}AAd{}}:````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Dbc}}}{{f{Dbe}}}{}{}}0{{{f{CIb}}}CIb}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}CIb}{Fh{{f{c}}}{}}0{Fh{{f{Dbc}}}{}}0{Fhb}0{{{f{CIb}}{f{CIb}}}d}{{{f{DHf}}{f{DHf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIb}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}0{{{f{Bj}}}{{A`{DHf}}}}{{{f{Bj}}g}{{A`{CIbn}}}{{Hj{Bj}}}{{B@`{Eh}}}{{Hf{}{{Ch{{Gj{ce}}}}}}}}{{{f{CIb}}{f{Dbc}}}bADf}{{}Fh}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}000{{{f{c}}}AAd{}}033{{CIbFh}CIb}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMh{}{{Hf{}{{Ch{c}}}}}}0{{AFne}AMj{}{{Hf{}{{Ch{c}}}}}}0{{{f{AMl}}}{{f{Ef}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{{f{{Bh{c}}}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{{f{ANn}}{f{Ef}}}{{A`{Abn}}}}{{{f{ANn}}{f{Ef}}Fd}{{A`{Abn}}}}`{AOle{}{{AMh{c}}AKn}}0{{AOlAFn}e{}{{AMj{c}}AKn}}0{{{ANh{Bj}}}Ef}{{{f{ANn}}}{{f{Ef}}}}`{{ANl{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}{{{G`{c}}AFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{G`{c}}AFn}{{AKn{}{{AMn{e}}{AN`{c}}{ANb{g}}}}}{ANd{ANf{e}}}AD`{{Gd{}{{Ch{e}}}}IjIbId}}{{FhcAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{FhAFn}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{ANn}}Fh}{{A`{Iln}}}}{{{f{ANn}}Fh}Il}{{}Ef}{{{f{BAb}}Fh}Il}4{{BAdEf}{{A`{Lnn}}}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{AGf{cgAGd}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}{{Cf{c}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{{{f{AMd}}{f{AMd}}}{{A`{{Gj{AMdAMd}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Gj{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Ef}}{f{Ef}}}{{A`{Efn}}}}`{{}c{}}0{g{{A`{AMhe}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{{AFng}{{A`{AMje}}}{}{}{{Hf{}{{Ch{{A`{ce}}}}}}}}0{AOl{{A`{eg}}}{}{{AMh{c}}AKn}{}}0{{AOlAFn}{{A`{eg}}}{}{{AMj{c}}AKn}{}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}Fh}cAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}0{{{f{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}}}gAD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}{Fhc{}}0{{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}{Cf{Hn}}}{{AKn{}{{AMn{c}}{AN`{e}}{ANb{g}}}}}AD`{ANd{ANf{c}}}{{Gd{}{{Ch{c}}}}IjIbId}}```````````{{{f{AMd}}{f{AMd}}c}{{A`{AMdn}}}ANl}{{ANl{f{{l{En}}}}{f{{l{En}}}}}{{A`{{l{En}}n}}}}=<`````````{{}b}0{{}d}{{{f{{Kb{KhKd}}}}{f{{l{An}}}}CHn{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{Fl{Gf}{{Ad{ALn}}}}{Fl{ALn}{{Ad{Gf}}}}{f{AM`}}{f{AM`}}}{{A`{{l{Kd}}n}}}}{{{f{{Kb{KhKd}}}}{Cf{{f{Bj}}}}{f{{l{An}}}}CHn}{{A`{{Kb{KhKd}}n}}}}```{{c{Cf{Hn}}}COd{}}{{{COf{Gf}}{COf{Bf}}{Cf{Hn}}}COh}{{{COf{Gf}}{COf{Bf}}{Cf{Hn}}}COj}`{CKhBJ`}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{CKhKf}BJ`}3{{CKhBJ`Kf}BJ`}{{CKhEh}BJ`}555{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}8{cc{}}9{{}Fh}{ce{}{}};;;;;;;;;;{{CKh{Cf{Eh}}BJ`CHn}BJ`}{{CKhBJ`}BJ`}={{CKh{f{Bj}}}BJ`}>;0>>>>>>>1{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{CKhBJ`}0>0`{{{f{BHd}}{f{AAf}}{f{Bn}}}{{A`{Abn}}}}{{{f{BHd}}}{{A`{{f{Bj}}n}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{}DHh}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{DHh{Cf{{f{AFn}}}}}{{A`{AEfn}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DHh}}}d}{{FhFh}DHh}{{{f{DbDHh}}{Cl{Cj}}}b}{{{f{DbDHh}}}b}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}6`{{{f{{l{c}}}}}FhAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHj}}}DHj}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DHj}}{f{DHj}}}d}{{{f{DHj}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}{{{f{DHj}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHl}}}DHl}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DHl}}{f{DHl}}}d}{{{f{DHl}}{f{DbH`}}}{{A`{bHb}}}}0{cc{}}{{{f{DHl}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Eh{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}4{{LfLf}Lf}{{{f{{l{En}}}}In}{{A`{bn}}}}{{{f{{ALf{In}}}}In}{{A`{bn}}}}```{{{f{Ab}}CDb}Ab}{{{f{Ab}}{f{Ab}}d}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}CfLd{{Dj{}{{Ad{}}}}Dl}}{{{f{Ab}}{f{Bn}}}Ab}0{{{f{Ab}}{f{Bj}}}Ab}0`{{{f{c}}h}b{}}{{{f{DHn}}}{{f{AG`}}}}{{{f{DbDHn}}}{{Cl{Cj}}}}{{{f{DbDHn}}}{{f{DbAG`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DHn}}}DHn}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{DHn}}}{{f{AFn}}}}{{}DHn}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{DbDHn}}Fh}b}{{{f{DHn}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{}Fh}{ce{}{}}{{{f{DHn}}}Fh}{FhDHn}{{{f{DbDHn}}}b}70{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}{{{f{DHn}}}{{Cf{{f{DI`}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{DFf}}}DFf}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{}DFf}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{{BCj{EfA@d}}}}}Ef}{{{f{DFf}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{DFf}}}Fh}{{{f{DFf}}}{{Mf{BCb}}}}{{{f{Bj}}dd}Ef}{{{f{DA`}}Bf{Cf{Fh}}d{Cf{{f{BCb}}}}FhFh{Cf{{f{CBf}}}}{Cf{Bf}}Bf{Cf{{f{CBh}}}}dd{f{Db{Cf{Fh}}}}d}{{A`{{Gj{BCbFhFh}}n}}}}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}{{{f{DA`}}{f{CB`}}}{{A`{DFfn}}}}1{{{f{c}}}AAd{}}4{{DFf{Mf{BCb}}}DFf}````{{{f{{l{c}}}}eALhd}{{G`{In}}}Dh{{Cn{}{{Ch{Cf}}}}}}{{{f{{Bh{f}}}}cIne}{{G`{In}}}{{Cn{}{{Ch{Cf}}}}}{{Dj{fFhf}{{Ad{d}}}}}}``{{{f{DIb}}}{{f{Ab}}}}{{{f{C@h}}}{{A`{{l{Jn}}n}}}}{{{f{C@h}}}{{A`{{l{Ml}}n}}}}0{{{f{C@h}}}{{A`{{l{Aj}}n}}}}22112{{{f{C@h}}}{{A`{{l{Nf}}n}}}}322{{{f{C@h}}{f{Bj}}}{{A`{Abn}}}}{{{f{C@h}}Kf}{{A`{{l{Kd}}n}}}}1445`{{{f{AK`}}FhFh}AK`}0`{{Fh{f{Db{G`{d}}}}}b}```11{{Fh{f{{Bh{Ab}}}}{f{DbF`}}}{{A`{{ALj{{l{En}}}}n}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{Jd{Gf}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}{f{{Bh{d}}}}{f{{Bh{d}}}}}{{A`{{l{Ej}}n}}}}{{{f{Bj}}{f{{Bh{Ab}}}}}{{A`{{l{Ej}}n}}}}{{{f{Ab}}}{{A`{{Cl{Cj}}n}}}}{{{f{{Bh{Ab}}}}}{{A`{ALln}}}}{{{f{{Bh{Ab}}}}}{{A`{{l{Ej}}n}}}}0```````````99```{{{f{BMj}}}{{f{{l{An}}}}}}{{{f{BMn}}}{{A`{{l{An}}n}}}}{{{f{BMn}}}{{l{An}}}}{{{f{BMn}}{f{{l{An}}}}}{{l{An}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{Aj}}n}}}}{{{f{BMn}}{f{{l{An}}}}dd}{{A`{{l{Aj}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{Aj}}n}}}}{{{f{BMn}}{f{Bj}}d}{{A`{{l{En}}n}}}}{{{f{BMn}}{f{{l{An}}}}d}{{A`{{l{En}}n}}}}{{{f{BMn}}{f{{l{An}}}}Fh}{{A`{{l{An}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BMn}}{f{Bj}}{f{Ef}}}{{A`{Abn}}}}5{{{f{BMn}}{f{{l{An}}}}dd}{{A`{{l{En}}n}}}}{{{f{BMn}}{f{Bj}}}{{A`{{l{En}}n}}}}=<{{{f{{Bh{{f{{l{An}}}}}}}}{f{Bj}}d}{{A`{{l{An}}n}}}}{{{f{BMn}}{f{Bj}}{f{Bj}}}{{A`{{l{An}}n}}}}0{{{f{BMn}}{f{Bj}}{f{Bj}}Fh}{{A`{{l{An}}n}}}}1{{{f{BMn}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BMn}}{f{{l{An}}}}Fh}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{{l{An}}}}{f{{l{An}}}}Fhed}{{A`{{l{j}}n}}}{{Cn{}{{Ch{{f{Bj}}}}}}}{{Dj{{f{Bj}}{f{Bj}}}{{Ad{c}}}}}}2{{{f{BMn}}{f{Ab}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{Bj}}d}{{l{An}}}}{{{f{BMn}}}{{l{En}}}}0{{{f{BMn}}}{{l{An}}}}{{{f{BMn}}{f{Ab}}{f{Ab}}}{{A`{{l{An}}n}}}}4{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}505050{{{f{BMn}}{f{{l{An}}}}}{{l{An}}}}10{{{f{BMn}}{f{{l{En}}}}d}{{A`{{l{Kd}}n}}}}444````````{{eFhFh}{{DId{Gf}}}{{Hj{Bj}}}{{Cn{}{{Ch{c}}}}}}{{eFhFh}{{Jd{Gf}}}{{Hj{{Bh{Bf}}}}}{{Cn{}{{Ch{c}}}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bj}}{G`{{Cl{Cj}}}}{f{AFn}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}{f{AFn}}{Cf{{f{{DFn{EhEh}}}}}}}{{A`{Abn}}}}{{AbAb}}{{Abc}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Ll}}`{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}}{{Cf{Fh}}}}0{{{f{BL`}}El}{{l{En}}}}{{{f{BL`}}}{{A`{{l{En}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{C`}}}}n}}}}{{{f{Ab}}Fh}{{f{{Cl{Cj}}}}}}{{{f{BL`}}}{{f{AG`}}}}{{{f{DbBL`}}}{{f{DbAG`}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DbBL`}}}{{f{Db{l{c}}}}}Dh}{{{f{BL`}}}{{f{{l{c}}}}}Dh}{{{f{Ab}}}{{f{BL`}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DbBL`}}}{{A`{Fhn}}}}{{{f{DbAb}}}{{A`{Fhn}}}}{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ej}}}}n}}}}{{{f{BL`}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Aj}}}}n}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Dbc}}}{{f{Dbe}}}{}{}}000{{{f{BL`}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{Ab}}{f{Ef}}}{{A`{Abn}}}}0{{{f{Ab}}{f{Ef}}Fd}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMd}}n}}}}7{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BL`}}}{{Fn{{Fj{{Cl{Cj}}}}{Fl{{f{{Cl{Cj}}}}}{{Ad{Fh}}}}}}}}{{{f{Ab}}}{{`{{Cn{}{{Ch{Fh}}}}}}}}{{{f{BL`}}}{{f{{G`{{Cl{Cj}}}}}}}}{{{f{DbBL`}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{DbAb}}}{{f{Db{G`{{Cl{Cj}}}}}}}}{{{f{Ab}}}Ab}{{{f{Lf}}}Lf}1{{{f{BL`}}}{{Mf{BL`}}}}{{{f{c}}{f{Dbe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{DbAb}}}b}{{{f{Ab}}}{{A`{{f{{Kb{K`Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KhKd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{Kb{KlKj}}}}n}}}}{{}Ab}{Fh{{f{c}}}{}}000{{{f{Ab}}}f}{Fh{{f{Dbc}}}{}}000{{Abc}{}{B`Ll}}{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Ll}}{Fhb}000{{{f{BL`}}}Ab}{{{f{BL`}}}{{f{Ef}}}}{{{f{Ab}}}{{A`{{f{{Kb{KnKd}}}}n}}}}{{{f{Lf}}{f{Lf}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}c}{{A`{{l{Aj}}n}}}B@b}3{{{f{Ab}}c}{}B@b}2{{{f{Ab}}{f{Bj}}}}66{{{f{c}}{f{e}}}d{}{}}00{{{f{Ab}}}Fh}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DbAb}}{f{Ab}}}{{A`{{f{DbAb}}n}}}}{{{f{Ab}}IlFh}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ed}}}}n}}}}{{{f{BL`}}}{{Dn{Ob}}}}{{{f{Ab}}AHj}{{A`{Abn}}}}{{{f{BL`}}{f{{l{Aj}}}}}{{A`{Abn}}}}{{{f{Lf}}{f{DbH`}}}{{A`{bHb}}}}{{{f{Ab}}{f{DbH`}}}{{A`{bHb}}}}0{{{f{Ab}}}Eh}{cc{}}00{{{l{c}}}AbDh}{{{Kb{KnKd}}}Ab}{{{Kb{LbKd}}}Ab}{{{Kb{K`Jn}}}Ab}{{{Kb{KhKd}}}Ab}5{{{f{Bj}}{f{{Bh{Il}}}}d}{{A`{Abn}}}}{{{f{Bj}}{f{{Bh{Il}}}}{f{Ef}}d}{{A`{Abn}}}}{{{f{Bj}}{Cl{Cj}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}}{{A`{Abn}}}}{{{f{Bj}}{G`{{Cl{Cj}}}}{f{Ef}}}Ab}{g{{A`{ic}}}{}{}{{Hh{c}{{Ch{e}}}}}{}}{cAb{{Hf{}{{Ch{M`}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nh}}}}}}}}{cAb{{Hf{}{{Ch{Bf}}}}}}{cAb{{Hf{}{{Ch{Eh}}}}}}{cAb{{Hf{}{{Ch{{f{Nh}}}}}}}}{cAb{{Hf{}{{Ch{{f{Jf}}}}}}}}{cAb{{Hf{}{{Ch{d}}}}}}{cAb{{Hf{}{{Ch{{f{Gf}}}}}}}}{cAb{{Hf{}{{Ch{{f{In}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Jf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nj}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Jh}}}}}}}}{cAb{{Hf{}{{Ch{{f{d}}}}}}}}{cAb{{Hf{}{{Ch{Mn}}}}}}{cAb{{Hf{}{{Ch{Nd}}}}}}{cAb{{Hf{}{{Ch{{f{Bf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Bf}}}}}}}}{cAb{{Hf{}{{Ch{{f{M`}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Nd}}}}}}}}{cAb{{Hf{}{{Ch{Jh}}}}}}{cAb{{Hf{}{{Ch{In}}}}}}{cAb{{Hf{}{{Ch{{Cf{M`}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{Mn}}}}}}}}{cAb{{Hf{}{{Ch{{f{Mn}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{In}}}}}}}}{cAb{{Hf{}{{Ch{{f{Nj}}}}}}}}{cAb{{Hf{}{{Ch{Nh}}}}}}{cAb{{Hf{}{{Ch{{f{Bj}}}}}}}}{cAb{{Hf{}{{Ch{Nj}}}}}}{cAb{{Hf{}{{Ch{{Cf{Gf}}}}}}}}{cAb{{Hf{}{{Ch{{Cf{d}}}}}}}}{cAb{{Hf{}{{Ch{{f{Jh}}}}}}}}{cAb{{Hf{}{{Ch{Jf}}}}}}{cAb{{Hf{}{{Ch{Gf}}}}}}{cAb{{Hf{}{{Ch{{f{Nd}}}}}}}}{{{f{Bj}}{G`{Jh}}}Ab}{{{f{Bj}}{G`{Bf}}}Ab}{{{f{Bj}}{G`{In}}}Ab}{{{f{Bj}}{G`{Nd}}}Ab}{{{f{Bj}}{G`{M`}}}Ab}{{{f{Bj}}{G`{Nh}}}Ab}{{{f{Bj}}{G`{Gf}}}Ab}{{{f{Bj}}{G`{Mn}}}Ab}{{{f{Bj}}{G`{Jf}}}Ab}{{{f{Bj}}{G`{O`}}}Ab}{{{f{Bj}}{G`{Nj}}}Ab}{{{f{Bj}}Fh{f{Ef}}}Ab}{{{f{Ab}}FhFh}Ab}{{{f{BL`}}Fh}{{A`{Iln}}}}{{{f{Ab}}}Fh}{{{f{Ab}}}J`}{{{f{Ab}}}Ab}{{{f{BL`}}}{{Cf{{Mj{Mh}}}}}}{{{f{BL`}}Fh}{{Cf{{f{Jb}}}}}}{{{f{BL`}}FhFh}{{Cf{{f{Jb}}}}}}{{{f{BL`}}Fh}Il}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}{f{Bj}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}c}{{A`{{l{Aj}}n}}}B@b}32{{{f{Ab}}{f{Bj}}}}1{{{f{BL`}}}d}{{{f{Lf}}{f{Dbc}}}bADf}{{{f{Ab}}{Cf{Fh}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nf}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Jn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ml}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{En}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Fh}000{ce{}{}}000{AbAAf}1{BCdAb}{AbAb}={{{f{Ab}}}{{A`{{l{Aj}}n}}}}000{{{f{BL`}}}{{l{Aj}}}}0{{}d}0{{{f{Ab}}}Lf}{{{f{Ab}}}DIf}{{{f{Ab}}}{{`{{Cn{}{{Ch{Ab}}}}}}}}{{{f{BL`}}}Fh}{{{f{Ab}}}Fh}{{{f{BL`}}Fh}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBJ`}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}c}{{A`{{l{Aj}}n}}}B@b}3201{{{f{Ab}}}{{A`{{Cf{c}}n}}}Ll}{{{f{BL`}}}{{A`{Lnn}}}}{{{f{BL`}}}{{Cf{M`}}}}{{{f{Ab}}}Ln}1232{{{f{Ab}}c}{}{B`Ll}}{{Abc}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{AbAb}}{{{f{BL`}}}Fh}{{{f{Ab}}}Fh}{{{f{BL`}}}{{A`{Fhn}}}}{{{f{BL`}}}{{f{Bj}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Nd}}}}}}}}{{{f{Bj}}{f{Ab}}}Ab}{{{f{Bj}}c}Ab{{Hj{{Bh{Gf}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{In}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{B@j}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{O`}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{f{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{{f{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}{Nl{Jh}}}Ab}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Mn}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Jf}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{B@j}}}}}}}}{{{f{Bj}}{Nl{In}}}Ab}{{{f{Bj}}{Nl{Gf}}}Ab}{{{f{Bj}}c}Ab{{Hj{{Bh{Nd}}}}}}{{{f{Bj}}{Nl{Nj}}}Ab}{{{f{Bj}}c}Ab{{Hj{{Bh{M`}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Eh}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{O`}}}}}}{{{f{Bj}}c}AbBCd}{{{f{Bj}}c}Ab{{Hj{{Bh{{f{Bj}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Jh}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{In}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{d}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{{f{Bj}}}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Nh}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{ALn}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Dn{Bj}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Jf}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Eh}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Bf}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{ALn}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{{G`{Bf}}}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{B@l}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Ab}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{{Dn{Bj}}}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{M`}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{G`{Bf}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Mn}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Dn{{Bh{Bf}}}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{d}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Jh}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Nj}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Nh}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{AMb}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Nj}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{{Dn{{Bh{Bf}}}}}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Ab}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{Il}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{B@l}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Gf}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{Bf}}}}}}}}{{{f{Bj}}c}Ab{{Hj{{Bh{{Cf{AMb}}}}}}}}{{{f{Bj}}{f{Ef}}}Ab}{{{f{BL`}}FhFh}Ab}{{{f{Bj}}Fh}Ab}{{{f{DbDIf}}}Cf}{{{f{{AHl{}{{Ch{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bj}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Aj}}n}}}}{{{f{Ab}}c}{{A`{{l{Aj}}n}}}B@b}31{{{f{Ab}}{f{Bj}}}}{{{f{Ab}}c}{}B@b}{{{f{Ab}}}{{A`{{f{ADb}}n}}}}{{{f{BL`}}}Fh}`{{{f{Ab}}}{{Cl{L`}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{BL`}}M`Oh}{{A`{Lnn}}}}{{{f{BL`}}}Ab}{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{{f{DbBL`}}{f{Bj}}}b}{{{f{DbAb}}{f{Bj}}}{{f{DbAb}}}}{{{f{Ab}}{f{{Bh{Gf}}}}}{{A`{Abn}}}}06{LfLf}{{{f{BL`}}{f{Dj}}Oj}{{A`{Abn}}}}{{{f{Ab}}M`dd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fhdd{Cf{Jh}}}{{A`{Abn}}}}{{{f{Ab}}Fh}Ab}{{{f{DbAb}}Lf}b}{{{f{BL`}}Gf}Ab}{{{f{DbBL`}}}b}{{{f{DbAb}}}b}{{{f{Ab}}{Cf{Jh}}}Ab}{{{f{DIf}}}{{Gj{Fh{Cf{Fh}}}}}}{{{f{BL`}}GfFh}Ab}{{{f{Ab}}GfFh}Ab}{{{f{Ab}}El}{{A`{Abn}}}}{{{f{BL`}}El}{{A`{Abn}}}}{{{f{BL`}}Gf}{{Gj{AbAb}}}}{{{f{Ab}}Gf}{{Gj{AbAb}}}}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{BL`}}Bf}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}Fh}{{A`{{Dn{Bj}}n}}}}{{{f{Ab}}{f{Ef}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{AbAb}}{{Abc}{}{B`Ll}}{{{f{Ab}}c}{}{B`Ll}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}}{{A`{cn}}}Ll}{{{f{BL`}}}{{A`{Lnn}}}}{{{f{Ab}}}{{A`{Lnn}}}}{{{f{Ab}}{Cf{Fh}}}Ab}{{{f{BL`}}{f{{l{En}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bh{A@`}}}}Lf}Ab}{{{f{Ab}}{f{{Bh{A@`}}}}}Ab}{{{f{BL`}}{f{{Bh{In}}}}}{{A`{Abn}}}}{{{f{BL`}}{f{{Bh{In}}}}}Ab}{{{f{BL`}}{f{{l{En}}}}}Ab}{{{f{Ab}}{f{{Bh{In}}}}}Ab}{{{f{Ab}}}{{A`{{f{{Kb{LbKd}}}}n}}}}{{{f{Ab}}FhAOf}{{Cl{Cj}}}}{{{f{Ab}}{Cf{{f{Bj}}}}d}{{A`{AAfn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{c}}}e{}{}}0{{{f{Ab}}}{{Dn{Ab}}}}{{{f{c}}}Eh{}}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}00{{{Gj{{f{Bj}}{G`{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gj{{f{Bj}}{Cl{Cj}}}}}{{A`{Abn}}}}{{{Gj{{f{B@d}}{G`{{Cl{Cj}}}}}}}{{A`{Abn}}}}{{{Gj{{f{B@d}}{Cl{Cj}}}}}{{A`{Abn}}}}444445{{{f{DbAb}}{Jj{c}}}dDh}6{{{f{c}}}AAd{}}000{{{f{Ab}}}{{A`{{f{{l{Nb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{En}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{N`}}}}n}}}}{{{f{BL`}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BL`}}}{{A`{{f{{l{c}}}}n}}}Dh}{{{f{BL`}}Bf}{{Cf{M`}}}}{{{f{BL`}}Bf}{{A`{Lnn}}}}{ce{}{}}000{{Ab{f{Bj}}}Ab}{{{f{Ab}}c}Ab{B`Ll}}{{{f{Ab}}{f{{l{Aj}}}}{f{Ab}}}{{A`{Abn}}}}``{{{f{c}}h}b{}}{{{f{E`}}}{{f{Ab}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{E`}}}E`}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}{{{f{E`}}}Ab}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{cc{}}{{}Fh}{ce{}{}}{{{DIh{Ab}}}E`}{{{f{DbE`}}{f{Db{Cl{Cj}}}}}b}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}5{{{f{DbE`}}{f{Db{Cl{Cj}}}}e}c{}{{Dj{{f{E`}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BJb{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BJd}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bl}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{C@j}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ff}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{C@j}}c}{{A`{Abn}}}Bb}{{{f{{l{Ff}}}}c}{{A`{Abn}}}Bb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Dbc}}}{{f{Dbe}}}{}{}}{{{f{CKd}}}CKd}{{{f{c}}{f{Dbe}}}b{}{}}{{{f{c}}}b{}}0{{}CKd}{Fh{{f{c}}}{}}{Fh{{f{Dbc}}}{}}{Fhb}{{{f{CKd}}{f{CKd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CKd}}{f{DbH`}}}{{A`{bHb}}}}{cc{}}{{{f{CKd}}{f{Dbc}}}bADf}{{}Fh}{ce{}{}}{{{f{c}}}e{}{}}{c{{A`{e}}}{}{}}0{{{f{c}}}AAd{}}3","D":"AEHnB@f","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11356],[5,"StructType",1999,11357],[5,"ChunkedArray",17,11358],[6,"PolarsError",3450,11359],[6,"Result",11360],[5,"Series",10843,11361],[17,"Output"],[10,"FnMut",11362],[5,"ListType",1999,11357],[5,"BooleanType",1999,11357],[10,"PolarsNumericType",1999,11357],[5,"StringType",1999,11357],[10,"Num",11363],[10,"ToPrimitive",11364],[5,"BinaryType",1999,11357],[1,"u8"],[1,"slice"],[1,"str"],[10,"NumOpsDispatchInner",11301,11365],[6,"GroupsProxy",3838,11366],[5,"FixedSizeListType",1999,11357],[5,"ObjectType",1999,11357],[10,"PolarsObject",1553,11367],[6,"Option",11368],[17,"Item"],[10,"Array",11369],[5,"Box",11370],[10,"Iterator",11371],[5,"AmortizedListIter",11372],[0,"mut"],[17,"IsNested"],[5,"FalseT",1999,11357],[10,"PolarsDataType",1999,11357],[10,"Fn",11362],[10,"Copy",11373],[6,"Cow",11374],[5,"AmortSeries",11277,11375],[5,"Float32Type",1999,11357],[5,"Float64Type",1999,11357],[6,"DataType",1999,11376],[5,"String",11377],[5,"BinaryOffsetType",1999,11357],[5,"SortOptions",1681,11378],[5,"UInt32Type",1999,11357],[5,"SortMultipleOptions",1681,11378],[10,"PolarsIntegerType",1999,11357],[6,"CastOptions",1158,11379],[10,"NumOpsDispatchCheckedInner",11322,11380],[1,"usize"],[5,"Iter",11381],[1,"fn"],[5,"Map",11382],[5,"Vec",11383],[5,"MetadataProperties",1265,11384],[10,"DoubleEndedIterator",11385],[1,"i64"],[5,"OffsetsBuffer",11386],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11387],[5,"Error",11387],[17,"Array"],[10,"IntoIterator",11388],[10,"FallibleIterator",11389],[10,"AsRef",11390],[10,"PolarsAsRef",11391],[5,"Bitmap",11392],[10,"Borrow",11393],[10,"Send",11373],[10,"Sync",11373],[10,"IntoParallelIterator",11394],[10,"NoOption",11395],[10,"TrustedLen",11396],[6,"AnyValue",1999,11397],[1,"u32"],[5,"MetadataFlags",1265,11384],[10,"PolarsObjectSafe",1553,11367],[5,"BinaryArray",11398],[1,"f32"],[1,"u64"],[5,"Metadata",1265,11384],[5,"RwLockWriteGuard",11399],[5,"Int32Type",1999,11357],[5,"DateType",1999,11357],[5,"Logical",1999,11400],[5,"Int64Type",1999,11357],[6,"TimeUnit",1999,11401],[5,"DatetimeType",1999,11357],[5,"Int128Type",1999,11357],[5,"DecimalType",1999,11357],[5,"DurationType",1999,11357],[10,"ExactSizeIterator",11402],[5,"TimeType",1999,11357],[10,"PolarsFloatType",1999,11357],[6,"IsSorted",10843,11403],[10,"PolarsIterator",1208,11404],[6,"ChunkedArrayLayout",17,11358],[10,"NumCast",11364],[5,"Scalar",4209,11405],[1,"f64"],[6,"MetadataReadGuard",1265,11406],[5,"IMMetadata",1265,11407],[5,"Arc",4209,11408],[10,"MetadataTrait",1265,11409],[5,"RwLockReadGuard",11399],[5,"Int8Type",1999,11357],[1,"i8"],[5,"UInt8Type",1999,11357],[5,"UInt16Type",1999,11357],[1,"u16"],[5,"Int16Type",1999,11357],[1,"i16"],[1,"i32"],[5,"Range",11410],[5,"UInt64Type",1999,11357],[1,"i128"],[5,"Field",1999,11411],[10,"ParallelIterator",11394],[10,"IndexedParallelIterator",11394],[6,"QuantileInterpolOptions",4209,11412],[5,"RollingOptionsFixedWindow",4209,11413],[10,"PolarsOpsNumericType",11414],[10,"Sized",11373],[5,"ChunkId",4209,11415],[17,"IsStruct"],[5,"RandomState",11416],[5,"BytesHash",11417],[5,"ViewRepr",11418],[1,"array"],[5,"Dim",11419],[5,"ArrayBase",11418],[5,"OwnedRepr",11420],[6,"Either",11421],[5,"TypeId",11422],[5,"DataFrame",3545,11423],[5,"NullableIdxSize",4209,11415],[10,"FnOnce",11362],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",852,11424],[5,"AnonymousListBuilder",880,11425],[5,"AnonymousOwnedListBuilder",880,11425],[5,"ListBooleanChunkedBuilder",880,11426],[5,"ListPrimitiveChunkedBuilder",880,11427],[10,"ListBuilderTrait",880,11428],[10,"ChunkedBuilder",880,11429],[5,"ListStringChunkedBuilder",880,11430],[5,"ListBinaryChunkedBuilder",880,11430],[5,"ListNullChunkedBuilder",880,11431],[5,"BinViewChunkedBuilder",880,11432],[10,"ViewType",11433],[5,"BooleanChunkedBuilder",880,11434],[5,"NullChunkedBuilder",880,11435],[5,"PrimitiveChunkedBuilder",880,11436],[10,"Clone",11437],[5,"NullChunked",11438],[10,"NewChunkedArray",880,11429],[10,"Hasher",11439],[10,"ChunkedCollectInferIterExt",1188,11440],[10,"ChunkedCollectIterExt",1188,11440],[10,"Canonical",1202,11441],[10,"ChunkedCollectParIterExt",1204,11442],[10,"FromParIterWithDtype",1204,11442],[5,"BooleanArray",11443],[5,"BoolIterNoNull",1208,11404],[5,"FixedSizeListArray",11444],[5,"FixedSizeListIterNoNull",1208,11404],[5,"SomeIterator",1208,11404],[5,"MetadataEnv",1265,11445],[10,"MetadataCollectable",1265,11446],[5,"Iter",11447],[5,"IterNames",11447],[5,"File",11448],[5,"Mutex",11449],[6,"MetadataMerge",1265,11384],[5,"RwLock",11399],[5,"ObjectArray",1553,11367],[6,"ArrowDataType",1999,11450],[10,"Any",11422],[10,"Debug",11387],[5,"BitmapIter",11451],[6,"ZipValidity",11452],[5,"ObjectChunkedBuilder",1630,11453],[10,"AnonymousObjectBuilder",1653,11454],[5,"ObjectRegistry",1653,11454],[17,"FuncRet"],[10,"ChunkApply",1681,11455],[10,"ChunkApplyKernel",1681,11455],[10,"ChunkSort",1681,11455],[10,"ChunkUnique",1681,11455],[10,"ChunkCast",1681,11455],[6,"FillNullStrategy",1681,11455],[10,"ChunkCompare",10843,11455],[10,"ChunkExplode",1681,11455],[10,"ChunkFillNullValue",1681,11455],[10,"ChunkFilter",1681,11455],[10,"ChunkFull",1681,11455],[10,"ChunkFullNull",1681,11455],[10,"ChunkAnyValue",1681,11455],[10,"IsFirstDistinct",1681,11455],[10,"IsLastDistinct",1681,11455],[10,"ChunkAgg",1681,11455],[10,"ChunkQuantile",1681,11455],[10,"ChunkExpandAtIndex",1681,11455],[10,"Reinterpret",1681,11455],[10,"ChunkReverse",1681,11455],[10,"ChunkRollApply",1681,11455],[10,"ChunkSet",1681,11455],[10,"ChunkShift",1681,11455],[10,"ChunkShiftFill",1681,11455],[10,"SlicedArray",1681,11456],[10,"ChunkVar",1681,11455],[10,"ChunkTake",1681,11455],[10,"ChunkTakeUnchecked",1681,11455],[10,"ChunkBytes",1681,11455],[10,"ChunkZip",1681,11455],[10,"BinaryFnMut",1888,11457],[10,"StaticArray",1999,11458],[10,"TernaryFnMut",1888,11457],[10,"Error",11459],[10,"UnaryFnMut",1888,11457],[5,"PrimitiveArray",11460],[6,"SearchSortedSide",1928,11461],[5,"NoNull",4209,11462],[5,"RowsEncoded",11463],[5,"NaiveDateTime",11464],[6,"Tz",11465],[5,"NaiveTime",11466],[5,"CategoricalChunked",1999,11467],[5,"CategoricalChunkedBuilder",1999,11468],[10,"ArrayFromIter",1999,11469],[10,"ArrayFromIterDtype",1999,11469],[10,"AsRefDataType",1999,11376],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11470],[10,"From",11390],[5,"BinaryViewArrayGeneric",11433],[6,"RevMapping",1999,11471],[10,"CategoricalMergeOperation",1999,11472],[10,"LogicalType",1999,11400],[6,"CategoricalOrdering",1999,11471],[5,"OwnedObject",1999,11397],[6,"UnknownKind",1999,11376],[5,"CompatLevel",1999,11376],[5,"CategoricalType",1999,11357],[6,"ArrowTimeUnit",1999],[10,"ArrayCollectIterExt",1999,11469],[5,"GlobalRevMapMerger",1999,11472],[10,"Into",11390],[10,"NumericNative",1999,11357],[5,"ArrowField",4209],[6,"IntegerType",11473],[6,"PrimitiveType",11474],[5,"TimeDelta",11475],[5,"NaiveDate",11476],[5,"LazyCompact",11477],[5,"SmartString",11478],[10,"GetAnyValue",1999,11397],[10,"IntoScalar",1999,11479],[5,"CatIter",1999,11467],[6,"Ordering",11480],[1,"u128"],[6,"PhysicalType",11473],[5,"StringCacheHolder",3429,11481],[5,"ErrString",3450,11359],[6,"PolarsWarning",3450,11482],[5,"Utf8Error",11483],[5,"TryReserveError",11484],[6,"Error",11485],[5,"Error",11486],[5,"Error",11487],[6,"ParquetError",11488],[10,"Display",11387],[5,"Schema",4209,11489],[10,"IntoSeries",10843,11490],[6,"NullStrategy",3545,11423],[6,"UniqueKeepStrategy",3545,11423],[5,"HashSet",11491],[5,"ArrowSchema",4209,11492],[5,"Row",4097,11493],[5,"GroupBy",3838,11494],[5,"DynamicGroupOptions",4209,11495],[5,"RangeFrom",11410],[5,"RangeInclusive",11410],[5,"RangeFull",11410],[5,"RangeTo",11410],[5,"RangeToInclusive",11410],[5,"RecordBatchIter",3545,11423],[5,"PhysRecordBatchIter",3545,11423],[5,"LazyFrame",4209,11496],[5,"RollingGroupOptions",4209,11495],[10,"RangeBounds",11410],[10,"IntoVec",4209,11462],[6,"IndexOrder",4209,11497],[5,"StructArray",4209,11498],[5,"RecordBatchT",11499],[5,"UnpivotArgs",3808,11500],[5,"Duration",4209,11501],[5,"GroupsIdx",3838,11366],[5,"UnitVec",11502],[6,"GroupByMethod",3838,11494],[5,"SlicedGroups",3838,11366],[5,"GroupsProxyParIter",3838,11366],[10,"UnindexedConsumer",11503],[6,"GroupsIndicator",3838,11366],[6,"IRAggExpr",11504],[10,"IntoGroupsProxy",3838,11505],[5,"Copied",11506],[5,"Zip",11507],[5,"GroupsProxyIter",3838,11366],[10,"IsFloat",11508],[10,"NativeType",11509],[10,"AggList",4081,11510],[10,"TakeExtremum",4081,11511],[10,"PhysicalAggExpr",4094,11512],[6,"AnyValueBuffer",4097,11513],[6,"AnyValueBufferTrusted",4097,11513],[5,"Node",11514],[6,"IR",11515],[5,"Arena",11514],[6,"AExpr",11504],[10,"JoinDispatch",4209,11516],[5,"JoinArgs",4209,11517],[10,"DfTake",4209,11518],[10,"DataFrameOps",4209,11519],[5,"CsvReader",4209,11520],[10,"PhysicalIoExpr",11521],[10,"MmapBytesReader",11522],[6,"Expr",4209,11523],[10,"LhsNumOps",11301,11365],[10,"NumOpsDispatch",11301,11365],[5,"LazyGroupBy",4209,11496],[5,"OptState",4209,11524],[10,"Allocator",11525],[5,"JoinBuilder",4209,11496],[10,"AnonymousScan",4209,11526],[5,"ScanArgsAnonymous",4209,11527],[10,"FunctionOutputField",4209,11528],[5,"SpecialEq",4209,11528],[6,"VisitRecursion",11529],[6,"FunctionExpr",4209,11530],[10,"ArgAgg",4209,11531],[5,"ArrayNameSpace",4209,11532],[5,"ListNameSpace",4209,11533],[10,"SeriesTrait",10843,11403],[5,"FieldsMapper",4209,11534],[5,"IpcStreamReader",4209,11535],[10,"Read",11536],[10,"SeriesUdf",4209,11528],[10,"AsBinary",4209,11537],[10,"StringMethods",9785,11538],[5,"BorrowedFd",11539],[10,"AsFd",11539],[10,"AsList",4209,11540],[10,"AsRawFd",11541],[6,"AggExpr",4209,11523],[10,"SeriesSealed",4209,11542],[10,"AsString",4209,11543],[20,"MaybeUninit",11544],[10,"StringNameSpaceImpl",4209,11545],[5,"OwnedBatchedCsvReader",4209,11546],[5,"CsvWriter",4209,11547],[5,"BatchedWriter",11547],[10,"Write",11536],[5,"IpcWriter",4209,11548],[5,"BatchedWriter",11548],[5,"ParquetReader",4209,11549],[5,"BatchedParquetReader",4209,11550],[5,"ParquetWriter",4209,11551],[5,"BatchedWriter",11552],[5,"BatchedCsvReader",4209,11546],[5,"BinaryNameSpace",9691,11553],[6,"Operator",4209,11523],[10,"RenameAliasFn",4209,11528],[5,"UserDefinedFunction",4209,11554],[10,"SeriesBinaryUdf",4209,11528],[5,"InProcessQuery",4209,11555],[5,"HashMap",11556],[5,"CategoricalNameSpace",4209,11557],[10,"RoundSeries",4209,11558],[10,"TemporalMethods",10725,11559],[10,"NumOpsDispatchChecked",11322,11380],[5,"LazyCsvReader",4209,11560],[5,"ScanArgsIpc",4209,11561],[5,"LazyJsonLineReader",4209,11562],[5,"ScanArgsParquet",4209,11563],[5,"RollingOptionsDynamicWindow",4209,11564],[5,"Bounds",4209,11565],[6,"ClosedWindow",4209,11566],[6,"Label",4209,11566],[6,"StartBy",4209,11566],[5,"Window",4209,11567],[5,"CsvReadOptions",4209,11568],[5,"CsvParseOptions",4209,11568],[6,"CsvEncoding",4209,11568],[6,"CommentPrefix",4209,11568],[6,"NullValues",4209,11568],[5,"CsvWriterOptions",4209,11569],[5,"SerializeOptions",4209,11569],[6,"JoinCoalesce",4209,11517],[6,"QuoteStyle",4209,11569],[6,"JoinType",4209,11517],[5,"IpcScanOptions",4209,11570],[6,"JoinValidation",4209,11517],[5,"IpcWriterOptions",4209,11548],[6,"IpcCompression",4209,11548],[5,"AsOfOptions",4209,11571],[5,"JsonWriterOptions",4209,11572],[6,"AsofStrategy",4209,11571],[6,"InterpolationMethod",4209,11573],[5,"ParquetOptions",4209,11574],[6,"ClosedInterval",4209,11575],[6,"ParallelStrategy",4209,11574],[6,"RankMethod",4209,11576],[5,"RankOptions",4209,11576],[5,"ParquetWriteOptions",4209,11577],[6,"ParquetCompression",4209,11577],[5,"GzipLevel",4209,11577],[5,"BrotliLevel",4209,11577],[5,"ZstdLevel",4209,11577],[6,"DslPlan",4209,11578],[5,"When",4209,11579],[5,"Then",4209,11579],[5,"ChainedWhen",4209,11579],[5,"ChainedThen",4209,11579],[6,"Excluded",4209,11523],[6,"BooleanFunction",4209,11580],[6,"CategoricalFunction",4209,11581],[6,"TemporalFunction",4209,11582],[6,"PowFunction",4209,11583],[6,"StringFunction",4209,11584],[6,"StructFunction",4209,11585],[5,"DatetimeArgs",4209,11586],[5,"DurationArgs",4209,11586],[5,"RollingCovOptions",4209,11587],[5,"StrptimeOptions",4209,11587],[5,"JoinOptions",4209,11587],[6,"WindowType",4209,11587],[6,"WindowMapping",4209,11587],[6,"NestedType",4209,11587],[6,"LiteralValue",4209,11588],[5,"StatisticsOptions",4209,11589],[5,"AnonymousScanOptions",4209,11590],[5,"UnionArgs",4209,11590],[5,"FileMetaData",4209,11591],[5,"RollingVarParams",4209,11592],[5,"RollingQuantileParams",4209,11592],[6,"NonExistent",4209,11593],[10,"LazyFileListReader",4209,11594],[5,"CloudOptions",9923,11595],[10,"Ord",11480],[6,"ColumnOrder",11596],[10,"BinaryNameSpaceImpl",4209,11597],[5,"JsonLineReader",4209,11598],[5,"PathBuf",11599],[10,"CrossJoin",4209,11600],[10,"ExprEvalExtension",4209,11601],[10,"DateMethods",9785,11602],[10,"DatetimeMethods",9785,11603],[10,"DurationMethods",9785,11604],[5,"IpcStreamWriterOption",4209,11535],[10,"BinaryUdfOutputField",4209,11528],[10,"Default",11605],[5,"CStr",11606],[5,"RowGroupMetaData",11607],[5,"ParquetStatistics",4209],[6,"NullBehavior",11328,11608],[5,"Weak",11408],[5,"DateLikeNameSpace",10290,11609],[1,"char"],[10,"FromIterator",11388],[10,"SchemaNamesAndDtypes",4209,11489],[10,"SeriesMethods",4209,11610],[10,"PartialEq",11480],[10,"Scalar",11611],[10,"ListNameSpaceExtension",4209,11612],[10,"Command",11613],[5,"Path",11599],[5,"StructNameSpace",4209,11614],[10,"SerReader",4209,11615],[10,"SerWriter",4209,11615],[5,"IpcReader",4209,11570],[5,"IpcStreamWriter",4209,11535],[5,"JsonWriter",4209,11572],[5,"JsonReader",4209,11572],[10,"UdfSchema",4209,11616],[6,"BinaryFunction",11617],[6,"ListFunction",11618],[6,"RangeFunction",11619],[6,"ArrayFunction",11620],[5,"OsString",11621],[5,"OsStr",11621],[1,"never"],[10,"ToOwned",11374],[5,"CString",11622],[5,"MutableStatistics",11623],[5,"GrowableStruct",11624],[5,"MutableStructArray",11625],[10,"FromData",10284,11626],[5,"Buffer",11627],[10,"FromDataUtf8",10284,11626],[10,"FromDataBinary",10284,11626],[5,"ListArray",11628],[6,"Ambiguous",4209,11593],[10,"NamedFromOwned",4209,11629],[10,"DataFrameJoinOps",4209,11630],[5,"FunctionOptions",11590],[10,"PartialOrd",11480],[6,"Context",11578],[10,"IndexOfSchema",4209,11489],[17,"DataType"],[5,"BoundsIter",4209,11567],[6,"ReaderBytes",11522],[10,"PolarsTemporalGroupby",4209,11495],[10,"Hash",11439],[10,"SeriesJoin",4209,11631],[10,"TimeMethods",9785,11632],[5,"NonZero",11633],[10,"IntoListNameSpace",4209,11612],[5,"FileMetaData",11634],[5,"StructValueIter",11635],[10,"AsofJoinBy",4209,11636],[10,"ListNameSpaceImpl",4209,11637],[5,"ExprNameNameSpace",4209,11638],[5,"KeyValue",11634],[10,"IntoLazy",4209,11496],[10,"Literal",4209,11588],[5,"Null",4209,11588],[10,"CloneToUninit",11437],[5,"RowIndex",11639],[10,"ChunkAggSeries",4209,11640],[10,"QuantileAggSeries",4209,11641],[10,"IndexToUsize",4209,11642],[10,"NamedFrom",4209,11629],[6,"RowGroupFetcher",11550],[5,"SplitNChars",4209,11643],[5,"Pin",11644],[5,"Request",11459],[10,"SeriesRank",4209,11576],[5,"BorrowedCursor",11645],[10,"VarInt",11646],[5,"IoSliceMut",11536],[10,"SeriesOpsTime",9785,11647],[10,"PolarsRound",4209,11648],[5,"AnonymousScanArgs",4209,11526],[10,"ChunkedSet",4209,11414],[5,"SchemaDescriptor",11649],[6,"SeekFrom",11536],[10,"VarAggSeries",4209,11650],[5,"StringNameSpace",11651],[10,"TakeChunked",4209,11518],[5,"IRPlan",11515],[10,"ToDummies",4209,11652],[10,"PolarsTruncate",4209,11653],[5,"AllocError",11525],[5,"SchemaInferenceResult",10692,11654],[10,"PolarsUpsample",4209,11655],[10,"VecHash",4209,11656],[6,"JsonFormat",4209,11572],[5,"BTreeMap",11657],[10,"WriteDataFrameToFile",11615],[5,"IoSlice",11536],[10,"ArrayNameSpace",9672,11658],[10,"AsArray",9672,11659],[6,"Buffer",9707,11660],[10,"AsString",9852,11538],[6,"Pattern",9852,11661],[5,"DatetimeInfer",9892,11662],[10,"StrpTimeParser",9892,11662],[17,"Error"],[10,"TryFromWithUnit",9892,11662],[6,"CloudType",9923,11595],[5,"AnonymousBuilder",10345,11663],[6,"RollingFunction",10587,11664],[6,"RollingFunctionBy",10617,11665],[5,"MutableNullArray",10661,11666],[5,"MutableBitmap",11667],[10,"AsSeries",10725,11559],[5,"Utf8Array",11668],[5,"SeriesIter",10843,11669],[5,"Rc",11670],[8,"FillNullLimit",1681],[10,"InitHashMaps",1999],[10,"InitHashMaps2",1999],[5,"TrueT",1999],[8,"PolarsResult",3450],[15,"IO",9604],[15,"Context",9604],[15,"Count",9598],[15,"Slice",9599],[8,"ChunkJoinOptIds",4209],[8,"DynArgs",4209],[10,"ListFromIter",4209],[15,"Quantile",9477],[15,"Min",9477],[15,"Max",9477],[15,"IsBetween",10540],[15,"Any",10540],[15,"All",10540],[15,"GroupBy",9487],[15,"Union",9487],[15,"Sort",9487],[15,"Cache",9487],[15,"ExtContext",9487],[15,"DataFrameScan",9487],[15,"IR",9487],[15,"Select",9487],[15,"HStack",9487],[15,"Scan",9487],[15,"MapFunction",9487],[15,"Filter",9487],[15,"Distinct",9487],[15,"Slice",9487],[15,"Sink",9487],[15,"Join",9487],[15,"HConcat",9487],[15,"SortBy",9541],[15,"Filter",9541],[15,"Cast",9541],[15,"Sort",9541],[15,"Gather",9541],[15,"RenameAlias",9541],[15,"Ternary",9541],[15,"Function",9541],[15,"Window",9541],[15,"AnonymousFunction",9541],[15,"Slice",9541],[15,"BinaryExpr",9541],[15,"Round",10543],[15,"RoundSF",10543],[15,"Clip",10543],[15,"BackwardFill",10543],[15,"ForwardFill",10543],[15,"Random",10543],[15,"GatherEvery",10543],[15,"ValueCounts",10543],[15,"Rank",10543],[15,"ReplaceStrict",10543],[15,"CumCount",10543],[15,"CumSum",10543],[15,"CumProd",10543],[15,"CumMin",10543],[15,"CumMax",10543],[15,"Range",9601],[15,"ConcatHorizontal",10565],[15,"ConcatVertical",10565],[15,"ExtractGroups",10565],[15,"SplitExact",10565],[15,"Contains",10565],[15,"Find",10565],[15,"Replace",10565],[15,"DatetimeFunction",10579],[5,"Utf8Field",9707],[5,"CategoricalField",9707],[5,"DatetimeField",9707],[15,"Datetime",9781],[10,"Utf8FromIter",10839],[10,"BinaryFromIter",10839],[6,"BitRepr",10843]],"r":[[1,11671],[2,11671],[3,11671],[4,11671],[6,11481],[7,11671],[8,11671],[9,11671],[13,11671],[14,11671],[16,11481],[17,11358],[18,11358],[19,11358],[24,11672],[116,11358],[139,11358],[140,11358],[168,11358],[170,11358],[223,11358],[276,11358],[425,11358],[474,11358],[579,11358],[582,11358],[722,11358],[852,11424],[880,11425],[881,11425],[882,11432],[883,11432],[884,11434],[885,11429],[886,11430],[887,11426],[888,11428],[889,11431],[890,11427],[891,11430],[892,11429],[893,11435],[894,11436],[895,11432],[1032,11429],[1048,11428],[1076,11429],[1141,11425],[1142,11425],[1143,11430],[1144,11426],[1145,11428],[1146,11431],[1147,11427],[1148,11430],[1156,11428],[1158,11379],[1188,11440],[1189,11440],[1202,11441],[1204,11442],[1205,11442],[1208,11404],[1209,11404],[1210,11404],[1211,11404],[1247,11404],[1263,11673],[1264,11673],[1270,11407],[1275,11384],[1276,11446],[1277,11445],[1278,11384],[1279,11384],[1280,11384],[1281,11406],[1282,11409],[1553,11367],[1554,11367],[1555,11367],[1556,11367],[1568,11367],[1598,11367],[1599,11674],[1630,11453],[1653,11454],[1654,11454],[1655,11454],[1656,11454],[1668,11454],[1669,11454],[1670,11454],[1673,11454],[1675,11454],[1682,11455],[1683,11455],[1684,11455],[1685,11455],[1686,11455],[1687,11455],[1688,11455],[1689,11455],[1690,11455],[1691,11455],[1692,11455],[1693,11455],[1694,11455],[1695,11455],[1696,11455],[1697,11455],[1698,11455],[1699,11455],[1700,11455],[1701,11455],[1702,11455],[1703,11455],[1704,11455],[1705,11455],[1706,11455],[1707,11455],[1708,11455],[1711,11455],[1712,11455],[1721,11455],[1722,11456],[1724,11378],[1725,11378],[1738,11455],[1785,11455],[1788,11455],[1797,11455],[1800,11455],[1843,11455],[1849,11455],[1886,11455],[1888,11457],[1892,11457],[1893,11457],[1894,11457],[1895,11457],[1896,11457],[1897,11457],[1898,11457],[1899,11457],[1900,11457],[1901,11457],[1902,11457],[1903,11457],[1904,11457],[1905,11457],[1906,11457],[1907,11457],[1908,11457],[1909,11457],[1910,11457],[1911,11457],[1912,11457],[1913,11457],[1914,11457],[1915,11457],[1916,11457],[1917,11457],[1918,11457],[1919,11457],[1920,11457],[1921,11457],[1922,11457],[1923,11675],[1924,11675],[1925,11676],[1926,11676],[1927,11676],[1931,11461],[1933,11461],[1953,11461],[1959,11456],[1960,11677],[1961,11677],[1962,11677],[1963,11677],[1966,11678],[1967,11679],[1968,11679],[1969,11679],[1970,11679],[1971,11679],[1972,11679],[1973,11679],[1974,11679],[1975,11456],[1976,11378],[1977,11378],[1988,11680],[1989,11681],[1990,11681],[1991,11681],[1992,11680],[1993,11680],[1994,11682],[1995,11680],[1996,11681],[1997,11681],[1998,11681],[2000,11397],[2004,11357],[2005,11469],[2006,11469],[2007,11469],[2008,11450],[2010,11376],[2014,11357],[2016,11357],[2017,11357],[2019,11357],[2024,11357],[2025,11357],[2026,11467],[2029,11467],[2030,11468],[2031,11472],[2032,11471],[2033,11357],[2034,11376],[2035,11376],[2036,11376],[2037,11376],[2042,11683],[2043,11357],[2046,11684],[2047,11357],[2052,11685],[2053,11357],[2058,11686],[2059,11357],[2063,11357],[2064,11411],[2065,11411],[2068,11357],[2074,11357],[2075,11357],[2079,11357],[2080,11357],[2081,11397],[2083,11472],[2087,11687],[2088,11642],[2089,11687],[2090,11687],[2091,11688],[2092,11687],[2094,11357],[2095,11357],[2099,11357],[2100,11357],[2104,11357],[2105,11357],[2109,11357],[2110,11357],[2114,11357],[2115,11357],[2117,11479],[2128,11357],[2129,11357],[2131,11400],[2132,11400],[2144,11357],[2147,11357],[2149,11357],[2150,11397],[2154,11688],[2155,11688],[2156,11687],[2157,11688],[2158,11688],[2159,11357],[2160,11357],[2161,11357],[2162,11357],[2164,11471],[2167,11458],[2171,11357],[2173,11357],[2178,11357],[2183,11689],[2184,11357],[2185,11401],[2186,11376],[2189,11357],[2193,11357],[2194,11357],[2198,11357],[2199,11357],[2203,11357],[2204,11357],[2208,11357],[2209,11357],[2213,11376],[2379,11472],[2392,11400],[2536,11376],[3047,11472],[3048,11472],[3052,11376],[3406,11467],[3407,11467],[3408,11468],[3409,11472],[3410,11471],[3412,11472],[3416,11471],[3417,11472],[3419,11472],[3420,11472],[3421,11467],[3422,11467],[3423,11471],[3428,11471],[3429,11481],[3435,11481],[3438,11481],[3446,11481],[3456,11359],[3463,11359],[3464,11359],[3465,11482],[3481,11359],[3494,11359],[3510,11482],[3517,11359],[3518,11359],[3519,11359],[3520,11359],[3521,11359],[3522,11482],[3523,11359],[3542,11690],[3543,11690],[3544,11690],[3546,11423],[3551,11423],[3552,11423],[3554,11423],[3555,11423],[3630,11423],[3661,11423],[3725,11423],[3808,11500],[3838,11366],[3841,11494],[3842,11494],[3844,11366],[3845,11366],[3846,11366],[3847,11366],[3848,11366],[3849,11366],[3852,11366],[3854,11505],[3866,11366],[3875,11494],[3947,11494],[3957,11494],[4081,11510],[4082,11511],[4083,11511],[4084,11511],[4085,11511],[4086,11511],[4087,11511],[4088,11511],[4089,11511],[4090,11511],[4094,11512],[4099,11513],[4100,11513],[4120,11493],[4154,11493],[4175,11493],[4189,11493],[4190,11493],[4191,11493],[4207,11691],[4208,11692],[4211,11523],[4218,11524],[4220,11593],[4223,11526],[4224,11526],[4225,11590],[4231,11397],[4232,11408],[4233,11531],[4236,11424],[4241,11357],[4242,11469],[4244,11469],[4245,11469],[4246,11532],[4247,11369],[4248,11450],[4250,11492],[4252,11537],[4253,11540],[4255,11571],[4256,11376],[4257,11543],[4259,11571],[4260,11636],[4261,11571],[4264,11693],[4270,11546],[4271,11550],[4276,11357],[4277,11432],[4280,11597],[4282,11357],[4283,11357],[4285,11357],[4286,11528],[4293,11357],[4294,11434],[4295,11580],[4296,11357],[4297,11366],[4300,11565],[4301,11567],[4303,11577],[4309,11467],[4313,11467],[4314,11468],[4315,11581],[4316,11472],[4317,11557],[4318,11471],[4319,11357],[4323,11579],[4324,11579],[4325,11455],[4326,11640],[4327,11455],[4328,11455],[4329,11455],[4330,11455],[4331,11455],[4332,11455],[4333,11455],[4334,11455],[4335,11455],[4336,11455],[4337,11455],[4338,11455],[4339,11415],[4340,11517],[4341,11455],[4342,11455],[4343,11455],[4344,11455],[4345,11455],[4346,11455],[4347,11455],[4348,11455],[4349,11455],[4350,11455],[4351,11455],[4352,11455],[4353,11358],[4354,11429],[4355,11440],[4356,11440],[4357,11414],[4359,11575],[4360,11566],[4368,11568],[4369,11376],[4381,11600],[4382,11568],[4383,11568],[4384,11568],[4385,11520],[4386,11547],[4387,11569],[4394,11376],[4395,11376],[4396,11423],[4397,11630],[4398,11519],[4402,11376],[4410,11683],[4411,11602],[4413,11357],[4417,11586],[4418,11684],[4420,11603],[4421,11357],[4428,11685],[4429,11357],[4431,11518],[4438,11578],[4442,11501],[4448,11586],[4449,11686],[4450,11604],[4451,11357],[4452,11592],[4453,11495],[4463,11523],[4466,11523],[4467,11601],[4468,11638],[4477,11693],[4478,11693],[4479,11357],[4480,11411],[4484,11411],[4485,11534],[4486,11638],[4487,11591],[4488,11694],[4490,11455],[4491,11455],[4501,11357],[4509,11357],[4510,11357],[4515,11357],[4516,11357],[4524,11626],[4525,11626],[4526,11626],[4530,11530],[4531,11528],[4535,11397],[4537,11528],[4539,11472],[4540,11494],[4542,11494],[4544,11366],[4545,11366],[4546,11366],[4547,11366],[4548,11366],[4549,11366],[4554,11577],[4564,11687],[4565,11693],[4571,11642],[4572,11687],[4573,11366],[4574,11415],[4575,11687],[4578,11555],[4580,11489],[4581,11497],[4582,11642],[4583,11688],[4584,11687],[4586,11517],[4589,11357],[4590,11357],[4595,11357],[4596,11357],[4601,11357],[4602,11357],[4607,11357],[4608,11357],[4613,11357],[4614,11357],[4617,11573],[4619,11505],[4620,11496],[4621,11612],[4622,11479],[4623,11490],[4624,11462],[4626,11548],[4627,11570],[4628,11570],[4629,11535],[4630,11535],[4631,11535],[4632,11548],[4633,11548],[4636,11455],[4640,11455],[4654,11517],[4655,11496],[4656,11517],[4657,11516],[4658,11587],[4660,11517],[4661,11517],[4664,11572],[4665,11598],[4667,11572],[4668,11572],[4669,11572],[4673,11566],[4675,11695],[4677,11695],[4678,11695],[4684,11560],[4685,11594],[4686,11496],[4687,11496],[4688,11562],[4695,11517],[4700,11365],[4707,11430],[4708,11426],[4709,11428],[4710,11357],[4712,11696],[4713,11533],[4714,11612],[4715,11637],[4716,11427],[4717,11430],[4718,11357],[4719,11588],[4721,11588],[4723,11400],[4726,11400],[4775,11588],[4780,11629],[4781,11629],[4793,11587],[4795,11429],[4797,11462],[4798,11593],[4810,11588],[4818,11568],[4819,11415],[4820,11415],[4821,11365],[4822,11380],[4823,11357],[4826,11357],[4828,11357],[4833,11523],[4834,11524],[4842,11546],[4843,11397],[4845,11697],[4848,11574],[4849,11577],[4850,11574],[4851,11549],[4853,11577],[4854,11551],[4857,11688],[4858,11688],[4859,11687],[4860,11688],[4861,11688],[4863,11357],[4864,11359],[4865,11357],[4866,11357],[4867,11404],[4868,11357],[4869,11367],[4870,11359],[4871,11648],[4872,11495],[4873,11653],[4875,11655],[4877,11583],[4879,11436],[4882,11641],[4883,11412],[4885,11569],[4894,11576],[4895,11576],[4896,11455],[4898,11528],[4906,11471],[4916,11587],[4919,11495],[4920,11564],[4921,11413],[4922,11592],[4923,11698],[4924,11592],[4928,11558],[4929,11699],[4937,11405],[4940,11527],[4941,11561],[4942,11563],[4943,11489],[4946,11489],[4947,11489],[4948,11461],[4953,11615],[4954,11615],[4955,11569],[4956,11361],[4958,11528],[4959,11631],[4960,11610],[4961,11647],[4962,11576],[4963,11542],[4964,11403],[4965,11528],[4978,11456],[4979,11366],[4987,11378],[4988,11378],[4989,11528],[4993,11643],[4995,11566],[4997,11458],[4998,11589],[5006,11481],[5008,11357],[5009,11432],[5011,11584],[5012,11538],[5013,11545],[5015,11357],[5022,11587],[5026,11498],[5027,11672],[5030,11585],[5031,11614],[5033,11357],[5042,11518],[5044,11582],[5045,11559],[5047,11579],[5055,11689],[5056,11632],[5058,11357],[5059,11401],[5060,11376],[5064,11652],[5078,11357],[5085,11357],[5086,11357],[5091,11357],[5092,11357],[5097,11357],[5098,11357],[5103,11357],[5104,11357],[5105,11700],[5106,11616],[5110,11590],[5112,11423],[5115,11376],[5116,11500],[5119,11554],[5128,11650],[5129,11656],[5133,11579],[5135,11567],[5138,11587],[5139,11587],[5149,11577],[5242,11701],[5246,11701],[5255,11702],[5265,11494],[5267,11703],[5270,11704],[5281,11704],[5292,11705],[5298,11706],[5301,11707],[5314,11708],[5319,11708],[5322,11455],[5332,11709],[5357,11710],[5361,11711],[5365,11712],[5373,11706],[5375,11579],[5634,11713],[5642,11472],[5647,11711],[5658,11706],[5673,11714],[5676,11715],[5678,11715],[5680,11715],[6001,11716],[6009,11704],[6013,11717],[6014,11703],[6016,11718],[6028,11703],[6040,11718],[6042,11719],[6045,11718],[6046,11718],[6047,11719],[6048,11719],[6058,11696],[6059,11720],[6065,11721],[6066,11376],[6072,11722],[6074,11704],[6075,11722],[6077,11722],[6079,11722],[6081,11704],[6082,11722],[6089,11671],[6091,11707],[6092,11709],[6093,11586],[6095,11707],[6096,11707],[6097,11681],[6098,11681],[6099,11681],[6165,11696],[6166,11516],[6425,11623],[6427,11671],[6429,11723],[6573,11724],[6574,11706],[6580,11703],[6581,11703],[6583,11586],[6591,11501],[6592,11501],[6593,11489],[6853,11697],[6854,11697],[6855,11697],[6861,11494],[6882,11455],[6920,11706],[6924,11696],[6928,11455],[6933,11725],[7035,11494],[7039,11704],[7043,11719],[7267,11455],[7277,11706],[7279,11455],[7308,11697],[7324,11693],[7326,11693],[7337,11566],[7338,11566],[7418,11726],[7429,11727],[7430,11727],[7432,11728],[7443,11703],[7449,11642],[7450,11654],[7585,11707],[7586,11707],[7588,11729],[7589,11573],[7591,11729],[7592,11730],[7743,11575],[7745,11697],[7746,11731],[7755,11732],[7760,11733],[7763,11734],[7771,11711],[7774,11711],[7780,11720],[7816,11706],[7831,11706],[7843,11588],[7890,11472],[7891,11472],[7896,11705],[7907,11706],[7910,11706],[7918,11735],[7919,11693],[7920,11711],[7930,11711],[7936,11711],[7949,11376],[7960,11711],[7981,11709],[8019,11709],[8030,11736],[8031,11737],[8079,11738],[8100,11711],[8105,11706],[8106,11696],[8138,11693],[8159,11359],[8160,11359],[8161,11359],[8162,11359],[8167,11630],[8176,11711],[8207,11704],[8219,11739],[8220,11740],[8222,11741],[8229,11741],[8230,11741],[8232,11727],[8235,11697],[8325,11713],[8328,11455],[8341,11714],[8380,11696],[8396,11455],[8413,11643],[8415,11643],[8433,11726],[8444,11709],[8445,11742],[8447,11742],[8449,11742],[8451,11742],[8453,11742],[8467,11711],[8491,11579],[8495,11707],[9068,11706],[9092,11696],[9253,11579],[9467,11743],[9475,11455],[9624,11510],[9625,11511],[9626,11511],[9627,11511],[9628,11511],[9629,11511],[9630,11511],[9631,11511],[9632,11511],[9633,11511],[9637,11457],[9641,11457],[9642,11457],[9643,11457],[9644,11457],[9645,11457],[9646,11457],[9647,11457],[9648,11457],[9649,11457],[9650,11457],[9651,11457],[9652,11457],[9653,11457],[9654,11457],[9655,11457],[9656,11457],[9657,11457],[9658,11457],[9659,11457],[9660,11457],[9661,11457],[9662,11457],[9663,11457],[9664,11457],[9665,11457],[9666,11457],[9667,11457],[9668,11457],[9669,11457],[9670,11457],[9671,11457],[9672,11658],[9673,11659],[9691,11553],[9708,11660],[9710,11660],[9713,11660],[9727,11660],[9759,11660],[9784,11557],[9785,11602],[9786,11603],[9787,11604],[9788,11564],[9789,11647],[9790,11538],[9791,11632],[9844,11744],[9852,11538],[9858,11661],[9859,11538],[9883,11538],[9892,11662],[9894,11662],[9895,11662],[9906,11662],[9925,11595],[9926,11595],[9962,11745],[9975,11595],[9976,11595],[9983,11397],[9987,11357],[9988,11469],[9989,11469],[9990,11469],[9991,11450],[9993,11376],[9997,11357],[9999,11357],[10000,11357],[10002,11357],[10007,11357],[10008,11357],[10009,11467],[10012,11467],[10013,11468],[10014,11472],[10015,11471],[10016,11357],[10017,11376],[10018,11376],[10019,11376],[10020,11376],[10025,11683],[10026,11357],[10029,11684],[10030,11357],[10035,11685],[10036,11357],[10041,11686],[10042,11357],[10046,11357],[10047,11411],[10048,11411],[10051,11357],[10057,11357],[10058,11357],[10062,11357],[10063,11357],[10064,11397],[10066,11472],[10070,11687],[10071,11642],[10072,11687],[10073,11687],[10074,11688],[10075,11687],[10077,11357],[10078,11357],[10082,11357],[10083,11357],[10087,11357],[10088,11357],[10092,11357],[10093,11357],[10097,11357],[10098,11357],[10100,11479],[10111,11357],[10112,11357],[10114,11400],[10115,11400],[10127,11357],[10130,11357],[10132,11357],[10133,11397],[10137,11688],[10138,11688],[10139,11687],[10140,11688],[10141,11688],[10142,11357],[10143,11357],[10144,11357],[10145,11357],[10147,11471],[10150,11458],[10154,11357],[10156,11357],[10161,11357],[10166,11689],[10167,11357],[10168,11401],[10169,11376],[10172,11357],[10176,11357],[10177,11357],[10181,11357],[10182,11357],[10186,11357],[10187,11357],[10191,11357],[10192,11357],[10196,11376],[10209,11472],[10212,11400],[10217,11376],[10234,11472],[10235,11472],[10236,11376],[10254,11467],[10255,11467],[10256,11468],[10257,11472],[10258,11471],[10260,11472],[10264,11471],[10265,11472],[10267,11472],[10268,11472],[10269,11467],[10270,11467],[10271,11471],[10276,11471],[10277,11481],[10278,11481],[10279,11481],[10280,11481],[10281,11727],[10282,11727],[10283,11727],[10284,11626],[10285,11626],[10286,11626],[10290,11609],[10342,11512],[10345,11663],[10365,11675],[10366,11675],[10381,11580],[10384,11581],[10423,11530],[10466,11583],[10498,11584],[10506,11585],[10511,11582],[10536,11530],[10537,11530],[10538,11530],[10539,11530],[10581,11581],[10585,11583],[10591,11664],[10621,11665],[10647,11676],[10648,11676],[10649,11676],[10650,11573],[10653,11573],[10654,11730],[10655,11746],[10656,11747],[10657,11747],[10658,11747],[10659,11747],[10660,11747],[10661,11666],[10692,11654],[10703,11654],[10708,11654],[10709,11654],[10722,11461],[10723,11461],[10724,11461],[10725,11559],[10726,11559],[10747,11456],[10750,11456],[10751,11677],[10752,11677],[10753,11677],[10754,11677],[10757,11678],[10758,11679],[10759,11679],[10760,11679],[10761,11679],[10762,11679],[10763,11679],[10764,11679],[10765,11679],[10766,11456],[10767,11378],[10768,11378],[10779,11543],[10780,11643],[10781,11545],[10800,11726],[10808,11643],[10810,11643],[10813,11726],[10819,11742],[10821,11742],[10823,11742],[10825,11742],[10827,11742],[10833,11554],[10839,11748],[10840,11748],[10844,11403],[10845,11455],[10847,11490],[10848,11403],[10852,11361],[10853,11669],[10854,11669],[10855,11403],[10865,11361],[10871,11361],[11060,11361],[11182,11361],[11277,11375],[11278,11375],[11301,11365],[11302,11365],[11303,11365],[11305,11365],[11309,11365],[11322,11380],[11323,11380],[11330,11608]],"b":[[28,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[29,"impl-Add-for-ChunkedArray%3CT%3E"],[30,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[31,"impl-Add-for-ChunkedArray%3CStringType%3E"],[32,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[33,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[35,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[36,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CT%3E"],[38,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[39,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[41,"impl-AggList-for-ChunkedArray%3CListType%3E"],[42,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[44,"impl-AggList-for-ChunkedArray%3CT%3E"],[45,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[46,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[47,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[51,"impl-ChunkedArray%3CListType%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CFixedSizeListType%3E"],[58,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[61,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[62,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[63,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[65,"impl-ChunkedArray%3CFixedSizeListType%3E"],[66,"impl-ChunkedArray%3CListType%3E"],[68,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[73,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[78,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkedArray%3CT%3E"],[82,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CFixedSizeListType%3E"],[86,"impl-ChunkedArray%3CListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[88,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[89,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[90,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[91,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[94,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[96,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[97,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[98,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[100,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[101,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[102,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[108,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[109,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[130,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[132,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[133,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[150,"impl-ChunkedArray%3CStructType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[160,"impl-Container-for-ChunkedArray%3CT%3E"],[161,"impl-ChunkedArray%3CT%3E"],[180,"impl-Div-for-ChunkedArray%3CT%3E"],[181,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[182,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[183,"impl-Div-for-%26ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[193,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[195,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[199,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[202,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[205,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[211,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[215,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[216,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[217,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[219,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[220,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[221,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[224,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[225,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[226,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[227,"impl-Debug-for-ChunkedArray%3CT%3E"],[228,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[229,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[230,"impl-Debug-for-ChunkedArray%3CListType%3E"],[232,"impl-ChunkedArray%3CListType%3E"],[233,"impl-ChunkedArray%3CFixedSizeListType%3E"],[242,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[243,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[244,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[246,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[248,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[249,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[250,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[251,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[252,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[254,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[255,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[256,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[257,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[260,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[261,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[262,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[266,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[267,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[269,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[271,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[273,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[274,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[278,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[279,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[281,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[282,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[288,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[289,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[290,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[291,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[292,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[296,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[297,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[298,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[303,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[304,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[305,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[306,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[307,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[308,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[310,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[311,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[319,"impl-ChunkedArray%3CFixedSizeListType%3E"],[320,"impl-ChunkedArray%3CListType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[340,"impl-ChunkedArray%3CFixedSizeListType%3E"],[341,"impl-ChunkedArray%3CListType%3E"],[345,"impl-ChunkedArray%3CListType%3E"],[346,"impl-ChunkedArray%3CFixedSizeListType%3E"],[354,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[355,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[356,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[358,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[359,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[360,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[371,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[372,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[373,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[374,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[375,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[379,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[380,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[381,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[382,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[383,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[384,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[390,"impl-ChunkedArray%3CListType%3E"],[391,"impl-ChunkedArray%3CFixedSizeListType%3E"],[400,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[401,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[402,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[403,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[409,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[410,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ChunkedArray%3CT%3E"],[436,"impl-Container-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[443,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[444,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[446,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[450,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[452,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[453,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[455,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[456,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[457,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[459,"impl-ChunkedArray%3CBooleanType%3E"],[460,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[461,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[462,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[468,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[470,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[471,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[472,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[480,"impl-ChunkedArray%3CBooleanType%3E"],[481,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[483,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[484,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[485,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[486,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[487,"impl-ChunkedArray%3CBooleanType%3E"],[488,"impl-ChunkedArray%3CT%3E"],[489,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[490,"impl-Mul-for-ChunkedArray%3CT%3E"],[491,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[492,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[495,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[496,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[497,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[499,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[501,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[503,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[505,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[506,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[508,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[510,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[511,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[513,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[515,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[519,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[520,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[521,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[522,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[523,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[524,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[527,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[528,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[529,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[530,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[531,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[532,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[533,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[534,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[535,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[537,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[539,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[542,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[543,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[544,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[545,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[546,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[547,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[548,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[549,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[550,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[556,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[557,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[559,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[560,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[561,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[562,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[563,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[564,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[568,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[569,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[570,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[573,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[577,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[580,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[581,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[583,"impl-ChunkedArray%3CListType%3E"],[584,"impl-ChunkedArray%3CStringType%3E"],[585,"impl-ChunkedArray%3CStringType%3E"],[586,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[590,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[591,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[592,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[593,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[594,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[605,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[623,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[624,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[625,"impl-Rem-for-ChunkedArray%3CT%3E"],[626,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[629,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[630,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[631,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[632,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[633,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[641,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[642,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[643,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[646,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[647,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[648,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[650,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[651,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[652,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[653,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[654,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[655,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[661,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[662,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[663,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[664,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[665,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[666,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[667,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[668,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[669,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[670,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[671,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[672,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[673,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[674,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[675,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[676,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[678,"impl-Container-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkedArray%3CT%3E"],[680,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[681,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[683,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[684,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[685,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[686,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[687,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[688,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[689,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[690,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[691,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[692,"impl-ChunkedArray%3CT%3E"],[693,"impl-Container-for-ChunkedArray%3CT%3E"],[695,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[696,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[697,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[699,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[700,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[701,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[702,"impl-Sub-for-ChunkedArray%3CT%3E"],[704,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[705,"impl-ChunkedArray%3CBooleanType%3E"],[706,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[707,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[708,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[715,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[716,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[719,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[720,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[726,"impl-ChunkedArray%3CFixedSizeListType%3E"],[727,"impl-ChunkedArray%3CListType%3E"],[728,"impl-ChunkedArray%3CT%3E"],[729,"impl-ChunkedArray%3CListType%3E"],[734,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[735,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[736,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[737,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[738,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[739,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[741,"impl-ChunkedArray%3CListType%3E"],[742,"impl-ChunkedArray%3CFixedSizeListType%3E"],[756,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[757,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[758,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[759,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[760,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[766,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[767,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[768,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[770,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[773,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[776,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[777,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[778,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[780,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[781,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[785,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[786,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[787,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[788,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[789,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[792,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[793,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[794,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[796,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[799,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[800,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[812,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[1027,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1028,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1303,"impl-Flags-for-MetadataProperties"],[1304,"impl-MetadataProperties"],[1305,"impl-Flags-for-MetadataFlags"],[1306,"impl-MetadataFlags"],[1371,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1372,"impl-Metadata%3CT%3E"],[1397,"impl-Debug-for-MetadataProperties"],[1398,"impl-Binary-for-MetadataProperties"],[1399,"impl-Octal-for-MetadataProperties"],[1400,"impl-LowerHex-for-MetadataProperties"],[1401,"impl-UpperHex-for-MetadataProperties"],[1402,"impl-Octal-for-MetadataFlags"],[1403,"impl-Binary-for-MetadataFlags"],[1404,"impl-LowerHex-for-MetadataFlags"],[1405,"impl-UpperHex-for-MetadataFlags"],[1406,"impl-Debug-for-MetadataFlags"],[1416,"impl-MetadataProperties"],[1417,"impl-Flags-for-MetadataProperties"],[1418,"impl-MetadataFlags"],[1419,"impl-Flags-for-MetadataFlags"],[1432,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1433,"impl-Metadata%3CT%3E"],[1476,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1477,"impl-Metadata%3CT%3E"],[1481,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1482,"impl-Metadata%3CT%3E"],[1559,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1560,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1594,"impl-ObjectArray%3CT%3E"],[1595,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1610,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1611,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1621,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1622,"impl-ObjectArray%3CT%3E"],[1624,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1625,"impl-ObjectArray%3CT%3E"],[1627,"impl-ObjectArray%3CT%3E"],[1628,"impl-Array-for-ObjectArray%3CT%3E"],[1631,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1632,"impl-ObjectChunkedBuilder%3CT%3E"],[1634,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1635,"impl-ObjectChunkedBuilder%3CT%3E"],[2383,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2384,"impl-Logical%3CDurationType,+Int64Type%3E"],[2386,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2387,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2388,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2389,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2390,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2692,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2693,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2694,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2695,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2696,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2703,"impl-PartialEq-for-DataType"],[2704,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2711,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2713,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2749,"impl-Debug-for-AnyValue%3C\'a%3E"],[2750,"impl-Display-for-AnyValue%3C\'_%3E"],[2752,"impl-Display-for-DataType"],[2753,"impl-Debug-for-DataType"],[2756,"impl-Display-for-TimeUnit"],[2757,"impl-Debug-for-TimeUnit"],[2762,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2764,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2777,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2778,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2780,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2781,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2782,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2785,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2786,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2787,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2789,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2790,"impl-From%3C%26ArrowField%3E-for-Field"],[2814,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2815,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2838,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2839,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2840,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2841,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2842,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2845,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2846,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2847,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2848,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2849,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2885,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2886,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2887,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2888,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2889,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2890,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2992,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2993,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2994,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2995,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2996,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3041,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3042,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3043,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3044,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3081,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3082,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3083,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3084,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3085,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3086,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3087,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3088,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3094,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3098,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3099,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3102,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3103,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3122,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3123,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3129,"impl-Logical%3CDurationType,+Int64Type%3E"],[3130,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3136,"impl-Logical%3CDateType,+Int32Type%3E"],[3137,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3138,"impl-Logical%3CTimeType,+Int64Type%3E"],[3153,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3154,"impl-Logical%3CDurationType,+Int64Type%3E"],[3202,"impl-Logical%3CDateType,+Int32Type%3E"],[3203,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3204,"impl-Logical%3CTimeType,+Int64Type%3E"],[3209,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3210,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3496,"impl-Display-for-ErrString"],[3497,"impl-Debug-for-ErrString"],[3498,"impl-Display-for-PolarsError"],[3499,"impl-Debug-for-PolarsError"],[3503,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3504,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3505,"impl-From%3CError%3E-for-PolarsError"],[3506,"impl-From%3CError%3E-for-PolarsError"],[3507,"impl-From%3CError%3E-for-PolarsError"],[3509,"impl-From%3CParquetError%3E-for-PolarsError"],[3639,"impl-Display-for-DataFrame"],[3640,"impl-Debug-for-DataFrame"],[3672,"impl-Index%3Cusize%3E-for-DataFrame"],[3673,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3674,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3675,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3676,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3677,"impl-Index%3C%26str%3E-for-DataFrame"],[3678,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3679,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3698,"impl-DataFrame"],[3699,"impl-Container-for-DataFrame"],[3706,"impl-Container-for-DataFrame"],[3707,"impl-DataFrame"],[3745,"impl-DataFrame"],[3746,"impl-Container-for-DataFrame"],[3750,"impl-Container-for-DataFrame"],[3751,"impl-DataFrame"],[3773,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3774,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3955,"impl-Debug-for-GroupByMethod"],[3956,"impl-Display-for-GroupByMethod"],[3962,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3964,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3965,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3999,"impl-IntoIterator-for-%26GroupsIdx"],[4000,"impl-IntoIterator-for-GroupsIdx"],[4002,"impl-IntoParallelIterator-for-GroupsIdx"],[4003,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5325,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5326,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5330,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5331,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5359,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5360,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5382,"impl-Flags-for-OptState"],[5383,"impl-OptState"],[6142,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6143,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[6144,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6152,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6153,"impl-Default-for-Arc%3Cstr%3E"],[6154,"impl-Default-for-Arc%3CT%3E"],[6155,"impl-Default-for-Arc%3CCStr%3E"],[6634,"impl-PartialEq-for-Expr"],[6635,"impl-Expr"],[6638,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6639,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6654,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6655,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6656,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6663,"impl-PartialEq-for-StructArray"],[6664,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6942,"impl-Display-for-Duration"],[6943,"impl-Debug-for-Duration"],[6961,"impl-Display-for-JoinType"],[6962,"impl-Debug-for-JoinType"],[6964,"impl-Display-for-JoinValidation"],[6965,"impl-Debug-for-JoinValidation"],[6982,"impl-Display-for-Expr"],[6983,"impl-Debug-for-Expr"],[6985,"impl-Display-for-Operator"],[6986,"impl-Debug-for-Operator"],[6988,"impl-Display-for-BooleanFunction"],[6989,"impl-Debug-for-BooleanFunction"],[6990,"impl-Debug-for-CategoricalFunction"],[6991,"impl-Display-for-CategoricalFunction"],[6992,"impl-Debug-for-TemporalFunction"],[6993,"impl-Display-for-TemporalFunction"],[6994,"impl-Display-for-PowFunction"],[6995,"impl-Debug-for-PowFunction"],[6996,"impl-Display-for-StringFunction"],[6997,"impl-Debug-for-StringFunction"],[6998,"impl-Display-for-StructFunction"],[6999,"impl-Debug-for-StructFunction"],[7000,"impl-Display-for-FunctionExpr"],[7001,"impl-Debug-for-FunctionExpr"],[7011,"impl-LowerHex-for-OptState"],[7012,"impl-Octal-for-OptState"],[7013,"impl-Binary-for-OptState"],[7014,"impl-UpperHex-for-OptState"],[7015,"impl-Debug-for-OptState"],[7017,"impl-Display-for-Arc%3CT,+A%3E"],[7018,"impl-Debug-for-Arc%3CT,+A%3E"],[7019,"impl-Pointer-for-Arc%3CT,+A%3E"],[7054,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7055,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7132,"impl-From%3Cf64%3E-for-Expr"],[7133,"impl-From%3Cu16%3E-for-Expr"],[7134,"impl-From%3Ci32%3E-for-Expr"],[7135,"impl-From%3Ci16%3E-for-Expr"],[7136,"impl-From%3Cu32%3E-for-Expr"],[7137,"impl-From%3Cu64%3E-for-Expr"],[7138,"impl-From%3Cf32%3E-for-Expr"],[7139,"impl-From%3Ci64%3E-for-Expr"],[7140,"impl-From%3C%26str%3E-for-Expr"],[7141,"impl-From%3Cbool%3E-for-Expr"],[7143,"impl-From%3Ci8%3E-for-Expr"],[7144,"impl-From%3Cu8%3E-for-Expr"],[7145,"impl-From%3CAggExpr%3E-for-Expr"],[7148,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7149,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7150,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7152,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7153,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7154,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7155,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7156,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7157,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7158,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[7166,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7167,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7168,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7169,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7182,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7183,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7184,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7185,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7186,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7187,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7188,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7189,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7192,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7193,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7194,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7195,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7196,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7197,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7198,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7209,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7210,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7212,"impl-From%3CArrowSchema%3E-for-Schema"],[7214,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[7215,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[7216,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[7217,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[7218,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[7227,"impl-Flags-for-OptState"],[7228,"impl-OptState"],[7237,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7238,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7247,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7248,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7261,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7262,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8385,"impl-StructArray"],[8386,"impl-Array-for-StructArray"],[8392,"impl-Array-for-StructArray"],[8393,"impl-StructArray"],[8653,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8654,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8658,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[8659,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9095,"impl-StructArray"],[9096,"impl-Array-for-StructArray"],[9348,"impl-LazyCsvReader"],[9349,"impl-LazyFileListReader-for-LazyCsvReader"],[9350,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9351,"impl-LazyJsonLineReader"],[9396,"impl-LazyFileListReader-for-LazyCsvReader"],[9397,"impl-LazyCsvReader"],[9398,"impl-LazyJsonLineReader"],[9399,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9439,"impl-StructArray"],[9440,"impl-Array-for-StructArray"],[9912,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9913,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9918,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9919,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10605,"impl-Display-for-RollingFunction"],[10606,"impl-Debug-for-RollingFunction"],[10635,"impl-Display-for-RollingFunctionBy"],[10636,"impl-Debug-for-RollingFunctionBy"],[10861,"impl-Add-for-Series"],[10862,"impl-Add%3CT%3E-for-Series"],[10863,"impl-Add-for-%26Series"],[10864,"impl-Add%3CT%3E-for-%26Series"],[10880,"impl-AsSeries-for-Series"],[10881,"impl-SeriesSealed-for-Series"],[10934,"impl-Div%3CT%3E-for-Series"],[10935,"impl-Div-for-Series"],[10936,"impl-Div-for-%26Series"],[10937,"impl-Div%3CT%3E-for-%26Series"],[10948,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10949,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10950,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10952,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10953,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10954,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10970,"impl-Debug-for-Series"],[10971,"impl-Display-for-Series"],[10976,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10977,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10978,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10979,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10980,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10988,"impl-FromIterator%3Cf64%3E-for-Series"],[10989,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10990,"impl-FromIterator%3Cu8%3E-for-Series"],[10991,"impl-FromIterator%3CString%3E-for-Series"],[10992,"impl-FromIterator%3C%26i16%3E-for-Series"],[10993,"impl-FromIterator%3C%26f32%3E-for-Series"],[10994,"impl-FromIterator%3Cbool%3E-for-Series"],[10995,"impl-FromIterator%3C%26i64%3E-for-Series"],[10996,"impl-FromIterator%3C%26u32%3E-for-Series"],[10997,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10998,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10999,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11000,"impl-FromIterator%3C%26bool%3E-for-Series"],[11001,"impl-FromIterator%3Ci8%3E-for-Series"],[11002,"impl-FromIterator%3Cu16%3E-for-Series"],[11003,"impl-FromIterator%3C%26u8%3E-for-Series"],[11004,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11005,"impl-FromIterator%3C%26f64%3E-for-Series"],[11006,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11007,"impl-FromIterator%3Cu64%3E-for-Series"],[11008,"impl-FromIterator%3Cu32%3E-for-Series"],[11009,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11010,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11011,"impl-FromIterator%3C%26i8%3E-for-Series"],[11012,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11013,"impl-FromIterator%3C%26i32%3E-for-Series"],[11014,"impl-FromIterator%3Ci16%3E-for-Series"],[11015,"impl-FromIterator%3C%26str%3E-for-Series"],[11016,"impl-FromIterator%3Ci32%3E-for-Series"],[11017,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11018,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11019,"impl-FromIterator%3C%26u64%3E-for-Series"],[11020,"impl-FromIterator%3Cf32%3E-for-Series"],[11021,"impl-FromIterator%3Ci64%3E-for-Series"],[11022,"impl-FromIterator%3C%26u16%3E-for-Series"],[11023,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11024,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11025,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11026,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11027,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11028,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11029,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11030,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11031,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11032,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11033,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11045,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11046,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11047,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11049,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11050,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11051,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11092,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11093,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11094,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11096,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11097,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11098,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11107,"impl-Mul%3CT%3E-for-%26Series"],[11108,"impl-Mul%3CT%3E-for-Series"],[11109,"impl-Mul-for-%26Series"],[11110,"impl-Mul-for-Series"],[11115,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11116,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11117,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11118,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11119,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11120,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11121,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11122,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11123,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11124,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11125,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11126,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11127,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11128,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11129,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11130,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11131,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11132,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11133,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11134,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11135,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11136,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11137,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11138,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11139,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11140,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11141,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11142,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11143,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11144,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11145,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11146,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11147,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11148,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11149,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11150,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11151,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11152,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11153,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11154,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11155,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11156,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11157,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11158,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11159,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11160,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11161,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11162,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11163,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11164,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11165,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11166,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11167,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11173,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11174,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11175,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11177,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11178,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11179,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11187,"impl-Rem%3CT%3E-for-Series"],[11188,"impl-Rem%3CT%3E-for-%26Series"],[11189,"impl-Rem-for-%26Series"],[11218,"impl-Sub-for-Series"],[11219,"impl-Sub%3CT%3E-for-Series"],[11220,"impl-Sub%3CT%3E-for-%26Series"],[11221,"impl-Sub-for-%26Series"],[11245,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11246,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11247,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11248,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAACMPbw+sD68PsA+xD7IPsw+4D7sPwA/BD+YP","e":"OzAAAAEAAJIgSwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB0AOwAFAEUAAgBJAAoAWAAHAGEACgBtAAAAcAAEAHYAFgCOAAAAkAARAKUAAwCqAAEAsAANAL8AFQDXAAcA4AAKAOwAAADuAAEA8gAdABYBFQAuARMAQwEDAEgBEQBcAQEAYAEBAGMBHgCEAQIAjAEQAJ4BAwClAQIAqgEBAK0BBgC1AQAAugEhAOEBBgDqAQgA9AE1AC0CFQBEAgIASAIEAE4CBQBYAgAAWgIaAHYCBwCCAhEAlgIPAKcCAACpAgsAtgIPAMkCAQDPAgAA0QIBANQCAQDbAgAA3wIHAOkCAgDtAg0A/AIAAP4CKAApAwIALQMjAFQDNACLAwgAmAMRAK0DXAAXBBIANQQHAD4ESQCLBA8AnAQBAJ8EGQC6BAAAvQQOAM8EAgDVBAIA2gQcAPgECQADBQoAGAUAABoFAAAgBSAARQUSAFoFAABcBQkAaAUDAG4FAQByBQ0AigUAAIwFAACPBQEAlQUHAJ4FBwCzBQEAtwUAALoFAwDCBQUAyQUEANUFCwDoBQQA7wUNAP8FBgAJBgcAEgYBABYGFgAuBgcANwYAADoGAAA8BgIAQgYQAFQGAABWBgAAWQYCAF0GAwBiBgEAZQYHAG4GAABwBgUAeAYBAHsGAAB9BgEAgAYDAIUGAwCKBgIAjgYDAJQGAACXBgAAnwYAAKQGAACnBgEArAYBAK8GAACyBgAAugYAAMAGAgDLBgYA1QYSAOoGBQDyBggA/QYDAAIHAAAEBwAABgcAAAgHAQAOBwUAFwcBACAHAQAsBwAALgcBADEHAAA0BwAANgcAADoHAAA8BwAAQQcMAFAHAgBfBwAAYQcHAGoHAgBwBwAAcgcDAHcHAQB6BwUAhgcXAJ8HAQCjBwQAqQcDALAHBwDFBwMAygcIANQHBADbBwIA3wcFAOcHAADpBw0A+wcBAP8HAQAFCAEACAgBAAsIAwAQCAAAEggAABUIAQAZCAAAGwgBAB4IAAAgCAIAJAgMADIIAAA0CAEANwgAADkIAQA8CAAAPggBAEEIAABDCAEARggDAE0IAABRCAEAVQgAAFgIAABaCAAAXAgDAGEIAABkCAgAbggBAHEIBAB4CAEAfAgAAH4IAgCCCAEAiAgDAI0IAQCQCAAAkggBAJUIAACXCAEAmggAAJwIAQCfCAAAoQgBAKQIAACmCAAAqQgkAM8IFwDoCGYAUgmOAOIJBwDsCZcAhQoFAIwKKgC4ChAAywoAAM0KAADaCgEA3QoCAOIKAgDmCgEA6goAAP8KAQADCwAACwsAAA4LAAAQCwUAFwsEAB0LBQAkCwAAJgsaAEYLDQBWCysAgwsAAK8LBwC5CwAAuwsBAL4LAwDDCwEAyAsAAMoLBQDRCwAA1AsCANkLAwDeCwAA4QsNAPELAAD0Cw4ABAwAAAcMCwAUDAwAIgwBACUMAAAnDA0ANgwAAD4MAABADAAARQwQAFgMAABaDAIAXwwgAIIMAACGDGQA7AwtABsNAQAeDTUAVQ0BAFgNCABiDQAAZA0BAGcNBABtDQEAcg0AAHQNAgB4DQAAew0EAIENBACHDRIAmw0RAK8NBQC2DQQAvg0EAMQNFQDdDQAA4A0KAOwNAgD0DRYADQ4PAB4OAAAnDgEAKw4CAC8OAAAxDgAANg4DAD8OAABODgAAUA4AAFIOAQBZDgwAbA4CAHQOAAB3DgAAew4AAIAOAQCNDgEAkQ4AAJcOAACgDgEAow4BAKcOAACpDgEAsA4AALIOAwC5DgYAwg4JAM0OAADSDgEA1g4EAOIODgDyDgIA9g4AAPgOCQADDwEABg8DAAsPAwAQDwkAGw8HACQPAQAnDx0ARg8oAHAPBgB7DwAAfQ8CAIMPBACKDwAAjg8HAJ4PDQCtDwEAtA8DALkPAQC9DwIAwg8AAMQPHwDnDwwA9g8FAP0PBwAGECMALBAOADwQDgBMEAAAThAAAFAQAwBXEAYAYRAOAHIQBQB6EAAAfRAIAIcQAQCLEAQAkRAFAJgQAACdEAkAqBABAKwQBACyEAEAtRAKAMEQAADEEAAAxhAJANEQAADUEAkA3xAEAOgQAADrEAAA8xACAPoQAAD9EAEAAxEKAA8REgAlEQcALhEBADERBQA7EQQAQxEEAE0RAwBSEQAAVBELAGIRBABoEQUAcBEBAHQRAAB3EQAAeRECAH4RAgCCEQUAiREEAI8RAwCWEQIAnBEAAJ4RAQCiEQAApBEEAKsRDwC8EQAAvxEBAMIRAwDIEQIAzhEWAOYRCQDyEQAA9BEBAPgRAAD6EQEA/hEAAAASAQAEEgAABhIEAA0SAgAREgEAFRIAABgSAAAaEgIAHhICACISCgAvEgcAOBIAADoSAAA+EgEAQhIAAEQSAABGEgEASRIBAEwSAQBREgAAUxINAGQSBQBrEgcAdRICAHkSBgCEEgEAhxIAAIkSAQCMEgQAkhIDAJcSAgCbEgAAnRIEAKMSAAClEgYArRIEALMSAQC2EgEAuRIBALwSAQC/EgAAwRIAAMMSAADHEgIAzBIDANESBwDbEgIA4hIAAOQSBQDrEgMA8RIAAPMSAAD2EgAA+BIDAP0SAgABEwIABRMAAAcTDgAYExUALxMTAEYTAQBJEwYAURMFAFoTAQBeEwAAYBMFAGcTBABtEwAAbxMCAHQTAAB2EwAAehMBAH8TBwCIEwMAkBMGAJgTCQCkEwMAqRMHALITAAC0EwIAuRMCAMATBQDHExIA3BMAAN4TAQDiEwAA5BMBAOgTAADqEwEA7hMAAPATBAD3EwMA/BMAAP4TAQAEFAkADxQAABIUBgAbFAIAHxRdAH4UAgCFFAAAhxQAAIoUBQCSFAAAmhQAAJ4UAACgFAAApBQFAK4UAACyFAAAuRQAAL0UAADJFAIAzRQIANcUAADZFAEA3BQCAOMUAQDmFAQA7BQBAPQUCgACFQAABRUAAAcVAAAKFQAADBX1AAMWAQAGFgEACRYAAAsWAgARFgAAFRYAABkWAAAbFgAAHRYAACMWAAAmFgEAKRYAADMWSwCAFg4AkBbeAHAXAQB2FwIAfBcCAIIXCgCQFwQAmxcAAJ0XAACoFwEArBcAAK4XAACzFwAAuBcBAMcXAADNFwAA0hcCANgXAADaFwUA4hcmAA0YAwETGQAAGBkBABsZAwAiGQAAJBkDACwZCQA3GV4AlxkRAK4ZAQCzGQEAtxkAALoZAwC/GSwA7RkSAAEaDQASGq0AxBoAAMsaAADNGgEA0BoAANIaAADWGgAA2hoAANwaAADjGgAA5hoAAO4aAADxGgIA+BoGAAAbAQADGwAABRsDAA0bAAAPGwAAERsBABYbZwB/GwAAghsAAI8bAQCzGwAAuxsAAL8bAADdGwkA6BsCAO0bAgDxGwYA/xsDAAgcAAAXHAAAIBwAACocAQAtHAAALxwEADUcAAA8HAAAPxwAAEIcBQBKHAAAUBwBAFUcAgBbHAUAYhwCAGYcAQBqHAIAbhwAAHAcAAByHAAAdxwAAIAcAACDHAEAhhwCAIscAACOHAEAkxwBAJYcAQCaHAQAoxwBAKccAACyHAAAtBw/APccAwD/HAAAAR0AAAMdAwAJHQAACx0AAA0dAQAQHQAAEx0AABgdAgAdHX4Anh0AAKQdAgCoHQEAKB4AACoeBwA1HgMAOh4CAD4eAwBEHgAARh4AAEgeAgBMHgEATx4AAFEeAABUHgEAYR4AAGMeAABmHgEAaR4DAG8eAgCAHgEAgx4BAIweAACOHgEAkR4AAJUeAgCbHgEAnh4AAKEeAACmHgIAqx4BAK8eAgCzHgMAuR4OAM0eAADTHgEA2h4AAN0eBQDmHgAA7h4CAPoeAAAEHwAACh8BAA4fAAASHwEAFR8AABgfAAAdHwAAHx8AACEfAAAmHwAAKh8AACwfAgAzHwYAQB8IAE4fAABQHwAAVB8AAFofAABcHwQAZR8BAGgfAQBrHwAAbh8IAHkfAQB8HwAAfx8BAIYfAACQHwAAkx8BAJ4fBgCrHwIAsx8BALofAgC+HwEAyB8AAMofBADQHwUA1x8DAOAfAwDlHwAA5x8CAO0fAADvHwAA+x8AAP4fAQABIAEABCADAAogBQARIAQAHSAAACMgAAApIAAAKyAAADAgAAA0IAAANiAAADggAQBbIAAAYCAAAGggAwBtIAUAdSAAAH4gAACCIAIAhiADAI0gAACPIAEAkiABAJUgAQCZIAAAniADAKUgAACwIAAAsiAAALQgAAC5IAQAwyABAMYgAADIIAEAzSAAAM8gAADVIAMA2iAHAOMgAADlIAAA6SAAAO8gAADyIAAA+CAAAP0gCgAKIQEADiEAABEhAgAcIQAALCEAAC4hAAAxIQIANSEDADshAQA+IQAAQSEAAEUhXQClIQwAsyEAALchAQC8IQoAyCEAAMohAQDNIY0AXSIAAGEiegDfIgAA4SIDAOwiAADvIgEA8iJ5AG0jAAB7IwAAfSMAAIMjBACJIwIAjiMAAJEjAACVIwAAmyMAAJ0jAACfI3oAISQDACokAAAtJAEAMiQBADckAQA6JAAAQiQAAEYkAQBMJAAAUiQAAFwkAABjJAEAbiQDAHUkAQCGJAEAiyQAAI4kAACRJAAAlyQBAJokAwCiJAAAryQAALUkAAC4JAAAuyQAAMMkAADIJAAA1yQAANkkAQDhJAIA5yQUAP0kAQADJQEABiVIAFElAABTJQAAVSUBAFglAQBbJQYAYyU3AJ0lBQCkJQkAryUCALUlAAC3JQMAvCUBAL8lBQDJJRIA3SUBAOAlAgDlJQAA6CUWAAAmFwAcJgQAJSYTADomBgBRJgAAXyYCAHUmAAB9JggAiiYAAIwmDQCbJgIAnyYSALMmAQC2Jg8AxyYZAOMmAADlJgIA6iYKAPYmAQD5JggAAycEAAonAgAOJwUAFicAABgnDQAqJwEALicBADQnAQA3JwEAOicDAD8nAABBJwAARCcBAEgnAABKJwEATScAAE8nAgBTJwwAYScAAGMnAQBmJwAAaCcBAGsnAABtJwEAcCcAAHInAQB1JwMAfCcAAIAnAQCEJwAAhycAAIknAACLJwMAkCcAAJMnCACdJwEAoCcEAKcnAQCrJwAArScCALEnAQC3JwMAvCcBAL8nAADBJwEAxCcAAMYnAQDJJwAAyycBAM4nAADQJwEA0ycAANUnAADYJxIA7CcGAPUnAAD4JxEACygIABUoAQAYKAgAIigAACQoAQAqKAAALCgEADUoAQA+KAIARCgAAEYoAABQKAAAXygDAGcoCgBzKAAAdSgIAIAo7wBxKQEAdCkZAI8pAQCSKQ8ApCkSALgpAAC6KRcA0ykBANcpAADZKQsA5ikCAO0pAAAAKgMAByoHABwqBQAkKgAALSoAAC8qAQA2KgYAPioAAEQqCgBYKgUAXyoAAGEqAwBmKgUAbioEAHQqAQB4KgAAfioEAIcqAgCLKgkAmCoCAJwqAACgKgIApCoEAK0qEQDCKgEAxSoAAMcqAADJKgAAyyoAAM4qAgDaKgMA4SoEAOkqAQDsKi8AHysAACErAAAnKwEAKysBAC4rAAA0KwEANysDAD8rAwBKKwIATisAAFArAABTKwAAVisBAForAQBfKwAAZCsDAGkrAABsKy8AnSsDAKMrAQCmKwAAqCsAAKsrAQCvKwEAtCsCALkrAQC8KwAAvysCAMUrAQDIKwAAyisAAMwrAADQKwAA0ysDANwrAADkKwAA5isBAOkrDgD5KwQABCwAAAcsAwAMLAAADywLABwsAAAeLAAAICwEACYsFgA/LAEAQywQAFUsAQBYLAQA"}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNOONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPPKKPEPGPPPIFEKPPPGEEIEKGPPGFFFPPEPPEEPKPFPEPEEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNCNNNNNNNHRTKFKINNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNMNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGEPPKGGPPPFFIKPNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFFNNHHHHHHHNHHEHNNNNNNNNMNNNNNNNHHNNHHNNNNNNNNNNNNNNNNNHHNNNNNNNNCNNNNNNNNNMNNNNNHHHHNNONNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNNNHNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_nulls","head","init","init","init_rand","inner_dtype","interior_mut_metadata","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_cheap_metadata","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_mut","get_sorted_flag","init","init","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","new","not","not","read","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_read","try_write","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","upcast","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","oldest","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","physical","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_scale","to_scale","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unpivot","unpivot2","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","UnpivotArgs","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","index","init","into","on","streamable","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgs","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_names_and_dtypes","get_unchecked","gt","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_project","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","from","init","into","into_series","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","IndexOfSchema","Schema","SchemaNamesAndDtypes","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","contains","default","deref","deref_mut","drop","ensure_matching_schema","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","get_names_and_dtypes","get_names_and_dtypes","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","BitRepr","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Large","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","compute_len","decimal","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","init","into","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flatten","fmt","fold_options","from","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","hash","implode_list","init","init","init","init","into","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","to_owned","trust_my_length","try_from","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[441,"polars_core::chunked_array::arithmetic"],[469,"polars_core::chunked_array::builder"],[577,"polars_core::chunked_array::builder::list"],[731,"polars_core::chunked_array::cast"],[761,"polars_core::chunked_array::collect"],[775,"polars_core::chunked_array::float"],[777,"polars_core::chunked_array::from_iterator_par"],[781,"polars_core::chunked_array::iterator"],[818,"polars_core::chunked_array::iterator::par"],[820,"polars_core::chunked_array::metadata"],[1110,"polars_core::chunked_array::object"],[1187,"polars_core::chunked_array::object::builder"],[1210,"polars_core::chunked_array::object::registry"],[1238,"polars_core::chunked_array::ops"],[1364,"polars_core::chunked_array::ops::arity"],[1399,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1401,"polars_core::chunked_array::ops::gather"],[1404,"polars_core::chunked_array::ops::search_sorted"],[1435,"polars_core::chunked_array::ops::sort"],[1442,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1443,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1451,"polars_core::chunked_array::ops::sort::options"],[1529,"polars_core::chunked_array::temporal"],[1530,"polars_core::chunked_array::temporal::conversion"],[1533,"polars_core::config"],[1537,"polars_core::datatypes"],[3005,"polars_core::datatypes::categorical"],[3146,"polars_core::datatypes::categorical::revmap"],[3201,"polars_core::datatypes::categorical::string_cache"],[3220,"polars_core::datatypes::revmap"],[3226,"polars_core::datatypes::string_cache"],[3230,"polars_core::error"],[3295,"polars_core::error::PolarsError"],[3299,"polars_core::error::constants"],[3302,"polars_core::export"],[3310,"polars_core::fmt"],[3342,"polars_core::frame"],[3615,"polars_core::frame::explode"],[3645,"polars_core::frame::group_by"],[3885,"polars_core::frame::group_by::GroupByMethod"],[3886,"polars_core::frame::group_by::GroupsProxy"],[3888,"polars_core::frame::group_by::aggregations"],[3901,"polars_core::frame::group_by::expr"],[3904,"polars_core::frame::row"],[4001,"polars_core::functions"],[4003,"polars_core::hashing"],[4051,"polars_core::prelude"],[4634,"polars_core::prelude::PolarsError"],[4638,"polars_core::prelude::default_arrays"],[4644,"polars_core::prelude::list"],[4667,"polars_core::prelude::null"],[4698,"polars_core::prelude::revmap"],[4704,"polars_core::prelude::slice"],[4707,"polars_core::prelude::string_cache"],[4711,"polars_core::prelude::utf8"],[4715,"polars_core::random"],[4716,"polars_core::scalar"],[4741,"polars_core::scalar::reduce"],[4742,"polars_core::schema"],[4823,"polars_core::series"],[5237,"polars_core::series::amortized_iter"],[5261,"polars_core::series::arithmetic"],[5286,"polars_core::series::arithmetic::checked"],[5294,"polars_core::series::ops"],[5322,"polars_core::utils"],[5468,"polars_core::utils::flatten"],[5473,"dyn_clone::sealed"],[5474,"num_traits"],[5475,"num_traits::cast"],[5476,"polars_error"],[5477,"polars_core::series::arithmetic::borrowed"],[5478,"polars_core::frame::group_by::proxy"],[5479,"core::option"],[5480,"core::iter::traits::iterator"],[5481,"core::ops::function"],[5482,"core::marker"],[5483,"polars_core::datatypes::dtype"],[5484,"alloc::string"],[5485,"polars_core::datatypes::aliases"],[5486,"polars_core::series::arithmetic::borrowed::checked"],[5487,"polars_arrow::array"],[5488,"alloc::vec"],[5489,"core::iter::traits::double_ended"],[5490,"core::fmt"],[5491,"core::iter::traits::collect"],[5492,"core::result"],[5493,"polars_utils::iter::fallible"],[5494,"polars_arrow::bitmap::immutable"],[5495,"rayon::iter"],[5496,"polars_arrow::trusted_len"],[5497,"polars_core::datatypes::any_value"],[5498,"polars_utils::index"],[5499,"std::sync::rwlock"],[5500,"polars_core::chunked_array::logical::decimal"],[5501,"core::iter::traits::exact_size"],[5502,"polars_core::series::series_trait"],[5503,"core::slice::iter"],[5504,"core::iter::adapters::map"],[5505,"polars_core::chunked_array::metadata::guard"],[5506,"polars_core::chunked_array::metadata::interior_mutable"],[5507,"alloc::sync"],[5508,"polars_core::chunked_array::metadata::md_trait"],[5509,"core::convert"],[5510,"core::ops::range"],[5511,"polars_core::datatypes::field"],[5512,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5513,"polars_core::chunked_array::ops::rolling_window"],[5514,"ahash::random_state"],[5515,"polars_utils::hashing"],[5516,"ndarray::aliases"],[5517,"either"],[5518,"core::any"],[5519,"polars_core::chunked_array::arithmetic::numeric"],[5520,"polars_core::chunked_array::builder::string"],[5521,"polars_arrow::array::binview"],[5522,"polars_core::chunked_array::builder::boolean"],[5523,"polars_core::chunked_array::builder::null"],[5524,"polars_core::chunked_array::builder::primitive"],[5525,"core::clone"],[5526,"polars_core::chunked_array::builder::list::anonymous"],[5527,"polars_core::chunked_array::builder::list::boolean"],[5528,"polars_core::chunked_array::builder::list::primitive"],[5529,"polars_core::chunked_array::builder::list::binary"],[5530,"polars_core::chunked_array::builder::list::null"],[5531,"alloc::boxed"],[5532,"core::hash"],[5533,"polars_arrow::array::boolean"],[5534,"polars_core::chunked_array::metadata::env"],[5535,"polars_core::chunked_array::metadata::collect"],[5536,"bitflags::iter"],[5537,"std::fs"],[5538,"std::sync::mutex"],[5539,"polars_arrow::datatypes"],[5540,"polars_arrow::bitmap::utils::iterator"],[5541,"polars_arrow::bitmap::utils::zip_validity"],[5542,"polars_arrow::offset"],[5543,"polars_arrow::array::static_array"],[5544,"core::error"],[5545,"polars_arrow::array::primitive"],[5546,"polars_arrow::legacy::array::slice"],[5547,"polars_row::row"],[5548,"polars_arrow::array::binary"],[5549,"chrono::naive::datetime"],[5550,"alloc::borrow"],[5551,"polars_arrow::array::static_array_collect"],[5552,"bytemuck::zeroable"],[5553,"polars_core::chunked_array::logical::categorical"],[5554,"polars_core::chunked_array::logical::categorical::merge"],[5555,"polars_core::chunked_array::logical"],[5556,"polars_core::datatypes::time_unit"],[5557,"polars_arrow::datatypes::physical_type"],[5558,"polars_arrow::types"],[5559,"core::borrow"],[5560,"polars_arrow::pushable"],[5561,"polars_core::datatypes::into_scalar"],[5562,"core::cmp"],[5563,"polars_core::chunked_array::logical::categorical::builder"],[5564,"polars_core::chunked_array::logical::categorical::revmap"],[5565,"polars_core::chunked_array::logical::categorical::string_cache"],[5566,"polars_error::warning"],[5567,"polars_core::series::from"],[5568,"polars_utils::aliases"],[5569,"polars_arrow::datatypes::schema"],[5570,"polars_core::chunked_array::ndarray"],[5571,"polars_arrow::record_batch"],[5572,"polars_arrow::array::struct_"],[5573,"polars_utils::idx_vec"],[5574,"rayon::iter::plumbing"],[5575,"polars_core::frame::group_by::into_groups"],[5576,"core::iter::adapters::copied"],[5577,"core::iter::adapters::zip"],[5578,"polars_arrow::legacy::kernels::rolling"],[5579,"polars_utils::float"],[5580,"polars_arrow::types::native"],[5581,"polars_core::frame::group_by::aggregations::agg_list"],[5582,"polars_core::frame::row::av_buffer"],[5583,"polars_core::hashing::identity"],[5584,"hashbrown::map"],[5585,"polars_core::hashing::vector_hasher"],[5586,"core::alloc"],[5587,"std::os::fd::owned"],[5588,"std::os::fd::raw"],[5589,"core::mem::maybe_uninit"],[5590,"polars_arrow::legacy::kernels::time"],[5591,"core::default"],[5592,"core::ffi::c_str"],[5593,"polars_arrow::scalar"],[5594,"std::io::error"],[5595,"simdutf8::basic"],[5596,"alloc::collections"],[5597,"regex::error"],[5598,"std::ffi::os_str"],[5599,"std::path"],[5600,"alloc::ffi::c_str"],[5601,"polars_arrow::legacy::array::default_arrays"],[5602,"polars_arrow::buffer::immutable"],[5603,"polars_arrow::array::list"],[5604,"polars_core::named_from"],[5605,"polars_core::chunked_array::ops::aggregate"],[5606,"polars_core::chunked_array::ops::aggregate::quantile"],[5607,"polars_arrow::legacy::index"],[5608,"core::pin"],[5609,"core::io::borrowed_buf"],[5610,"std::io"],[5611,"polars_core::chunked_array::ops::aggregate::var"],[5612,"alloc::collections::btree::map"],[5613,"polars_arrow::legacy::array::list"],[5614,"polars_arrow::legacy::array::null"],[5615,"polars_arrow::bitmap::mutable"],[5616,"polars_arrow::array::utf8"],[5617,"polars_core::series::iterator"],[5618,"alloc::rc"],[5619,"polars_arrow::legacy::utils"],[5620,"polars_core::utils::supertype"],[5621,"polars_arrow::legacy::trusted_len::rev"],[5622,"smartstring::config"],[5623,"smartstring"],[5624,"polars_core::chunked_array::object::extension"],[5625,"polars_error::constants"],[5626,"polars_core::frame::horizontal"],[5627,"polars_arrow::legacy::prelude"],[5628,"polars_arrow::legacy::array"],[5629,"polars_arrow::legacy::array::utf8"],[5630,"polars_core::utils::any_value"],[5631,"polars_core::utils::schema"],[5632,"polars_core::utils::series"]],"if":"`````````````{{}b}``0```````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{El}}}}}}}Bn}{{{f{{l{c}}}}}{{f{{F`{En}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{F`{En}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fb}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fb}bBnBn}{{{f{{l{c}}}}}{{`{{Fd{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{Elb}0{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}{{{f{{l{c}}}}e}FfnAb}01{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ff}}}{{Af{{l{c}}}}}{{Bn{}{{Fh{Bl}}{Fj{Bl}}}}}}{{{f{{l{c}}}}}{{An{El}}}Bn}`{{{f{{l{Al}}}}{f{BhFl}}}Fn}{{{f{{l{c}}}}{f{BhFl}}}Fnn}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{cc{}}{c{{l{e}}}G`{{Bn{}{{Gb{c}}}}}}1{{{f{Bf}}c}{{l{e}}}Gd{{Bn{}{{Gb{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Gb{}}}}Bn}Gd}{{{f{Bf}}{F`{En}}}{{l{c}}}Bn}{{{f{Bf}}{F`{En}}Df}{{l{c}}}Bn}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{c{{l{Al}}}{{Gd{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gd{}{{B`{An}}}}}n}{c{{l{e}}}{{Gd{}{{B`{{Gl{F`{An{Gj}}}}}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}32{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{H`{}{{B`{An}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`{An{Gj}}}{{l{c}}}n}{{{f{Bf}}El}{{l{c}}}n}0{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{l{c}}}}El}AnBn}{{{f{{l{c}}}}El}{{Af{Hb}}}n}{{{f{{l{c}}}}El}Hbn}{{{f{{l{j}}}}El}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hd}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HfBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}AnBn}0{{{f{{l{{Hh{c}}}}}}El}{{An{{f{Hj}}}}}Hl}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EldEl}AjEd}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}108{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{}El}0{{ElHn{An{I`}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{{{f{{l{c}}}}}{{Id{{Ib{c}}}}}Bn}{ce{}{}}0{{{l{If}}{An{El}}El}{{Af{Ih}}}}{{{l{If}}{An{El}}El}Ih}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IjIl{In{}{{B`{}}}}FdH`}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FfJ`}000{{{f{{l{c}}}}}FfBn}02{{{f{{l{c}}}}}JbBn}{{{f{{l{c}}}}}{{`{{Jd{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{Jf}}}}}}}}{{{f{{l{c}}}}}{{Jl{{Jh{En}}{Jj{{f{En}}}{{C`{{An{{f{Gj}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{El}}}Bn}{{{f{{l{c}}}}}{{Jn{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}ElBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`K`}}00{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Kbn}{{{f{{l{c}}}}}{{An{Kd}}}n}{{{f{{l{Al}}}}}{{An{Kd}}}}{{{f{{l{c}}}}}{{An{Kd}}}Ed}{{{f{{l{c}}}}}KbEd}{{{f{Bh{l{c}}}}{Ib{c}}}bBn}`{{{f{{l{c}}}}}{{Kf{c}}}Bn}{{{f{{l{c}}}}}{{f{{Kj{{Kh{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{Kn{Kl}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Kj{{Kh{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Bn}<;{{{f{{l{c}}}}}{{An{Gl}}}n};{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{D`}}}}ElEl}{{l{Al}}}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{Af{El}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Cj}}}{{L`{{Db{Hn}}}}}}{{{f{Bf}}c}{{l{Lb}}}{{L`{{Db{I`}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{L`{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{L`{{Db{Lf}}}}}}{{{f{Bf}}{Lj{Lh}}}{{l{Ll}}}}{{{f{Bf}}{Lj{Lf}}}{{l{Ld}}}}{{{f{Bf}}c}{{l{Ll}}}{{L`{{Db{Lh}}}}}}{{{f{Bf}}c}{{l{Ld}}}{{L`{{Db{{An{Lf}}}}}}}}{{{f{Bf}}c}{{l{Lb}}}{{L`{{Db{{An{I`}}}}}}}}{{{f{Bf}}c}{{l{If}}}{{L`{{Db{Ln}}}}}}{{{f{Bf}}{Lj{I`}}}{{l{Lb}}}}{{{f{Bf}}c}{{l{Cl}}}{{L`{{Db{{An{Kd}}}}}}}}{{{f{Bf}}{Lj{Jf}}}{{l{M`}}}}{{{f{Bf}}c}{{l{Al}}}{{L`{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Ll}}}{{L`{{Db{{An{Lh}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{L`{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{L`{{Db{Dh}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{L`{{Db{Kd}}}}}}{{{f{Bf}}c}{{l{M`}}}{{L`{{Db{{An{Jf}}}}}}}}{{{f{Bf}}c}{{l{M`}}}{{L`{{Db{Jf}}}}}}{{{f{Bf}}c}{{l{Al}}}{{L`{{Db{d}}}}}}{{{f{Bf}}c}{{l{If}}}{{L`{{Db{{An{Ln}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{L`{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{L`{{Db{{An{Dh}}}}}}}}{{{f{Bf}}}{{l{{Hh{c}}}}}Hl}{{{f{{l{c}}}}ElEl}{{l{c}}}n}{{{f{Bf}}{F`{c}}}{{l{{Hh{c}}}}}Hl}{{{f{Bf}}{F`{c}}Gj}{{l{{Hh{c}}}}}Hl}{{{f{Bf}}F`}{{l{c}}}n}{{{Kj{Mb}}{F`{En}}HdHd}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}J`}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}10{{{f{{l{c}}}}}ElBn}``{{{f{{l{Dd}}}}}{{`{{Md{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Md{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Kbn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}KdMh}{{Af{{An{Kd}}}}}Ed}{{{f{{l{c}}}}KdMh}{{Af{Kb}}}Ed}{{{f{Bf}}ElKd}{{Af{{l{Al}}}}}}{{{f{Bf}}ElKdKd}{{Af{{l{c}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}ElKdKd}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Mb}}}Bn}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Mj}{{Af{Ad}}}n}{{{f{{l{c}}}}Ele}{{Af{{l{c}}}}}J`{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Kddd{An{I`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Eldd{An{I`}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gd{}{{B`{Hd}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gd{}{{B`{Hd}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Ff}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Hd}bBn}{{{f{Bh{l{c}}}}Jb}bBn}{{{f{{l{c}}}}Jf}{{l{c}}}n}{{{f{{l{c}}}}JfAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JfEl}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}Jf}{{Gl{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}D`}{{An{Kd}}}n}{{{f{{l{c}}}}D`}KbEd}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hd}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Kbn}{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{L`{{Db{Hd}}}}Ml}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Fh{Bl}}{Mn{Bl}}}}Bn}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Fh{Bl}}{Mn{Bl}}}}Bn}{{L`{{Db{Hd}}}}Ml}}`{{{f{{l{c}}}}dN`}{{F`{{F`{Nb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}J`}{{{f{{l{Dd}}}}El}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{c}}}}}{{Af{Nd}}}n}{{{f{{l{j}}}}}{{Af{Nf}}}}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Nh}{{{f{{l{c}}}}}{{F`{An}}}n}{{{f{{l{c}}}}}{{Nj{F`{F`{An}}}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gf{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gf{eg}}}}}}}Bn}{c{{Gf{e}}}{}{}}0{{{f{Bf}}g}{{Gf{{l{i}}e}}}G`{}{{Gd{}{{B`{{Gf{ce}}}}}}}{{Bn{}{{Gb{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}El}{}Bn}{{{f{{l{c}}}}D`}{{An{Kd}}}n}{{{f{{l{c}}}}D`}KbEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}G`{{Bn{}{{Gb{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}G`{{Bn{}{{Gb{c}}}}Bn}}{{{f{{l{c}}}}{F`{En}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Nn}}}}e}c{}{{O`{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Jb}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}2301{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}452301542367542310543201{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}e{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}c}g{}{}{}}{{c{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}g{}{}{}}{{{Oh{}{{Ob{c}}{Od{e}}{Of{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhOj}}}b}{{{f{Bh{Ol{c}}}}}b{OnMl}}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{Bh{Ol{c}}}}{An{e}}}b{OnMl}{{L`{c}}}}{{{f{BhOj}}{An{c}}}b{}}{{{f{BhOj}}c}b{}}{{{f{Bh{Ol{c}}}}e}b{OnMl}{{L`{c}}}}{{{f{BhA@`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Ol{c}}}}}{{Ol{c}}}{OnMl}}{{{f{A@`}}}A@`}{{{f{A@b}}}A@b}{{{f{{A@d{c}}}}}{{A@d{c}}}{nA@f}}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}000{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{Elb}000{Oj{{l{c}}}Bn}{{{Ol{{Db{D`}}}}}Eb}{{{Ol{Bf}}}Nh}{A@hNh}{A@jEb}{A@`Ff}`{{{A@d{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}A@l{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}A@l{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}A@l{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}A@l{}}{{}El}000{ce{}{}}000`{{{f{Bf}}El}{{Ol{c}}}{OnMl}}{{{f{Bf}}El}A@`}{{{f{Bf}}El}A@b}{{{f{Bf}}El}{{A@d{c}}}n}{{{f{BhOj}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gf{e}}}{}{}}0000000{{{f{c}}}Nl{}}000;;;;````````{{{f{BhA@n}}{f{G`}}}b}{{{f{BhA@n}}}b}{{{f{BhAA`}}}b}{{{f{BhAAb}}c}b{{Bd{}{{B`{{An{d}}}}}}H`}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{An}}}}H`}}{{{f{Bh{AAd{c}}}}e}bn{{Bd{}{{B`{}}}}H`}}{{{f{BhAAf}}}b}54{{{f{BhAAh}}}b}{{{f{BhAAj}}}b}{{{f{BhAAb}}}b}{{{f{BhAAl}}}b}{{{f{Bh{AAd{c}}}}}bn}{{{f{BhA@n}}{An{{f{G`}}}}}b}{{{f{BhA@n}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhAAf}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{An{{f{Db}}}}}bn}{{{f{BhAAf}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@n}}{f{Ad}}}{{Af{b}}}}{{{f{BhAA`}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAh}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAj}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAb}}{f{Ad}}}{{Af{b}}}}{{{f{BhAAl}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{AAd{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{AAd{c}}}}{f{Db}}}bn}{{{f{BhAAh}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}H`}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}H`}}{{{f{BhAAh}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhAAj}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}A@n}{{}AA`}{El{{f{c}}}{}}000000{El{{f{Bhc}}}{}}000000{Elb}000000{{{f{AAh}}}d}{{{f{AAj}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dn}{{{f{AAf}}}d}{{{f{AAh}}}{{f{Mb}}}}{{{f{AAj}}}{{f{Mb}}}}{{{f{AAb}}}{{f{Mb}}}}{{{f{{AAd{c}}}}}{{f{Mb}}}n}{{{f{AAf}}}{{f{Mb}}}}{{{f{BhA@n}}}Dj}{{{f{BhAA`}}}Dj}{{{f{BhAAl}}}Dj}{{{f{BhAAf}}}Dj}{cc{}}000000{{{f{Df}}ElEl{f{Bf}}}{{Af{{AAn{AAf}}}}}}{{}El}000000{{{f{BhAAh}}}En}{{{f{BhAAj}}}En}{{{f{BhAAb}}}En}{{{f{Bh{AAd{c}}}}}Enn}{{{f{BhAAf}}}En}{ce{}{}}000000{{{f{Bf}}El{An{Df}}}A@n}{{{f{Bf}}El{An{Df}}}AA`}{{{f{Bf}}ElEl}AAh}{{{f{Bf}}ElEl}AAj}{{{f{Bf}}ElEl}AAb}{{{f{Bf}}El}AAl}{{{f{Bf}}ElElDf}{{AAd{c}}}n}{{{f{Bf}}ElElDfDf}{{AAd{c}}}n}{c{{Gf{e}}}{}{}}0000000000000{{{f{c}}}Nl{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}Ef}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFl}}}Fn}{cc{}}{{{f{Ef}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}4``{{ABb{f{Bf}}}{{l{c}}}Bn}{{ABd{f{{l{c}}}}}{{l{c}}}Bn}10{{ABd{f{Bf}}Df}{{l{c}}}Bn}0{{ABb{f{Bf}}}{{Gf{{l{c}}e}}}Bn{}}{{ABd{f{{l{c}}}}}{{Gf{{l{c}}e}}}Bn{}}10{{ABd{f{Bf}}Df}{{Gf{{l{c}}e}}}Bn{}}0`{ABfABf}``{{ABh{f{Bf}}Df}e{}{{ABj{c}}}}{{e{f{Bf}}Df}ABj{}{{Gn{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{cc{}}0{{}El}0{ce{}{}}000{{{f{ABl}}}ABn}{{{f{BhABn}}}{{An{c}}}{}}{{{f{Bh{AC`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AC`{c}}}}}{{An{e}}}Fd{}}`{{{f{ABn}}}{{Gl{El{An{El}}}}}}{{{f{{AC`{c}}}}}{{Gl{El{An{El}}}}}Bd}{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}088`````````````````````````{{{f{c}}h}b{}}0000{{}Fb}{{}Hf}{{FbFb}Fb}{{HfHf}Hf}{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}3210{{{f{Fb}}}Lf}0{{{f{Hf}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000{{{f{{Kh{c}}}}}{{Kh{c}}}Bn}{{{f{{Ib{c}}}}}{{Ib{c}}}Bn}{{{f{ACb}}}ACb}{{{f{Fb}}}Fb}{{{f{Hf}}}Hf}{{{f{c}}{f{Bhe}}}b{}{}}0000{{{f{c}}}b{}}0000000{{{f{BhACd}}}b}0{FbFb}{HfHf}{{{f{Fb}}Fb}d}{{{f{Hf}}Hf}d}{{}{{Kh{c}}}Bn}{{}{{Ib{c}}}Bn}{{}Fb}{{}Hf}{El{{f{c}}}{}}{{{f{{Kf{c}}}}}{{f{e}}}Bn{}}111111{El{{f{Bhc}}}{}}000000{{FbFb}Fb}{{HfHf}Hf}{{}d}{{{f{Kl}}}{{An{Hd}}}}{{{f{{Ib{c}}}}}{{An{Hd}}}Bn}{{{Ib{c}}Hd}{{Ib{c}}}Bn}{{{Ib{c}}{An{Hd}}}{{Ib{c}}}Bn}{Elb}000000<;5{{{f{Fb}}{f{Fb}}}d}{{{f{Hf}}{f{Hf}}}d}7{{{f{BhFb}}c}b{{Gd{}{{B`{Fb}}}}}}{{{f{BhHf}}c}b{{Gd{}{{B`{Hf}}}}}}{{{Ib{c}}d}{{Ib{c}}}Bn}{{{Ib{c}}{An{d}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}Fb}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}Fb}{{Ib{e}}}BnBn}{{{Ib{c}}Hf}{{Ib{c}}}Bn}{{{Ib{c}}{An{Hf}}}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}{f{BhFl}}}FnBn}{{{f{ACb}}{f{BhFl}}}Fn}{{{f{Fb}}{f{BhFl}}}Fn}0000{{{f{Hf}}{f{BhFl}}}Fn}0000{cc{}}000000{Lf{{An{Fb}}}}{D`{{An{Hf}}}}{LfFb}0{D`Hf}010{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}0{cFb{{Gd{}{{B`{Fb}}}}}}{cHf{{Gd{}{{B`{Hf}}}}}}{{{f{Bf}}}{{An{Fb}}}}{{{f{Bf}}}{{An{Hf}}}}{{{f{{Ib{c}}}}}{{An{Hd}}}Bn}{{{f{{Ib{c}}}}}dBn}{{{f{Hf}}}d}{{{f{Kl}}}Hf}{{{f{{Ib{c}}}}}HfBn}0{{{f{{Ib{c}}}}}{{An{f}}}Bn}0{{{f{Bh{Kh{c}}}}}{{f{Bh{Ib{c}}}}}Bn}{{{f{Hf}}}Jb}{{}El}000000{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}{{FbFb}Fb}{{HfHf}Hf}{{{f{Fb}}Fb}d}{{{f{Hf}}Hf}d}{ce{}{}}000000{Fbc{}}{Hfc{}}{{{f{Fb}}}d}{{{f{Hf}}}d}{{{f{{Ib{c}}}}}dBn}21{{{f{{Ib{c}}}}}JbBn}111{{{f{Fb}}}{{ACf{Fb}}}}{{{f{Hf}}}{{ACf{Hf}}}}{{{f{Fb}}}{{ACh{Fb}}}}{{{f{Hf}}}{{ACh{Hf}}}}{{}d}{{}{{f{{ACl{ACj}}}}}}{{{f{Kl}}}{{An{Kb}}}}{{{f{{Ib{c}}}}}{{An{Kb}}}Bn}{{{Ib{c}}}{{Ib{c}}}Bn}{{{Ib{c}}An}{{Ib{c}}}Bn}{{{f{{Ib{c}}}}{Ib{c}}}{{ACn{c}}}Bn}4231{{{Ib{c}}}{{Kh{c}}}Bn}{FbFb}{HfHf}{{{f{{Kh{c}}}}}{{Kn{{Ib{c}}}}}Bn}{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}{{{f{BhFb}}Fbd}b}{{{f{BhHf}}Hfd}b}{{{f{Bh{Ib{c}}}}{An{Hd}}}bBn}{{{f{Bh{Ib{c}}}}d}bBn}{{{f{BhHf}}d}b}{{{f{Bh{Ib{c}}}}Hf}bBn}{{{f{Bh{Ib{c}}}}An}bBn}033{{{f{Bh{Ib{c}}}}Jb}bBn}{{{f{BhHf}}Jb}b}{{{Ib{c}}Jb}{{Ib{c}}}Bn}{{{Ib{c}}{An{Jb}}}{{Ib{c}}}Bn}{{FbFb}Fb}{{HfHf}Hf}>=10{{{Kh{c}}}{{Ib{c}}}Bn}{{{f{c}}}e{}{}}0000{{{f{BhFb}}Fb}b}{{{f{BhHf}}Hf}b}{c{{Gf{e}}}{}{}}0000000000000{{{f{{Kh{c}}}}}{{An{{Kn{{Ib{c}}}}}}}Bn}{{{f{{Kh{c}}}}}{{An{{Id{{Ib{c}}}}}}}Bn}{{{f{c}}}Nl{}}00000098{{{f{{Kh{c}}}}}{{f{{AD`{Kl}}}}}Bn}{ce{}{}}000000{ACdACd}0{{{f{{Kh{c}}}}}{{Id{{Ib{c}}}}}Bn}````{{{f{c}}h}b{}}{{{f{{ADb{c}}}}El}{{Gl{{ADb{c}}{ADb{c}}}}}Hl}{e{{ADb{c}}}Hl{{Gd{}{{B`{{An{{f{c}}}}}}}}}}{e{{ADb{c}}}Hl{{Gd{}{{B`{{f{c}}}}}}}}{{ADde}g{}{{Gd{}{{B`{c}}}}}{}}0{{{f{Hj}}}{{f{ADf}}}}{{{f{{ADb{c}}}}}{{f{ADf}}}Hl}{{{f{Bh{ADb{c}}}}}{{f{BhADf}}}Hl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ADb{c}}}}El}dHl}{{{f{{ADb{c}}}}}{{ADb{c}}}{HlA@f}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{{ADb{c}}}}}{{f{ADd}}}Hl}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{{f{Hj}}}}{f{{f{Hj}}}}}d}{{{f{Hj}}{f{Hj}}}d}{{{f{{ADb{c}}}}{f{BhFl}}}Fn{HlADh}}{cc{}}{{ElADd}{{ADb{c}}}Hl}{{{f{{ADb{c}}}}El}{{An{{f{c}}}}}Hl}{{}ADd}{{{f{Gj}}{f{{ADb{c}}}}{f{{ADb{c}}}}}{{ADb{c}}}Hl}{{ADd{f{Gj}}cc}{{ADb{e}}}{}Hl}{{{f{Gj}}{f{{ADb{c}}}}e}{{ADb{c}}}Hl{}}{{{f{Gj}}c{f{{ADb{e}}}}}{{ADb{e}}}{}Hl}{{}El}{ce{}{}}{{{f{{ADb{c}}}}}eHl{}}{{{f{{ADb{c}}}}El}dHl}{{{f{c}}El}d{}}1{{{f{{ADb{c}}}}}{{ADl{egADj}}}Hl{}{}}{{{f{{ADb{c}}}}}{{ADl{{f{c}}{ADn{c}}ADj}}}Hl}{{{f{{ADb{c}}}}}ElHl}0`{db}{{{f{Bh{ADb{c}}}}{An{Gj}}}bHl}{{{f{Bh{ADb{c}}}}ElEl}bHl}{{{f{c}}ElEl}e{}{}}01{{{f{{ADb{c}}}}El}{{Gl{{AAn{G`}}{AAn{G`}}}}}Hl}0{{{f{Hj}}}{{AAn{Hj}}}}{{{f{{ADb{c}}}}}{{AAn{G`}}}Hl}{{{f{c}}}e{}{}}{g{{Gf{{ADb{c}}e}}}Hl{}{{Gd{}{{B`{{Gf{{f{c}}e}}}}}}}}{g{{Gf{{ADb{c}}e}}}Hl{}{{Gd{}{{B`{{Gf{{An{{f{c}}}}e}}}}}}}}{{ADdg}{{Gf{ie}}}{}{}{{Gd{}{{B`{{Gf{ce}}}}}}}{}}0{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{Hj}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ADb{c}}}}}{{An{{f{Gj}}}}}Hl}{{{f{{ADb{c}}}}El}{{f{c}}}Hl}0{{{f{{ADb{c}}}}El}eHl{}}{{{f{{ADb{c}}}}}{{f{{Kj{{F`{c}}}}}}}Hl}{{{f{{ADb{c}}}}}{{ADn{c}}}Hl}{{{f{{ADb{c}}}}}eHl{}}{ce{}{}}{{{f{{ADb{c}}}}{An{Gj}}}{{AAn{G`}}}Hl}{{{ADb{c}}{An{Gj}}}{{ADb{c}}}Hl}0`{{{f{Bh{AE`{c}}}}}bHl}0{{{f{Bh{AE`{c}}}}{An{c}}}bHl}{{{f{Bh{AE`{c}}}}{f{ADf}}}bHl}{{{f{Bh{AE`{c}}}}c}bHl}{{{f{Bh{AE`{c}}}}{f{ADf}}}{{Af{b}}}Hl}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AE`{c}}}Hl}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{AE`{c}}}{{AEb{c}}}Hl}{cc{}}{{}El}{ce{}{}}{{{f{Bf}}El}{{AE`{c}}}Hl}{{{f{Bh{AE`{c}}}}}AdHl}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}4````{{{f{BhAEd}}}b}{{{f{BhAEd}}{An{{f{ADf}}}}}b}{{{f{BhAEd}}{f{ADf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AEf}}{f{BhFl}}}Fn}<{{{f{Bf}}El}{{AAn{AEd}}}}{{}AEh}{{}ADd}>={{}d}`{{AEjAEhADd}b}{{{f{BhAEd}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AF`}}{f{Cb}}}AF`}{{{f{AF`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{AEn{}{{AEl{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{AEn{}{{AEl{c}}}}}}g}{{AEn{}{{AEl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AFb}}Dl}Dn}{{{f{AFb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AFd}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AFf}}{f{Df}}}{{Af{Ad}}}}0{{{f{AFf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AFh}}}AFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AFh}}{f{AFh}}}d}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{Ad}}}}{{{f{AFl}}}{{Af{{Gl{Ad{AFn{Jf}}}}}}}}`{{{f{AG`}}c}{{Af{AG`}}}{}}{{{f{AGb}}{f{Ff}}}{{Af{{l{c}}}}}Bn}`{{{f{AFh}}{f{BhFl}}}Fn}{cc{}}`{{{f{Bf}}cEl}AGd{}}{{{f{Bf}}El}AGf}`{{{f{AGh}}El}{{Af{Hb}}}}{{{f{AGh}}El}Hb}::{{{f{AFh}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{AGj}}}{{Af{Ff}}}}{{{f{AGl}}}{{Af{Ff}}}}??{{{f{AGn}}}{{An{c}}}{}}{{{f{AGn}}}{{An{Kd}}}}{{{f{AH`}}}{{An{c}}}{}}2{{{f{AGn}}}{{An{{Gl{cc}}}}}{}}{{{f{AFd}}}{{Af{El}}}}{{{f{AHb}}ElEl}{{l{c}}}Bn}{{{f{{AFj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AFl}}}{{Af{{AFn{Jf}}}}}}{{{f{AH`}}KdMh}{{Af{{An{c}}}}}{}}{{{f{AHd}}}AHd}{{{f{AHf}}{f{Cb}}Mj}{{Af{Ad}}}}{{{f{AHh}}c{An{e}}}{{Af{AHh}}}{{Gd{}{{B`{Hd}}}}}{}}{{{f{AHh}}ci}{{Af{AHh}}}{{Gd{}{{B`{Hd}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AHh}}{f{Ff}}{An{c}}}{{Af{AHh}}}{}}{{{f{AHj}}Jf}{{l{c}}}Bn}{{{f{AHl}}Jfc}{{l{e}}}{}Bn}`{{{f{AFb}}d}{{l{c}}}Bn}{{{f{AFb}}Dl}{{l{c}}}Bn}{{{f{AHn}}D`}{{An{Kd}}}}{{{f{AGn}}}{{An{c}}}{}}{{{f{AI`}}{f{c}}}{{Af{AI`}}}Ml}{{{f{AIb}}{f{c}}}AIbMl}{{{f{AId}}}{{F`{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{AFd}}}{{Af{AFd}}}}8{ce{}{}}`{{{f{AIf}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnG`{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AIh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{G`AIj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnG`{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnG`{{Ch{}{{C`{g}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{AAn{G`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{AAn{G`}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gf{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gf{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AIl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gf{{l{m}}i}}}BnBnG`AIn{{Ch{ff}{{C`{{Gf{gi}}}}}}}{{Bn{}{{Gb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gf{{l{m}}i}}}BnBnG`AIn{{Ch{ff}{{C`{{Gf{gi}}}}}}}{{Bn{}{{Gb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gf{{l{c}}g}}}BnBnAIn{{Ch{ff}{{C`{{Gf{{AAn{G`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gf{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gf{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gf{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gf{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gf{{l{k}}g}}}Bn{G`AIj}AIn{{Ch{f}{{C`{{Gf{eg}}}}}}}{{Bn{}{{Gb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AJ`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAJ`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnG`{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gb{e}}}}}}{{{l{c}}g}{{l{i}}}BnG`{{Ch{}{{C`{e}}}}}{{Bn{}{{Gb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{G`AIj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Gb{e}}}}}}0{{{f{{l{c}}}}}Eln}0{{JbJb}Jb}{{{f{Dn}}Hd}{{Af{b}}}}{{{f{{AJb{Hd}}}}Hd}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAJdd}{{F`{Hd}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AJd}}}AJd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}AJd}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AJd}}{f{AJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AJd}}{f{BhFl}}}Fn}{cc{}}{{{f{AJd}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{{Db{f}}}}cHde}{{F`{Hd}}}{{Bd{}{{B`{An}}}}}{{Cb{fElf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}4`{{El{f{Bh{F`{d}}}}}b}```{{{f{AJf}}ElEl}AJf}0{{El{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AJh{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AJj}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{{AJl{Jf}}}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AJn}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AJn}}}}{{{f{Ad}}}{{Af{En}}}}{{{f{{Db{Ad}}}}}{{Af{AJj}}}}{{{f{{Db{Ad}}}}}{{Af{AJn}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}Dl}{{}E`}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0``{Elb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFl}}}Fn}{{{f{E`}}{f{BhFl}}}Fn}{{{f{E`}}}Dl}{cc{}}0{{{f{Dl}}}E`}{{{f{Dl}}{f{Bhc}}}bAB`}{{{f{E`}}{f{Bhc}}}bAB`}{{}El}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AJf}}ElEl}AJf}0{{{f{c}}}e{}{}}0{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{Gd{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AK`Jf}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Ih}}{f{Ih}}}c{}}{{{f{Ff}}{f{Ff}}}c{}}{{FfFf}c{}}{{{f{Nh}}{f{Nh}}}c{}}{{NhNh}c{}}{{{f{Nh}}{f{Bf}}}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{EbEb}c{}}{{{f{Hb}}{f{Hb}}}Hb}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Nh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ff}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Ff}}{f{Aj}}}Ad}{{{f{Nh}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{AEb{c}}}}{f{Aj}}}AdHl}{{{f{Ff}}}d}{{{f{Ff}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Nh}}c}Nh{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AKd{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AKd{{Db{D`}}}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hl{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AKf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AKh}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Ff}}{f{Cb}}}Ff}{{{f{Nh}}{f{Cb}}}Nh}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Ff}}{f{Cb}}}{{l{c}}}Bn}{{{f{Nh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Nh}}c}Nh{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Nh}}c}Nh{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Ff}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Nh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{AEb{c}}}}g{f{Bh{Db{e}}}}}bHl{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{d}{{C`{d}}}}Cd}}{{{f{Nh}}c}Nh{{Cb{{f{Bf}}}{{C`{{AKd{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AKd{{Db{D`}}}}}}}}Cd}}{{{f{{AEb{c}}}}e}{{AEb{c}}}Hl{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Ff}}Dl}Dn}{{{f{Nh}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AJn}}Dl}Dn}{{{f{Ff}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Nh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AJn}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Ff}}}{{Af{Dn}}}}{{{f{Nh}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{AEb{c}}}}}{{Af{Dn}}}Hl}{eAKj{}{{Gd{}{{B`{c}}}}}}0{{ADde}AKl{}{{Gd{}{{B`{c}}}}}}0{{{f{Nh}}}Eb}{{{f{Hb}}}Hb}{{{f{Df}}}{{f{Df}}}}{{{f{Mb}}}{{f{Df}}}}{{{f{AKn}}}{{f{Df}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{{f{{Db{c}}}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Ff}}{f{Ff}}}c{}}{{FfFf}c{}}0101{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{AAn{Df}}}}{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALn}}{f{Df}}}{{Af{Ad}}}}0{{{f{Hb}}{f{Df}}}Hb}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}}{{Af{Ad}}}}{{{f{Nh}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AJn}}{f{Df}}}{{Af{Ad}}}}{{{f{ALn}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ih}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Nh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AJn}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}0000{{{f{AKf}}{f{Ad}}}{{Af{Ad}}}}{{{f{AKh}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AM`{ce}}}}}{{AM`{ce}}}BnBn}{{{f{AMb}}}AMb}{{{f{Hb}}}Hb}{{{f{AMd}}}AMd}{{{f{Df}}}Df}{{{f{AMf}}}AMf}{{{f{Mb}}}Mb}{{{f{AMh}}}AMh}{{{f{AMj}}}AMj}{{{f{AMl}}}AMl}{{{f{Ld}}}Ld}{{{f{Lb}}}Lb}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{Ll}}}Ll}{{{f{M`}}}M`}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ANb}}}ANb}{{{f{ANd}}}ANd}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{ANf}}}ANf}{{{f{Al}}}Al}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{ANl}}}ANl}{{{f{ANn}}}ANn}{{{f{ADd}}}ADd}{{{f{AO`}}}AO`}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{c}}}b{}}00000000000000000000000000000000000000000000000000000{{{f{BhMb}}Df}b}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{Df}}}d}00{AOdDf}{{{f{Mb}}}{{f{Df}}}}{{}Hb}{{}AMd}{{}Df}{{}ADd}{El{{f{c}}}{}}{{{f{{AM`{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{El{{f{Bhc}}}{}}{{{f{Bh{AM`{ce}}}}}{{f{Bhg}}}BnBn{}}1111111111111111111111111111111111{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{Elb}0000000000000000000000000000000000{{{f{ALn}}}{{f{Df}}}}{{{f{Ih}}}{{f{Df}}}}{{{f{Hb}}}Df}`{{{f{Hb}}{f{Hb}}}d}{{{f{AMd}}{f{AMd}}}d}{{{f{Df}}{f{ADd}}}d}{{{f{Df}}{f{Df}}}d}{{{f{AMf}}{f{AMf}}}d}{{{f{Mb}}{f{Mb}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{ADd}}{f{ADd}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{Hb}}{f{Hb}}d}d}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}542301{{{f{c}}{f{e}}}d{}{}}00000000000000000000000{{{f{Dj}}}{{Af{{Gl{Ad{AFn{Jf}}}}}}}}{{{f{{AM`{ce}}}}}MbBnBn}{{{f{Ff}}d}{{Af{Ff}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Nh}}{f{Ff}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Ff}}}{{Af{{l{Cn}}}}}}{{{f{{AEb{c}}}}{f{Ff}}}{{Af{{l{{Hh{c}}}}}}}Hl}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Dj}}{f{BhFl}}}Fn}{{{f{Nh}}{f{BhFl}}}Fn}{{{f{Eb}}{f{BhFl}}}Fn}{{{f{{AEb{c}}}}{f{BhFl}}}FnHl}{{{f{AMb}}{f{BhFl}}}Fn}{{{f{Hb}}{f{BhFl}}}Fn}0{{{f{AMd}}{f{BhFl}}}Fn}{{{f{Df}}{f{BhFl}}}Fn}0{{{f{AMf}}{f{BhFl}}}Fn}{{{f{Mb}}{f{BhFl}}}Fn}{{{f{AMh}}{f{BhFl}}}Fn}0{{{f{ADd}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{AO`}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}000000{dHb}1{{{f{{Db{D`}}}}}Hb}{{{f{Bf}}}Hb}{cHbAOj}{{{An{c}}}Hb{{AOl{Hb}}}}5{{{f{ADd}}}Df}{{{f{Hb}}}Df}7{HbDf}8{{{f{AOn}}}Mb}9{{{f{Hb}}}Mb}{{{f{AO`}}}AMh};;;;;;;;;;;;;;;;;;;;;{B@`ADd}<{B@bADd}={{{f{ADd}}d}Df}{cDj{{Gd{}{{B`{{An{Ad}}}}}}}}{cDj{{Gd{}{{B`{{An{{AAn{G`}}}}}}}}}}{eDj{{B@d{Ad}}}{{Gd{}{{B`{c}}}}}}{cFf{{Gd{}{{B`{d}}}}}}{eNh{{L`{Bf}}}{{Gd{}{{B`{{An{c}}}}}}}}{eNh{{`{Bf}}}{{Gd{}{{B`{c}}}}}}{eEb{{L`{{Db{D`}}}}}{{Gd{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}}{{Gd{}{{B`{c}}}}}}{e{{AEb{c}}}Hl{{Gd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Nh{{L`{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{L`{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{Bd{}{{B`{{An{c}}}}}}}}<:97856{eAJn{{`{{Db{D`}}}}}{{Gd{}{{B`{c}}}}}}{eAJn{{L`{{Db{D`}}}}}{{Gd{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Nh{{L`{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{L`{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{AEb{c}}}Hl{{Bd{}{{B`{c}}}}}}{{B@fDf}Mb}{cDj{{Gn{}{{B`{{An{Ad}}}}}}}}{cFf{{Gn{}{{B`{d}}}}}}{cFf{{Gn{}{{B`{{An{d}}}}}}}}{eNh{{L`{Bf}}IjIl}{{Gn{}{{B`{{An{c}}}}}}}}{eNh{{`{Bf}}IjIlB@h}{{Gn{}{{B`{c}}}}}}{eEb{{`{{Db{D`}}}}IjIlB@h}{{Gn{}{{B`{c}}}}}}{eEb{{L`{{Db{D`}}}}IjIl}{{Gn{}{{B`{{An{c}}}}}}}}{{c{f{Bf}}Df}Dj{{Gn{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Ff}{{{f{Bf}}{f{{Db{c}}}}}Nh{{L`{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{L`{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{AEb{c}}}Hl}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Ff}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Nh{{L`{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{L`{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{AEb{c}}}Hl}{cFf{{H`{}{{B`{{An{d}}}}}}}}{{{F`{c}}ADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{F`{c}}ADd}{{AIj{}{{AL`{e}}{ALb{c}}{ALd{g}}}}}{ALf{ALh{e}}}A@f{{Fd{}{{B`{e}}}}H`IjIl}}{{ElcADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Bf}}{f{Ad}}El}Dj}{{{f{Bf}}dEl}Ff}{{{f{Bf}}{f{Bf}}El}Nh}{{{f{Bf}}{f{{Db{D`}}}}El}Eb}{{{f{Bf}}{f{{Db{D`}}}}El}AJn}{{{f{Bf}}cEl}{{AEb{c}}}Hl}{{ElADd}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Bf}}El}Dj}{{{f{Bf}}El}Ff}{{{f{Bf}}El}Nh}{{{f{Bf}}El}Eb}{{{f{Bf}}El}AJn}{{{f{Bf}}El}{{AEb{c}}}Hl}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}El}{{An{c}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Ih}}El}{{Af{Hb}}}}{{{f{ALn}}El}{{Af{Hb}}}}0{{{f{Dj}}El}{{Af{Hb}}}}{{{f{Ff}}El}{{Af{Hb}}}}{{{f{Nh}}El}{{Af{Hb}}}}{{{f{Eb}}El}{{Af{Hb}}}}{{{f{AJn}}El}{{Af{Hb}}}}{{{f{{AEb{c}}}}El}{{Af{Hb}}}Hl}{{{f{Ih}}El}Hb}{{{f{ALn}}El}Hb}0{{{f{Dj}}El}Hb}{{{f{Ff}}El}Hb}{{{f{Nh}}El}Hb}{{{f{Eb}}El}Hb}{{{f{AJn}}El}Hb}{{{f{{AEb{c}}}}El}HbHl}{{{f{Dj}}El}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{AEb{c}}}}El}{{An{{f{Hj}}}}}Hl}0{{{f{Hb}}}{{An{{f{Bf}}}}}}{{{f{B@j}}El}Hb}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}El}{{An{c}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}}El}{{{f{Nh}}}El}{{{f{AJn}}}El}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Ff}}dd}{{Af{Aj}}}}{{{f{Nh}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AJn}}dd}{{Af{Aj}}}}{{{f{{AEb{c}}}}dd}{{Af{Aj}}}Hl}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}543201{{{f{Hb}}{f{Bhc}}}bAB`}{{{f{AMd}}{f{Bhc}}}bAB`}{{{f{Df}}{f{Bhc}}}bAB`}{{{f{Mb}}{f{Bhc}}}bAB`}{{{f{AMh}}{f{Bhc}}}bAB`}{{{f{ADd}}{f{Bhc}}}bAB`}{{{f{AO`}}{f{Bhc}}}bAB`}{{{f{Hb}}{f{Bhc}}d}bAB`}{DfDf}{{}El}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ADd}}}{{An{{f{ADd}}}}}}{ce{}{}}0000000000000000000000000000000000{{B@l{An{El}}El}{{Af{Ih}}}}{{B@l{An{El}}El}Ih}{{{f{Dj}}}c{}}{{{f{Ff}}}c{}}{{{f{Nh}}}c{}}{{{f{Eb}}}c{}}{{{f{AJn}}}c{}}{{{f{{AEb{c}}}}}eHl{}}{{B@nDf}{{Af{Kb}}}}{IhAd}{B@lAd}{Hb{{Af{Hb}}}}{{{f{Df}}}d}00{{{f{Hb}}}d}111010111110101011110111101{{{f{ADd}}}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{ADl{cgADj}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Dj}}}{{`{{Bd{}{{B`{Jf}}}}}}}}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}{{An{c}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}542310{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DjDj}{{Af{{Gl{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{AMd}}}{{An{Df}}}}{{{f{Ff}}}{{An{d}}}}{{{f{Ff}}}Kb}{{{f{Nh}}}Kb}{{{f{Eb}}}Kb}{{{f{Ff}}}{{An{Kd}}}}{{{f{AKf}}}{{An{Hn}}}}{{{f{AKh}}}{{An{Kd}}}}{{{f{AKf}}}Kb}{{{f{AKh}}}Kb}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}ElEl}Ff}{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Nh}}}{{Af{El}}}}{{{f{Eb}}}{{Af{El}}}}{{{f{Mb}}}{{f{B@f}}}}`{{}c{}}00{{{f{Bf}}c}Nh{{L`{{Db{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Nh{{L`{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Nh{{L`{{Db{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Nh{{L`{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Eb{{L`{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{L`{{Db{{An{{AKd{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{L`{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{L`{{Db{{AKd{{Db{D`}}}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{AEb{c}}}Hl}{{{f{Bf}}e}{{AEb{c}}}Hl{{L`{{Db{{An{c}}}}}}}}{{{f{Bf}}Df}Mb}{{{f{Bf}}}{{AEb{c}}}Hl}{{{f{Dj}}ElEl}Dj}{{{f{Ff}}ElEl}Ff}{{{f{Nh}}ElEl}Nh}{{{f{Eb}}ElEl}Eb}{{{f{AJn}}ElEl}AJn}{{{f{{AEb{c}}}}ElEl}{{AEb{c}}}Hl}{{{f{Bf}}{F`{c}}}{{AEb{c}}}Hl}{{{f{Bf}}{F`{c}}Gj}{{AEb{c}}}Hl}{{{l{c}}}{{AM`{ec}}}BnBn}{{}AMf}{Ffc{}}{{{f{Ff}}}c{}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Nh}}{f{Nh}}}Ff}{{{f{Nh}}{f{Bf}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}543201{{{f{Dj}}}{{Af{{AFn{Jf}}}}}}9{{{f{Dj}}}{{`{{Md{}{{B`{{An{Ad}}}}}}}}}}{{{f{Nh}}}{{`{{Md{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Mf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Nh}}}{{`{{Mf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Hb}}{f{Hb}}}{{An{BA`}}}}{{{f{AMh}}{f{AMh}}}{{An{BA`}}}}{{{f{{AM`{ce}}}}}{{f{{l{e}}}}}BnBn}{{{f{Ih}}}{{An{El}}}}{{{f{{AM`{ANhIf}}}}}{{An{El}}}}{{{f{AKf}}KdMh}{{Af{{An{Hn}}}}}}{{{f{AKh}}KdMh}{{Af{{An{Kd}}}}}}{{{f{AKf}}KdMh}{{Af{Kb}}}}{{{f{AKh}}KdMh}{{Af{Kb}}}}{{{f{Bf}}ElKd}{{Af{Ff}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Dj}}}Dj}{{{f{Ff}}}Ff}{{{f{Nh}}}Nh}{{{f{Eb}}}Eb}{{{f{AJn}}}AJn}{{{f{{AEb{c}}}}}{{AEb{c}}}Hl}`{{{f{Ih}}}El}{{{f{{AM`{ANhIf}}}}}El}{{{f{Ff}}c{An{d}}}{{Af{Ff}}}{{Gd{}{{B`{Hd}}}}}}{{{f{Nh}}c{An{{f{Bf}}}}}{{Af{Nh}}}{{Gd{}{{B`{Hd}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{Gd{}{{B`{Hd}}}}}}{{{f{Ff}}ce}{{Af{Ff}}}{{Gd{}{{B`{Hd}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Nh}}ce}{{Af{Nh}}}{{Gd{}{{B`{Hd}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Gd{}{{B`{Hd}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{F`{D`}}}}}}}}}}{{{f{Ff}}{f{Ff}}{An{d}}}{{Af{Ff}}}}{{{f{Nh}}{f{Ff}}{An{{f{Bf}}}}}{{Af{Nh}}}}{{{f{Eb}}{f{Ff}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhMb}}B@f}b}{{{f{Dj}}Jf}Dj}{{{f{Ff}}Jf}Ff}{{{f{Nh}}Jf}Nh}{{{f{Eb}}Jf}Eb}{{{f{AJn}}Jf}AJn}{{{f{{AEb{c}}}}Jf}{{AEb{c}}}Hl}{{{f{Dj}}Jf{An{{f{Ad}}}}}Dj}{{{f{Ff}}Jf{An{d}}}Ff}{{{f{Nh}}Jf{An{{f{Bf}}}}}Nh}{{{f{Eb}}Jf{An{{f{{Db{D`}}}}}}}Eb}{{{f{AJn}}Jf{An{{f{{Db{D`}}}}}}}AJn}{{{f{{AEb{c}}}}Jf{An{{Hh{c}}}}}{{l{{Hh{c}}}}}Hl}{{{f{Ff}}d}Ff}{{{f{Nh}}d}Nh}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AJn}}d}AJn}{{{f{Ff}}Dl}{{l{Al}}}}{{{f{Nh}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AJn}}Dl}AJn}{{{f{AKf}}D`}Kb}{{{f{AKh}}D`}Kb}{{{f{Hb}}{f{Df}}}{{An{Hb}}}}`{{{f{Ih}}{f{Ih}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gf{AdAKb}}}{}}000000{{{f{Ff}}}{{An{Hd}}}}{{{f{Ff}}}Kb}{{{f{Eb}}}Kb}{{{f{Nh}}{f{Dn}}}Nh}{{{f{Nh}}{f{c}}}Nh{{L`{{Db{Hd}}}}Ml}}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Eb}}{f{c}}}Eb{{L`{{Db{Hd}}}}Ml}}{{{f{Df}}AMf}ADd}{{{f{Mb}}AMf}AOn}{AMhAO`}{{{f{Df}}{f{Bf}}AMf}AOn}{AMh{{f{Bf}}}}{{{f{Nh}}El}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ADd}}}{{f{ADd}}}}{{{f{Dj}}}{{Af{Nf}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ADd}}}BAb}{{{f{Ih}}El}{{Af{{AKd{Ih}}}}}}{{{f{{AM`{ANhIf}}}}El}{{Af{{AKd{{AM`{ANhIf}}}}}}}}{{{f{c}}}Dh{}}00{{{f{Eb}}}Nh}{{{f{Hb}}{f{Hb}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gf{AKje}}}{}{}{{Gd{}{{B`{{Gf{ce}}}}}}}}0{{ADdg}{{Gf{AKle}}}{}{}{{Gd{}{{B`{{Gf{ce}}}}}}}}0{AOb{{Gf{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Gf{eg}}}{}{{AKl{c}}AIj}{}}0{{{f{Hb}}}{{Af{c}}}K`}{c{{Gf{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Hb}}{f{Df}}}{{Af{Hb}}}}{{{f{Df}}AMf}{{Af{ADd}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Nl{}}0000000000000000000000000000000000{{{f{ADd}}}ADd}{{{f{Ff}}}{{Af{Ff}}}}{{{f{Nh}}}{{Af{Nh}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{AEb{c}}}}}{{Af{{l{{Hh{c}}}}}}}Hl}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}El}cA@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}0{{{f{Df}}Hb}d}{{{f{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}}}gA@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{AKf}}D`}Kb}{{{f{AKh}}D`}Kb}{{{f{Ff}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAd}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAf}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AOf}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAh}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAj}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAl}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BAn}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{BB`}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{B@l}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AKf}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AKh}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{Nh}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{Eb}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{AJn}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}Hl}{{{f{Ff}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAd}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAf}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AOf}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAh}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAj}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAl}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BAn}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{BB`}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{B@l}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AKf}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AKh}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{Nh}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{Eb}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{AJn}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}{{{f{{AEb{c}}}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}Hl}{ce{}{}}0000000000000000000000000000000000{Elc{}}0{El{{BBb{ce}}}{}{}}{{{f{{Db{Nn}}}}e}c{}{{O`{{f{Dn}}}{{C`{c}}}}}}{{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}{An{Gj}}}{{AIj{}{{AL`{c}}{ALb{e}}{ALd{g}}}}}A@f{ALf{ALh{c}}}{{Fd{}{{B`{c}}}}H`IjIl}}{{{f{Df}}}Hb}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{ALj}}}d}{{ALjd}ALj}{{{f{BhBBd}}{An{{f{Bf}}}}}b}{{{f{BhALj}}{f{ALj}}}{{Af{b}}}}{{{f{BhBBd}}}b}{{{f{BhBBd}}{f{Bf}}}b}{{{f{ALj}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{ALj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{ALj}}}ALj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BBf}{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{{BBdc}ALj{{Gd{}{{B`{{An{{f{Bf}}}}}}}}}}{Elb}000{{{f{ALj}}}{{f{Df}}}}{{{f{ALj}}{f{ALj}}}c{}}{{{f{ALj}}{f{Bf}}}c{}}{{{f{ALj}}{f{Nh}}}c{}}210{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{BBdALj}{BBf{{Kj{BBh}}}}{cc{}}000{{AOf{Kj{BBh}}dBBj}ALj}{{AOfBBj}ALj}{{{f{Nh}}{f{AOd}}BBj}{{Af{ALj}}}}{{{f{Bf}}dElBBj}ALj}{{{f{ALj}}El}{{Af{Hb}}}}{{{f{ALj}}El}Hb}{{{f{ALj}}}{{f{{Kj{BBh}}}}}}=;<;=<{{}El}000{ce{}{}}0000{ALjAd}{{{f{ALj}}}d}0{{{f{ALj}}}BBl}{{{f{ALj}}}El}{{{f{ALj}}{f{Nh}}}c{}}{{{f{ALj}}{f{ALj}}}c{}}{{{f{ALj}}{f{Bf}}}c{}}021{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DjDj}{{Af{{Gl{DjDj}}}}}}{{{f{ALj}}}Kb}{{{f{BhBBf}}{f{{Kj{BBh}}}}}{{Af{b}}}}1{{{f{ALj}}}{{Af{El}}}}{{{f{ALj}}}{{f{Bf}}}}{{{f{Bf}}ElBBj}BBd}{{{Kj{BBh}}}BBf}{{{f{BhBBl}}}{{An{c}}}{}};:9:9;<{{{f{ALj}}}{{f{AOf}}}}{{{f{BhBBd}}{f{Bf}}}{{Gl{Lfd}}}}`{{{f{BBl}}}{{Gl{El{An{El}}}}}}{{{f{ALj}}d}ALj}{{{f{ALj}}Dl}ALj}`{{{f{ALj}}AMfd}En}{{{f{ALj}}{f{AOd}}BBn}ALj}{{{f{ALj}}}{{Af{ALj}}}}{{{f{ALj}}}ALj}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0000000{{{f{c}}}Nl{}}0004{{{f{ALj}}}d}{{{f{ALj}}}{{Af{BC`}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AOdBBh}{{{f{BBj}}}BBj}{{{f{BBh}}}BBh}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{}BBj}{{}BBh}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BBj}}{f{BBj}}}d}{{{f{BBh}}{f{Bf}}}{{An{Lf}}}}{{{f{BBj}}{f{BhFl}}}Fn}{{{f{BBh}}{f{BhFl}}}Fn}{cc{}}0{{{f{BBh}}Lf}{{f{Bf}}}}{{{f{BBh}}}{{f{AOd}}}}{{{f{BBh}}Lf}{{An{{f{Bf}}}}}}{{}El}0{ce{}{}}0{{{f{BBh}}}d}0{{{f{BBh}}}El}{{{f{BBh}}{f{BBh}}}d}{{{f{c}}}e{}{}}0{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BCb}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{{}b}{Elb}{{{f{BhBCb}}}b}2{cc{}}6{{}El}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BCd}}}{{f{Bf}}}}<<;;`99{{{f{BCd}}}f}9977`{{{f{BCf}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BCd}}{f{BhFl}}}{{Gf{bAOh}}}}077{cBCd{{AOl{{AKd{Bf}}}}}}{{}{{Jj{{f{Bf}}BCf}{{C`{b}}}}}}8877{cAKbAIn}````{{{Jj{{f{Bf}}BCf}{{C`{b}}}}}b}{cAKbBCh}{{{f{c}}}Dh{}}{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCj}}}BCj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhFl}}LnEl}Fn}{cc{}}{{}BCl}{{}BCj}{{}{{An{El}}}}{{}Dh}{{}d}{{}El}{ce{}{}}{{{An{BCl}}}b}{BCjb}{{{An{El}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBC`}}{F`{Ad}}{f{BCn}}}{{Af{b}}}}{{{f{BC`}}{f{Cb}}}{{F`{Ad}}}}0{{{f{BC`}}{f{Ff}}}{{Af{BC`}}}}{{{f{BC`}}{f{{Db{B@f}}}}}{{Af{BC`}}}}0{{{f{BC`}}JfEl}BC`}{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BhBC`}}}{{f{BhBC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBC`}}Ele}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BC`}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BC`}}}BC`}{{{f{BDb}}}BDb}{{{f{BDd}}}BDd}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}0000{{{f{BC`}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BC`}}e}{{Af{{F`{{f{Ad}}}}}}}{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}{{}BDd}{{}BC`}{El{{f{c}}}{}}0000{El{{f{Bhc}}}{}}0000{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{Elb}000{{{f{BC`}}{f{Bf}}}{{Af{BC`}}}}1{{{f{BhBC`}}{f{Bf}}}{{Af{Ad}}}}{{{f{BC`}}{f{{Db{c}}}}}BC`{{L`{Bf}}}}{{{f{BC`}}{f{{BDf{{f{Bf}}}}}}}BC`}{{{f{BC`}}{An{{f{{Db{c}}}}}}}{{Af{BC`}}}{{L`{Bf}}}}{{{f{BC`}}}{{F`{Df}}}}<{{{f{BDh}}}BC`}{{{f{BCn}}}BC`}{{{f{BDd}}{f{BDd}}}d}{{{f{BC`}}{f{BC`}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BC`}}}El}`{{{f{BC`}}e}{{Af{BC`}}}{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BC`}}{F`{Ad}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}}{{F`{Mb}}}}{{{f{BC`}}AFh}{{Af{BC`}}}}{{{f{BC`}}{f{Ff}}}{{Af{BC`}}}}{{{f{BDb}}{f{BhFl}}}Fn}{{{f{BDd}}{f{BhFl}}}Fn}{{{f{BC`}}{f{BhFl}}}Fn}0{cc{}}0000{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{cBC`{{Gd{}{{B`{Ad}}}}}}{{{f{{Db{BDj}}}}}{{Af{BC`}}}}{{{f{{Db{BDj}}}}{f{BCn}}}{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{f{BDj}}}}}}}}{{{f{BC`}}El}{{An{{F`{Hb}}}}}}{{{f{BC`}}{f{Bf}}}{{An{El}}}}{{{f{BC`}}}{{F`{{f{Bf}}}}}}{{{f{BC`}}}{{F`{B@f}}}}{{{f{BC`}}}{{f{{Db{Ad}}}}}}{{{f{BhBC`}}}{{f{Bh{F`{Ad}}}}}}{{{f{BC`}}El}{{Af{BDj}}}}{{{f{BC`}}El{f{BhBDj}}}{{Af{b}}}}{{{f{BC`}}El{f{BhBDj}}}b}{{{f{BC`}}}{{An{{Af{Df}}}}}}`{{{f{BC`}}e}{{Af{BDl}}}{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}0{{{f{BC`}}{F`{Ad}}dd}{{Af{BDl}}}}{{{f{BDd}}{f{Bhc}}}bAB`}{{{f{BhBC`}}{An{N`}}}{{Af{BAh}}}}{{{f{BC`}}{An{El}}}BC`}{{{f{BC`}}}El}{{{f{BC`}}{f{{Db{Ad}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{{Db{Ad}}}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{{Db{Ad}}}}}{{f{BhBC`}}}}{{{f{BC`}}El}{{f{c}}}{}}{{{f{BC`}}{BDn{El}}}{{f{c}}}{}}{{{f{BC`}}{BE`{El}}}{{f{c}}}{}}{{{f{BC`}}{f{Bf}}}{{f{c}}}{}}{{{f{BC`}}{Lj{El}}}{{f{c}}}{}}{{{f{BC`}}{BEb{El}}}{{f{c}}}{}}{{{f{BC`}}BEd}{{f{c}}}{}}{{{f{BC`}}{BEf{El}}}{{f{c}}}{}}{{}El}0000{{{f{BhBC`}}Elc}{{Af{{f{BhBC`}}}}}BD`}{ce{}{}}000000{{{f{BC`}}}{{Af{Ff}}}}{{{f{BC`}}}d}1{{{f{BC`}}}{{Jh{Ad}}}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{BC`}}AMfd}BEh}{{{f{BC`}}}BEj}{{{f{BC`}}}El}{{{f{BC`}}}{{Af{{An{Ad}}}}}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}1{{{f{BC`}}{f{BC`}}}c{}}{{{f{BC`}}{f{Ad}}}c{}}{{BC`{f{Ad}}}c{}}55{{{F`{c}}}{{Af{BC`}}}BD`}{{{F`{Ad}}}BC`}{{{F`{Ad}}}{{Af{BC`}}}}{{{f{BhBEh}}}{{An{c}}}{}}{{{f{BhBEj}}}{{An{c}}}{}}{{{f{BC`}}}BC`}{{{f{BC`}}cd}{{Af{{F`{BC`}}}}}{{BEl{Dh}}}}0{{BC`e}{{Af{c}}}{}{{Cb{BC`}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}e}{{Af{c}}}{}{{Cb{{f{BhBC`}}}{{C`{{Af{c}}}}}}}}{{BC`gc}{{Af{e}}}{}{}{{Cb{BC`c}{{C`{{Af{e}}}}}}}}{{{f{BhBC`}}}{{An{Ad}}}}{{{f{BC`}}{f{BC`}}}d}<=>{{{f{BhBC`}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBC`}}}}}}{{{f{BhBC`}}{f{Bf}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Elc}{{Af{{f{BhBC`}}}}}BD`}19`{{{f{BC`}}{f{Ad}}dd{An{I`}}}{{Af{BC`}}}}0{{{f{BC`}}Eldd{An{I`}}}{{Af{BC`}}}}{{{f{BC`}}}BCn}{{{f{BC`}}{f{BC`}}}{{Af{b}}}}{{{f{BC`}}e}{{Af{BC`}}}{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BC`}}El}{{An{{f{Ad}}}}}}{{{f{BC`}}c}{{Af{BC`}}}{{BEn{El}}}}2{{{f{BC`}}c}{{Af{{F`{Ad}}}}}{{BEl{B@f}}}}{{{f{BC`}}e{f{BF`}}}{{Af{BC`}}}{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BC`}}e{f{BCn}}}{{Af{BC`}}}{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{BhBC`}}{f{{Db{c}}}}}{{Af{b}}}{{L`{Bf}}}}{{{f{BC`}}}{{Gl{ElEl}}}}{{{f{BC`}}Jf}BC`}{{{f{BC`}}}d}{{{f{BhBC`}}}b}{{{f{BEh}}}{{Gl{El{An{El}}}}}}{{{f{BEj}}}{{Gl{El{An{El}}}}}}{{{f{BC`}}JfEl}BC`}00{{{f{BC`}}cE`}{{Af{BC`}}}{{BEl{B@f}}}}{{{f{BhBC`}}cE`}{{Af{{f{BhBC`}}}}}{{BEl{B@f}}}}{{{f{BC`}}Jf}{{Gl{BC`BC`}}}}0{{{f{BhBC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{BC`Eld}{{F`{BC`}}}}{{{f{BC`}}{f{Ad}}}c{}}{{{f{BC`}}{f{BC`}}}c{}}{{BC`{f{Ad}}}c{}}{{{f{BC`}}BDb}{{Af{{An{Ad}}}}}}{{{f{BC`}}{An{El}}}BC`}{{{f{BC`}}{f{Dn}}}{{Af{BC`}}}}{{{f{BC`}}{f{Dn}}}BC`}{{{f{BC`}}{f{Dn}}d}BC`}{{{f{BC`}}BFb}{{Af{Nf}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BhBC`}}{An{{f{Bf}}}}{An{{Nj{Dh{F`{Dh}}}}}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}e}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBC`}}Ele}{{Af{{f{BhBC`}}}}}BD`{{O`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gf{e}}}{}{}}0000{{{Gl{BFd{f{{Db{AOn}}}}}}}{{Af{BC`}}}}{BFf{{Af{BC`}}}}{{c{f{BCn}}}{{Af{BC`}}}{{Bd{}{{B`{{Af{{f{BDj}}}}}}}}}}{{{f{BC`}}{f{Bf}}}{{Af{El}}}}44444{{{f{c}}}Nl{}}0000{{{f{BC`}}{An{{f{{Db{Dh}}}}}}BDd{An{{Gl{JfEl}}}}}{{Af{BC`}}}}{{{f{BC`}}d{An{{f{{Db{Dh}}}}}}BDd{An{{Gl{JfEl}}}}}{{Af{BC`}}}}1{{{f{BC`}}ce}{{Af{BC`}}}{{BEl{B@f}}}{{BEl{B@f}}}}{{{f{BC`}}BFh}{{Af{BC`}}}}{{{f{BC`}}{f{BC`}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{BC`}}}{{Af{{f{BhBC`}}}}}}{ce{}{}}0000{{{f{BC`}}}El}{{{f{BhBC`}}c}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}c{f{BCn}}}{{Af{{f{BhBC`}}}}}BD`}{{{f{BhBC`}}Ad}{{f{BhBC`}}}}{{{f{BC`}}{f{Bf}}{An{Hd}}}{{Af{BC`}}}}{{{f{BhBC`}}{f{Bf}}{An{Hd}}}{{f{BhBC`}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BFh}}}BFh}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{}BFh}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BFh}}{f{BFh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BFh}}{f{BhFl}}}Fn}{cc{}}{{{f{BFh}}{f{Bhc}}}bAB`}`{{}El}{ce{}{}}``{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}``3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BDl}}}{{Af{BC`}}}}`{{{f{BFj}}}{{f{{Db{BFl}}}}}}{{{f{BDl}}c}{{Af{BC`}}}{{Ch{BC`}{{C`{{Af{BC`}}}}}}IjIl}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BFj}}}BFj}{{{f{Aj}}}Aj}{{{f{BDl}}}BDl}{{{f{BFn}}}BFn}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{c}}}b{}}0000;{{}BFj}{{}Aj}{El{{f{c}}}{}}000{{{f{BG`}}}{{f{c}}}{}}1111{El{{f{Bhc}}}{}}0000000`{{BGbe}{}{}{{BGd{c}}}}{Elb}0000{{{f{BhBFj}}}b}111{{{f{BFj}}{f{BFj}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BGf}}}Hd}{{{f{BFj}}}{{f{{Db{Hd}}}}}}{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhBFj}}}{{f{Bh{F`{Hd}}}}}}{{{f{BFj}}{f{BhFl}}}Fn}{{{f{Aj}}{f{BhFl}}}Fn}{{{f{BDl}}{f{BhFl}}}Fn}{{{f{BFn}}{f{BhFl}}}Fn}0{{{f{Bf}}BFn}Dh}{cc{}}000{{{F`{{Gl{{F`{Hd}}{F`{BFl}}}}}}}BFj}{{{F`{BGh}}}BFj}{{{F`{{F`{BGh}}}}}BFj}3{BFjAj}444{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{cBFj{{Gd{}{{B`{BGh}}}}}}{cBFj{{Gn{}{{B`{BGh}}}}}}{{{f{Aj}}El}BGf}{{{f{BDl}}}{{f{Aj}}}}{{{f{BhBDl}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BGj}}dd}{{Af{Aj}}}}0{{{f{BDl}}}{{Af{BC`}}}}{{{f{BhAj}}}{{f{BhBFj}}}}{{}El}0000000{ce{}{}}0000000{AjBFj}1{{{f{BFj}}}c{}}{BFjc{}}301{{{f{BGf}}}d}{{{f{Aj}}}d}{{{f{BFj}}}d}{{{f{BFj}}}{{BGn{{BGl{{Jh{Hd}}}}{Jh{BFl}}}}}}{{{f{Aj}}}BH`}{{{f{BDl}}}{{F`{Ad}}}}{{{f{BDl}}{An{{Gl{JfEl}}}}}{{F`{Ad}}}}={{{f{BGf}}}El}{{{f{Aj}}}El}?????{{{F`{Hd}}{F`{BFl}}d}BFj}{{{f{BC`}}{F`{Ad}}Aj{An{{F`{Dh}}}}}BDl}{{{f{BhBH`}}}{{An{c}}}{}}{{{f{BhBH`}}El}{{An{c}}}{}}{{{f{BDl}}c}{{Af{BC`}}}{{Cb{BC`}{{C`{{Af{BC`}}}}}}IjIl}}{{{f{c}}}{}{}}{{{f{Aj}}}BGb}{{{f{BDl}}KdMh}{{Af{BC`}}}}{{BDle}BDl{{L`{Bf}}}{{Gd{}{{B`{c}}}}}}{{{f{Aj}}JfEl}BG`}{{{f{BhBFj}}}b}{{{f{BhAj}}}b}{{{f{BDl}}D`}{{Af{BC`}}}}{{{f{BDl}}}{{Af{BC`}}}}{Aj{{F`{Hd}}}}0{BDlAj}{{{f{BhBDl}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gf{e}}}{}{}}000000000000000{{{f{c}}}Nl{}}0000000{AjAj}{{{f{Aj}}}{{f{BFj}}}}{{{f{Aj}}}{{f{BHb}}}};{ce{}{}}0000000`````{{{f{BFj}}c}Ad{{Cb{{Gl{Hd{f{BFl}}}}}{{C`{An}}}}IjIl}}{{{f{BFj}}c}Ad{{Cb{{Gl{Hd{f{BFl}}}}}{{C`{}}}}IjIl}}{{{f{{Db{{BHd{Hd}}}}}}c}Ad{{Cb{{BHd{Hd}}}{{C`{An}}}}IjIl}}{{{f{{Db{{BHd{Hd}}}}}}c}Ad{{Cb{{BHd{Hd}}}{{C`{}}}}IjIl}}{{{f{{Db{c}}}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gl{HdHd}}}}}}H`}}{{{f{{Db{c}}}}{f{Gj}}eBHf}{{AJb{c}}}{BHhBHj}{{Bd{}{{B`{{Gl{HdHd}}}}}}H`}}{{{f{{l{c}}}}HdHd}{{l{c}}}Bn}{{{f{BHb}}{f{{Db{En}}}}}d}{{{f{BHl}}{f{Aj}}}Ad}{{BHnBHn}BHn}0`{{{f{BI`}}{f{BC`}}{f{Aj}}}{{Af{Ad}}}}{{{f{BI`}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBIb}}Hb}{{An{b}}}}{{{f{BhBId}}{f{Hb}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BIb}}}BIb}{{{f{BId}}}BId}{{{f{BDj}}}BDj}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{c}}}b{}}00{{{f{{Db{c}}}}}Df{{B@d{Df}}}}{{}BDj}{El{{f{c}}}{}}00{El{{f{Bhc}}}{}}00{Elb}00{{{f{BDj}}{f{BDj}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDj}}{f{BhFl}}}Fn}{{{Gl{{f{Df}}El}}}BIb}{cc{}}0{{{Gl{{f{Df}}El}}}BId}1{{eEl}BCn{{AOl{Df}}}{{Bd{}{{B`{{F`{{Gl{Dhc}}}}}}}}}}{{}El}00{ce{}{}}00{BIbAd}{BIdAd}{{{f{Df}}El}BIb}{{{f{Df}}El}BId}{{{F`{Hb}}}BDj}{{{f{BhBIb}}El}Ad}{{{f{BhBId}}El}Ad}{{{f{{Db{BDj}}}}{An{El}}}{{Af{BCn}}}}0{{{f{{Db{BDj}}}}{An{El}}}{{Af{{F`{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gf{e}}}{}{}}00000{{{f{c}}}Nl{}}00<<<{{{f{{Db{BC`}}}}}{{Af{BC`}}}}0`````{{I`I`}I`}{{{f{{Db{BC`}}}}{An{N`}}}{{Af{{Gl{{F`{BAh}}N`}}}}}}{{{f{{AJl{Jf}}}}N`{f{Bh{F`{I`}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BIf}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BIf}}}I`}{{{f{BIh}}{f{BhFl}}}Fn}{cc{}}0{{{f{BIh}}{f{Bhc}}}bAB`}``{{}El}0{ce{}{}}0{{{f{Bh{BIj{BIhce}}}}HdI`{f{BC`}}gi}b{}BIl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gf{e}}}{}{}}000{{{f{c}}}Nl{}}0{{{f{BIn}}N`{f{Bh{F`{I`}}}}}{{Af{b}}}}0{{{f{BIn}}N`{f{Bh{Db{I`}}}}}{{Af{b}}}}055{{{f{BhBIf}}{f{{Db{D`}}}}}b}{{{f{BhBIf}}Lh}b}{{{f{BhBIf}}Jf}b}{{{f{BhBIf}}Lf}b}{{{f{BhBIf}}I`}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Kj{ce}}}}}{{f{e}}}{}BJ`}{{{f{{Kj{c}}}}}BJb{BJdMl}}{{{f{{Kj{ce}}}}}{}MlBJ`}{{{f{{Kj{c}}}}}LhBJf}{{{f{{Kj{ce}}}}}{{f{c}}}MlBJ`}{{{Kj{{Db{{BJh{c}}}}e}}}{{Kj{{Db{c}}e}}}{}BJ`}{{{Kj{{BJh{c}}e}}}{{Kj{ce}}}{}BJ`}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{ALj}}{f{ALj}}c}{{Af{ALj}}}ALl}{{{f{{Kj{c}}}}}{{An{{f{AIn}}}}}{AInMl}}`{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{Nn}}}Nn}{{{f{BJl}}}BJl}{{{f{{Kj{ce}}}}}{{Kj{ce}}}Ml{BJ`A@f}}{{{f{Mj}}}Mj}{{{f{BFb}}}BFb}{{{f{AOn}}}AOn}{{{f{BDh}}}BDh}{{{f{Mh}}}Mh}{{{f{BJn}}}BJn}{{{f{BK`}}}BK`}{{{f{BKb}}}BKb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{c}}}b{}}00000000000000000{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}BA`{BKdMl}BJ`}{AObe{}{{AKj{c}}AIj}}0{{AObADd}e{}{{AKl{c}}AIj}}0{{{f{c}}{f{e}}}BA`{}{}}{{AKbBCd}AKb}{AKbAKb}{{{f{G`}}{f{ADd}}}{{AAn{G`}}}}{{{f{AOn}}}{{f{ADd}}}}```{{}b}{cbBJ`}{{}{{Kj{{Db{c}}}}}{}}{{}{{Kj{Bf}}}}{{}{{Kj{c}}}BKf}{{}{{Kj{BKh}}}}{{}Mj}{{}BFb}{{}AOn}{{}BDh}{{}Mh}`{El{{f{c}}}{}}00{{{f{{Kj{ce}}}}}{{f{c}}}MlBJ`}1111111111{El{{f{Bhc}}}{}}000000000000{{{f{{Kj{c}}}}}{{f{Bf}}}{AInMl}}`{{{Kj{ADfc}}}{{Gf{{Kj{ec}}{Kj{ADfc}}}}}BJ`{ADfIjIl}}{{{Kj{ADfc}}}{{Kj{ec}}}BJ`{ADfIjIl}}{{{f{{Kj{ce}}}}}{{BKj{ce}}}Ml{A@fBJ`}}{Elb}000{{{f{Bh{Kj{ce}}}}}bMlBJ`}111111111{{{f{Nn}}{f{Nn}}}d}{{{f{{Kj{G`}}}}{f{G`}}}d}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BKlMl}BJ`}{{{f{{Kj{BKn}}}}{f{BKn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BFb}}{f{BFb}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{Mh}}{f{Mh}}}d}{{{f{BKb}}{f{BKb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BJl{{Gl{LfLf}}}}`{{BDhc}BDh{{Cb{El{f{AOn}}}{{C`{d}}}}}}{{ALl{f{AOf}}{f{AOf}}}{{Af{AOf}}}}{{{f{Bh{Kj{ACj}}}}}{{Gf{bBL`}}}}{{{f{AKb}}{f{BhFl}}}{{Gf{bAOh}}}}0{{{f{Nn}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BJl}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{{Kj{ce}}}}{f{BhFl}}}{{Gf{bAOh}}}MlBJ`}{{{f{{Kj{ce}}}}{f{BhFl}}}{{Gf{bAOh}}}{BChMl}BJ`}{{{f{{Kj{ce}}}}{f{BhFl}}}{{Gf{bAOh}}}{ADhMl}BJ`}{{{f{Mj}}{f{BhFl}}}Fn}{{{f{BFb}}{f{BhFl}}}Fn}{{{f{AOn}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BDh}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{Mh}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BJn}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BK`}}{f{BhFl}}}{{Gf{bAOh}}}}{{{f{BKb}}{f{BhFl}}}{{Gf{bAOh}}}}`{BLbAKb}{BL`AKb}{BLdAKb}{cc{}}{BLfAKb}{LfNn}22{BLhc{}}{{{f{BLj}}}{{Kj{BLj}}}}{BLl{{Kj{BLn}}}}{{{f{Bf}}}{{Kj{Bf}}}}6{{{AAn{ce}}}{{Kj{ce}}}MlBJ`}{{{f{BKh}}}{{Kj{BKh}}}}{BM`{{Kj{BLj}}}}{Dh{{Kj{Bf}}}}{BMb{{Kj{BKh}}}}{{{f{{Db{c}}}}}{{Kj{{Db{c}}}}}A@f}{{{Kj{Bf}}}{{Kj{{Db{D`}}}}}}{c{{Kj{c}}}{}}{{{f{BLn}}}{{Kj{BLn}}}}{{{AKd{c}}}{{Kj{c}}}{BMdMl}}{{{BHd{c}}}{{Kj{{Db{c}}}}}{}}{{{F`{ce}}}{{Kj{{Db{c}}e}}}{}{BJ`A@f}}{cc{}}0000{{{F`{AOn}}}BDh}1111{{c{An{Gj}}}BMf{}}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMj}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMl}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{e{{Kj{{Db{c}}}}}{}{{Gd{}{{B`{c}}}}}}{{gEl}{{BMn{Jf}}}L`{{Gd{}{{B`{{An{c}}}}}}}{{Gd{}{{B`{{An{e}}}}}}}}0{e{{BMn{Jf}}}{{Gd{}{{B`{{An{d}}}}}}}{{Gd{}{{B`{{An{c}}}}}}}}{{gADd}{{BMn{Jf}}}BHj{{Gd{}{{B`{{An{c}}}}}}}{{Gd{}{{B`{{An{e}}}}}}}}2{e{{Kj{{Db{c}}}}}Ij{{Gn{}{{B`{c}}}}}}{{}{{Kj{c}}}Ml}{c{{Kj{ec}}}BJ`Ml}{{{f{Bf}}}{{Gf{BN`}}}}{{{f{Bf}}c}BNb{}}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BNdMl}BJ`}{{{f{Bh{Kj{ce}}}}}{{An{{f{Bhc}}}}}MlBJ`}{{{f{Bh{Kj{ce}}}}}{{f{Bhc}}}MlBJ`}{{{f{BDh}}}{{F`{{f{Bf}}}}}}{{{f{BDh}}}{{F`{{Gl{{f{Bf}}c}}}}}{}}{{{f{En}}El}Hb}5{{{f{{Kj{ce}}}}{f{Bhg}}}b{BNfMl}BJ`AB`}{{{f{BFb}}{f{Bhc}}}bAB`}{{{f{AOn}}{f{Bhc}}}bAB`}{{{f{Mh}}{f{Bhc}}}bAB`}{{{f{BKb}}{f{Bhc}}}bAB`}{{{f{Nn}}}Lf}{{}b}{cb{A@fBJ`}}{{{f{BDh}}{f{Bf}}}{{An{El}}}}{{{f{{Db{Lf}}}}}{{`{{Bd{}{{B`{El}}}}}}}}{{}El}000000000000`{{{f{BhBJl}}}{{f{BhI`}}}}`{ce{}{}}000000000000{{{Kj{ce}}}{{An{c}}}{}BJ`}{{{Kj{ce}}}{}MlBJ`}{{{Kj{ce}}}{{Gl{e}}}MlBJ`}{{{Kj{BNh}}}Ad}{{{f{BDh}}}d}{{{f{BJl}}}d}{{{f{Nn}}}d}`{{{f{{Kj{ACj}}}}}d}{{{f{c}}}d{}}1{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BNdMl}BJ`}{{{f{BDh}}}El}`1{{{f{ALj}}{f{ALj}}}{{Af{{Gl{ALjALj}}}}}}{{DjDj}{{Af{{Gl{DjDj}}}}}}{{{f{Bh{Kj{ce}}}}}{{f{Bhc}}}{BNjMl}{BJ`A@f}}{{{f{BNl}}}Kb}0{{{f{BNn}}}Kb}```11`{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}d{BKlMl}BJ`}{{BO`El}{{An{El}}}}{{{f{Bf}}c}BOb{}}{c{{Kj{c}}}{}}{{cADdd}AOn{{AOl{Dh}}}}{e{{Kj{c}}}{}{{O`{{f{{BKj{c}}}}}{{C`{c}}}}}}{{ce}{{Kj{ce}}}{}BJ`}{{}{{Kj{{BJh{c}}}}}{}}{c{{Kj{{BJh{e}}c}}}BJ`{}}{El{{Kj{{Db{{BJh{c}}}}}}}{}}{{Elc}{{Kj{{Db{{BJh{e}}}}c}}}BJ`{}}3210`{{}Nn}{{}BJl}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}{{An{BA`}}}{BNdMl}BJ`}{c{{BOd{{Kj{c}}}}}{}}{{ce}{{BOd{{Kj{ce}}}}}{}BJ`}`````{{{f{BNl}}}Kb}0{{{f{{Kj{c}}}}{f{BhBOf}}}b{AInMl}}{{{f{{Kj{ce}}}}{f{{Kj{ce}}}}}dMlBJ`}{{{f{BNn}}KdMh}{{Af{Kb}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Db{D`}}}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}BOh}{{Gf{bBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{F`{D`}}}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{BhDh}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{Bh{Db{BOj}}}}}{{Gf{ElBL`}}}}`{{{f{Bh{Kj{ACj}}}}BOl}{{Gf{I`BL`}}}}`{{{f{AJf}}ElEl}AJf}0{{{f{{Kj{c}}}}}{{An{{f{AIn}}}}}{AInMl}}{{{f{BOn}}D`}Kb}{{LfLf}BJl}`{{{f{{Kj{ce}}}}}ElMlBJ`}>>{{{f{Nn}}}{{An{Lf}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AOb{{Gf{eg}}}{}{{AKj{c}}AIj}{}}0{{AObADd}{{Gf{eg}}}{}{{AKl{c}}AIj}{}}0{c{{Gf{e}}}{}{}}00{{{Kj{{Db{c}}e}}}{{Gf{{Kj{{BHd{c}}e}}}}}{}BJ`}11111111111111111111111{{BO`El}{{Gf{ElAKb}}}}{c{{Gf{{Kj{c}}C@`}}}{}}{{ce}{{Gf{{Kj{ce}}C@`}}}{}BJ`}{{}{{Gf{{Kj{{BJh{c}}}}C@`}}}{}}{c{{Gf{{Kj{{BJh{e}}c}}C@`}}}BJ`{}}10{c{{Gf{{BOd{{Kj{c}}}}C@`}}}{}}{{ce}{{Gf{{BOd{{Kj{ce}}}}C@`}}}{}BJ`}{{{f{BDh}}{f{{Db{El}}}}}{{Gf{BDhAKb}}}}{{{Kj{ce}}}{{Gf{c{Kj{ce}}}}}{}BJ`}{{{f{c}}}Nl{}}000000000000{{{Kj{ce}}}cA@fBJ`}`{{{f{BOn}}D`}Kb}{ce{}{}}000000000000{{{f{{Kj{ce}}}}}ElMlBJ`}``{{AOn{C@b{DhDh}}}AOn}{{BDh{C@b{DhDh}}}BDh}{{{f{Bh{Kj{ACj}}}}{f{{Db{D`}}}}}{{Gf{ElBL`}}}}{{{f{Bh{Kj{ACj}}}}{f{{Db{C@d}}}}}{{Gf{ElBL`}}}}```````{{c{An{Gj}}}BMf{}}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMj}{{{BMh{Jf}}{BMh{D`}}{An{Gj}}}BMl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{C@f{An{{f{ADd}}}}}{{Gf{{BMn{Jf}}AKb}}}}{cc{}}{{}El}{ce{}{}}{{{f{C@f}}}d}{ElC@f}{{{f{C@f}}}{{f{{Db{Jf}}}}}}{{{f{BhC@f}}{f{G`}}}b}{{{f{BhC@f}}}b}{{{f{BhC@f}}{f{{Db{{AAn{G`}}}}}}}b}1{{{f{BhC@f}}{An{{f{G`}}}}}b}{C@f{{C@h{Jf}}}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}:`{{{f{c}}h}b{}}{{{f{C@j}}}{{f{ADf}}}}{{{f{BhC@j}}}{{AAn{G`}}}}{{{f{BhC@j}}}{{f{BhADf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@j}}}C@j}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{C@j}}}{{f{ADd}}}}{{}C@j}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhC@j}}El}b}{{{f{C@j}}{f{BhFl}}}{{Gf{bAOh}}}}{cc{}}{{}El}{ce{}{}}{{{f{C@j}}}El}{ElC@j}{{{f{BhC@j}}}b}70{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{C@j}}}{{An{{f{C@l}}}}}}7```````{{{f{AJf}}ElEl}AJf}0`{{}b}0{{}d}``{{eElEl}{{C@n{Jf}}}{{L`{Bf}}}{{Bd{}{{B`{c}}}}}}{{eElEl}{{AJl{Jf}}}{{L`{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{I`b}`{{{f{c}}h}b{}}{{{f{Kb}}}Hb}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Kb}}}Kb}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{Kb}}}{{f{Df}}}}{cc{}}{{}El}{ce{}{}}{{Kb{f{Bf}}}Ad}{{DfHb}Kb}`{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}{{{f{BhKb}}Hb}b}{{{f{Kb}}}{{f{Hb}}}}7{{{An{Kd}}Df}Kb}``````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BCn}}}BCn}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{BCn}}{f{Bf}}}d}{{}BCn}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{c}}{f{c}}}{{Af{b}}}CA`}{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{BhFl}}}Fn}{{{f{CAb}}}BCn}{BDhBCn}{CAbBCn}{cc{}}{{{f{BDh}}}BCn}{{{f{{Db{Ad}}}}}BCn}{{{f{BDj}}}BCn}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{eBCn{{AOl{Mb}}}{{Gd{}{{B`{c}}}}}}{{{f{BCn}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BCn}}El}{{An{{Gl{{f{B@f}}{f{Df}}}}}}}}{{{f{BhBCn}}El}{{An{{Gl{{f{BhB@f}}{f{BhDf}}}}}}}}{{{f{BCn}}{f{Bf}}}{{An{Mb}}}}{{{f{BCn}}{f{Bf}}}{{An{{Gl{El{f{B@f}}{f{Df}}}}}}}}{{{f{CAd}}}{{F`{{f{Bf}}}}}}{{{f{BCn}}}{{F`{{f{Bf}}}}}}{{{f{{CA`{}{{CAf{c}}}}}}}{{F`{{Gl{{f{Bf}}c}}}}}{ADhBKl}}{{{f{BCn}}}{{F`{{Gl{{f{Bf}}c}}}}}{}}{{{f{BCn}}{f{Bhc}}}bAB`}{{{f{CAd}}{f{Bf}}}{{An{El}}}}{{{f{BCn}}{f{Bf}}}{{An{El}}}}{{}El}{{{f{BhBCn}}ElB@fDf}{{Af{{An{Df}}}}}}{ce{}{}}{BCnc{}}{{{f{BCn}}}d}{{{f{BCn}}}{{`{{Bd{}{{B`{{Gl{{f{B@f}}{f{Df}}}}}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBCn}}}{{`{{In{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{Mb}}}}}}}}{{{f{BCn}}}{{`{{In{}{{B`{{f{B@f}}}}}}}}}}{{{f{BCn}}}El}{{{f{BhBCn}}BCn}b}{{{f{BhBCn}}{f{BCn}}}b}{{}BCn}{{{f{BCn}}ElB@fDf}{{Af{BCn}}}}{{{f{BhBCn}}{f{Bf}}}{{An{Df}}}}{{{f{BhBCn}}{f{Bf}}B@f}{{An{B@f}}}}{{{f{BhBCn}}El}b}{{{f{BhBCn}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBCn}}ElDf}{{An{Df}}}}4{{{f{BhBCn}}El}{{An{{Gl{B@fDf}}}}}}{{{f{BCn}}AMf}BDh}{{{f{c}}}e{}{}}{{{f{BhBCn}}{f{BCn}}}{{Af{d}}}}{c{{Gf{e}}}{}{}}{{{f{BCn}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BCn}}El}{{Af{{Gl{{f{B@f}}{f{Df}}}}}}}}{{{f{BCn}}{f{Bf}}}{{Af{Mb}}}}{{{f{BCn}}{f{Bf}}}{{Af{{Gl{El{f{B@f}}{f{Df}}}}}}}}{{{f{BhBCn}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{CAd}}{f{Bf}}}{{Af{El}}}}6{{{f{c}}}Nl{}}{ce{}{}}{ElBCn}{{{f{BhBCn}}B@fDf}{{An{Df}}}}`````````````````{{{f{c}}h}b{}}0{{{f{Bf}}{F`{En}}{f{ADd}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{ADd}}{An{{f{CAh}}}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`K`}{}}{{{f{Ad}}c}e{A`K`}{}}{{AdAd}c{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BNh}}Dl}Dn}0{{{f{BNh}}}{{Af{Dn}}}}0`{{{f{Ad}}El}{{f{En}}}}{{{f{BNh}}}{{f{ADf}}}}{{{f{BhBNh}}}{{f{BhADf}}}}0{{{f{Ad}}}Dj}{{{f{BhBNh}}}{{f{Bh{l{c}}}}}Bn}{{{f{BNh}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BNh}}}}{{{f{BhBNh}}}{{Af{El}}}}0{{{f{BhAd}}}{{Af{El}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AJn}}}}}}{{{f{BNh}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Ff}}}}}}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{BNh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{ALj}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BNh}}}Ej}{{{f{Ad}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BNh}}}{{f{{F`{En}}}}}}{{{f{BhBNh}}}{{f{Bh{F`{En}}}}}}{{{f{BhAd}}}{{f{Bh{F`{En}}}}}}{{{f{Ad}}}Ad}{{{f{Jb}}}Jb}1{{{f{BNh}}}{{Kj{BNh}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ih}}}}}}{{}Ad}{El{{f{c}}}{}}000{{{f{Ad}}}{{f{c}}}{}}{El{{f{Bhc}}}{}}000{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`K`}{}}{{{f{Ad}}c}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}{{Af{Kd}}}}{Elb}000{{{f{BNh}}}Ad}0{{{f{BNh}}}{{f{Df}}}}0{{{f{Jb}}{f{Jb}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}c}{{Af{Ff}}}AOj}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}0{{{f{Ad}}c}eAOj{}}{{{f{Ad}}{f{Bf}}}c{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}HbEl}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKf}}}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}{{{f{BNh}}}{{AKd{Mb}}}}0{{{f{Ad}}AFh}{{Af{Ad}}}}{{{f{BNh}}{f{Ff}}}{{Af{Ad}}}}{{{f{Jb}}{f{BhFl}}}Fn}{{{f{Ad}}{f{BhFl}}}Fn}0{{{f{Ad}}}Dh}{cc{}}000{{{l{c}}}AdBn}{{{f{Bf}}{f{{Db{Hb}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{Hb}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}En}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{Df}}}Ad}{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{cAd{{Gd{}{{B`{{An{Kd}}}}}}}}{cAd{{Gd{}{{B`{d}}}}}}{cAd{{Gd{}{{B`{{An{Lf}}}}}}}}{cAd{{Gd{}{{B`{Lh}}}}}}{cAd{{Gd{}{{B`{{f{Lh}}}}}}}}{cAd{{Gd{}{{B`{{An{Hn}}}}}}}}{cAd{{Gd{}{{B`{{f{Hn}}}}}}}}{cAd{{Gd{}{{B`{{f{Kd}}}}}}}}{cAd{{Gd{}{{B`{Hn}}}}}}{cAd{{Gd{}{{B`{{An{Lh}}}}}}}}{cAd{{Gd{}{{B`{Lf}}}}}}{cAd{{Gd{}{{B`{{f{I`}}}}}}}}{cAd{{Gd{}{{B`{{f{Bf}}}}}}}}{cAd{{Gd{}{{B`{Kd}}}}}}{cAd{{Gd{}{{B`{I`}}}}}}{cAd{{Gd{}{{B`{{An{Jf}}}}}}}}{cAd{{Gd{}{{B`{{An{d}}}}}}}}{cAd{{Gd{}{{B`{Dh}}}}}}{cAd{{Gd{}{{B`{Jf}}}}}}{cAd{{Gd{}{{B`{{f{Jf}}}}}}}}{cAd{{Gd{}{{B`{{f{Lf}}}}}}}}{cAd{{Gd{}{{B`{{An{I`}}}}}}}}{cAd{{Gd{}{{B`{{f{d}}}}}}}}{{{f{Bf}}{F`{Kd}}}Ad}{{{f{Bf}}{F`{Lf}}}Ad}{{{f{Bf}}{F`{Lh}}}Ad}{{{f{Bf}}{F`{Jf}}}Ad}{{{f{Bf}}{F`{I`}}}Ad}{{{f{Bf}}{F`{Hn}}}Ad}{{{f{Bf}}{F`{Ln}}}Ad}{{{f{Bf}}El{f{Df}}}Ad}{{{f{Ad}}ElEl}Ad}{{{f{BNh}}El}{{Af{Hb}}}}{{{f{Ad}}}El}{{{f{Ad}}}Hf}{{{f{Ad}}}Ad}{{{f{BNh}}}{{An{{Kn{Kl}}}}}}0{{{f{BNh}}El}{{An{{f{Hj}}}}}}0{{{f{BNh}}ElEl}{{An{{f{Hj}}}}}}0{{{f{BNh}}El}Hb}0{{{f{Ad}}c}{{Af{Ff}}}AOj}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}0{{{f{Ad}}{f{Bf}}}c{}}3{{{f{BNh}}}d}{{{f{Jb}}{f{Bhc}}}bAB`}{{{f{Ad}}{An{El}}}Ad}{{{f{Ad}}}{{Af{{f{BAl}}}}}}{{{f{Ad}}}{{Af{{f{BAn}}}}}}{{{f{Ad}}}{{Af{{f{BB`}}}}}}{{{f{Ad}}}{{Af{{f{BAj}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}El}000{ce{}{}}000{AdBC`}1{BD`Ad}{AdAd}=={{{f{Ad}}}{{Af{Ff}}}}000{{{f{BNh}}}Ff}0{{}d}00{{{f{Ad}}}Jb}{{{f{Ad}}}CAj}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BNh}}}El}{{{f{Ad}}}El}{{{f{BNh}}El}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}AOj}{{{f{Ad}}{f{Bf}}}c{}}210{{{f{Ad}}}{{Af{{An{c}}}}}K`}{{{f{BNh}}}{{Af{Kb}}}}0{{{f{BNh}}}{{An{Kd}}}}0{{{f{Ad}}}Kb}1122322{{{f{Ad}}c}e{A`K`}{}}{{AdAd}c{}}{{Adc}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}>>={{{f{BNh}}}{{Af{El}}}}0{{{f{BNh}}}{{f{Bf}}}}{{{f{Bf}}{Lj{I`}}}Ad}{{{f{Bf}}c}Ad{{L`{{Db{Lh}}}}}}{{{f{Bf}}{Lj{Lh}}}Ad}{{{f{Bf}}c}Ad{{L`{{Db{{AKd{Bf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Lf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{d}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Ln}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Hn}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Hb}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{Lj{Lf}}}Ad}{{{f{Bf}}c}Ad{{L`{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Kd}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{{AKd{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}{Lj{Jf}}}Ad}{{{f{Bf}}c}Ad{{L`{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Jf}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Lh}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Dh}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{I`}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{I`}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{d}}}}}}}}{{{f{Bf}}c}AdBD`}{{{f{Bf}}c}Ad{{L`{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Lf}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Kd}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{{AKd{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Jf}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{AKd{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{Ln}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{L`{{Db{{F`{D`}}}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BNh}}ElEl}Ad}{{{f{Bf}}El}Ad}{{{f{BhCAj}}}{{An{c}}}{}}{{{f{Ad}}c}{{Af{Ff}}}AOj}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}1{{{f{Ad}}c}eAOj{}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BNh}}}El}`{{{f{Ad}}}CAl}{{{f{Ad}}}{{Af{Kb}}}}{{{f{BNh}}KdMh}{{Af{Kb}}}}0{{{f{BNh}}}Ad}{{Adc}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`K`}{}}{{{f{BhBNh}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Db{Jf}}}}}{{Af{Ad}}}}6{JbJb}{{{f{BNh}}{f{Cb}}Mj}{{Af{Ad}}}}0{{{f{Ad}}Kddd{An{I`}}}{{Af{Ad}}}}{{{f{Ad}}Eldd{An{I`}}}{{Af{Ad}}}}{{{f{Ad}}El}Ad}{{{f{BhAd}}Jb}b}{{{f{BNh}}Jf}Ad}{{{f{BhBNh}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{I`}}}Ad}{{{f{CAj}}}{{Gl{El{An{El}}}}}}{{{f{BNh}}JfEl}Ad}{{{f{Ad}}JfEl}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BNh}}Dl}{{Af{Ad}}}}0{{{f{BNh}}Jf}{{Gl{AdAd}}}}{{{f{Ad}}Jf}{{Gl{AdAd}}}}{{{f{BNh}}D`}{{An{Kd}}}}0{{{f{BNh}}D`}{{Af{Kb}}}}0{{{f{Ad}}}{{Af{{f{Nh}}}}}}{{{f{Ad}}El}{{Af{{AKd{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`K`}{}}{{Adc}e{A`K`}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}}{{Af{c}}}K`}{{{f{BNh}}}{{Af{Kb}}}}0{{{f{Ad}}}{{Af{Kb}}}}{{{f{Ad}}{An{El}}}Ad}{{{f{BNh}}{f{Dn}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Db{Hd}}}}}{{Af{Ad}}}}{{{f{BNh}}{f{{Db{Hd}}}}}Ad}{{{f{BNh}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{Hd}}}}}Ad}{{{f{Ad}}ElAMf}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AKd{Ad}}}}{{{f{c}}}Dh{}}{{AdAd}{{Af{Ad}}}}{c{{Gf{e}}}{}{}}00{{{Gl{{f{AOn}}En}}}{{Af{Ad}}}}1{{{Gl{{f{Bf}}En}}}{{Af{Ad}}}}{{{Gl{{f{Bf}}{F`{En}}}}}{{Af{Ad}}}}{{{Gl{{f{AOn}}{F`{En}}}}}{{Af{Ad}}}}44445{{{f{BhAd}}{Ib{c}}}dBn}6{{{f{c}}}Nl{}}000{{{f{Ad}}}{{Af{{f{BAf}}}}}}{{{f{Ad}}}{{Af{{f{AOf}}}}}}{{{f{Ad}}}{{Af{{f{BAh}}}}}}{{{f{Ad}}}{{Af{{f{BAd}}}}}}{{{f{BNh}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BNh}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BNh}}D`}{{An{Kd}}}}0{{{f{BNh}}D`}{{Af{Kb}}}}0{ce{}{}}000{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`K`}}{{{f{Ad}}{f{Ff}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}{{{f{Cf}}}Ad}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{cc{}}{{}El}{ce{}{}}{{{CAn{Ad}}}Cf}{{{f{BhCf}}{f{BhEn}}}b}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}5{{{f{BhCf}}{f{BhEn}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{CB`{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{CBb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BJj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BJj}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CBd}}}CBd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{c}}}b{}}0{{}CBd}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{CBd}}{f{CBd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CBd}}{f{BhFl}}}Fn}{cc{}}{{{f{CBd}}{f{Bhc}}}bAB`}{{}El}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gf{e}}}{}{}}0{{{f{c}}}Nl{}}3``````````{{{f{c}}h}b{}}05{{{F`{BC`}}}{{Af{BC`}}}}{c{{Af{BC`}}}{{Gd{}{{B`{BC`}}}}}}{cBC`{{Gd{}{{B`{BC`}}}}}}{c{{An{BC`}}}{{Gd{}{{B`{BC`}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{e}}}}{AKd{{l{g}}}}}}}BnBnBn}{{{f{BhCBf}}}d}{c{{Af{Df}}}{{Gd{}{{B`{{f{Hb}}}}}}}}{c{{Af{{Gl{DfEl}}}}}{{Gd{}{{B`{{f{Hb}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gj}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{CBh}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{CBj}}}CBj}{{{f{{CBl{ec}}}}}{{CBl{ec}}}A@f{A@f{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{c}}}b{}}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Gl{{AKd{{l{c}}}}{AKd{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gl{AdAd}}}}{CBfe{}{{CBn{c}}}}{CBfe{}{{CC`{c}}}}{c{{Af{BC`}}}{{Gd{}{{B`{{f{BC`}}}}}}}}{cBC`{{Gd{}{{B`{{f{BC`}}}}}}}}{{{f{BhCBf}}{f{c}}}dBKl}{{}CBj}{{{f{{CCb{c}}}}}{{f{e}}}{}{}}{El{{f{c}}}{}}0{{{f{{AJh{c}}}}}{{f{e}}}{}{}}11{El{{f{Bhc}}}{}}{{{f{Bh{AJh{c}}}}}{{f{Bhe}}}{}{}}111{Elb}000{cBCn{{Gd{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Gd{}{{B`{{f{Df}}}}}}}}{{{f{{CCb{Ad}}}}{f{{CCb{Ad}}}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{CBj}}{f{BhFl}}}Fn}{{{f{BhCBf}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}000{g{{Gf{ic}}}{}{}{{Gh{c}{{B`{e}}}}}{}}{c{{AJh{{l{e}}}}}{{Gd{}{{B`{}}}}}n}{c{{AJh{Ff}}}{{Gd{}{{B`{d}}}}}}{eCC`{}{{Gd{}{{B`{c}}}}}}21{c{{AJh{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{c{{AJh{Ff}}}{{H`{}{{B`{d}}}}}}{c{{AJh{{l{e}}}}}{{H`{}{{B`{}}}}}n}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{Df}}{f{Df}}CBj}{{An{Df}}}}{{{f{AMh}}{f{AMh}}}AMh}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CCb{Ad}}}}{f{Bhc}}}bAB`}{{{f{CBj}}{f{Bhc}}}bAB`}`{{}El}000{ce{}{}}000{{{AJh{c}}}c{}}1{BEl{{F`{c}}}{}}{c{{F`{{CCf{CCd}}}}}{}}{c{{F`{Dh}}}{}}{{{f{CBh}}}{{`{{Bd{}{{B`{CBh}}}}}}}}{{{f{CBh}}}El}{LnHb}1{c{{AJh{c}}}{}}{{eEl}{{CBl{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CBl{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fd}}`{{{f{{CBl{ec}}}}}{{Gl{El{An{El}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CBh}}JfEl}CBh}{{{f{{Db{c}}}}JfEl}{{f{{Db{c}}}}}{}}{{{f{c}}El}{{F`{c}}}CBh}0{{{f{CBh}}Jf}{{Gl{CBhCBh}}}}{{{f{BC`}}Eld}{{F`{BC`}}}}{{{f{c}}}e{}{}}0{{CBfEl}{{CBl{CBfc}}}{}}{c{{Gf{e}}}{}{}}000{{{f{Df}}{f{Df}}}{{Af{Df}}}}1111{{{f{c}}}Nl{}}000{ce{}{}}000{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{F`{c}}}}}}}{{Gl{El{F`{El}}}}}{}}{{{f{BC`}}}{{`{{Bd{}{{B`{BC`}}}}}}}}{{{f{{Db{c}}}}}{{AJb{Hd}}}{{L`{{Db{Nn}}}}IjIl}}{{{f{{Db{e}}}}}{{F`{c}}}{IjIlCd}{{L`{{Db{c}}}}}}{{{f{Ad}}}{{F`{Ad}}}}","D":"JDl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5473],[5,"ListType",1537],[5,"ChunkedArray",40],[10,"PolarsNumericType",1537],[10,"Num",5474],[10,"ToPrimitive",5475],[5,"Series",4823],[8,"PolarsResult",4051,5476],[10,"NumOpsDispatchInner",5261,5477],[6,"GroupsProxy",3645,5478],[5,"BooleanType",1537],[6,"Option",5479],[17,"Item"],[8,"ArrayBox",5237],[10,"Iterator",5480],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1537],[10,"PolarsDataType",1537],[17,"Output"],[10,"Fn",5481],[10,"Copy",5482],[5,"AmortSeries",5237],[10,"FnMut",5481],[5,"Float32Type",1537],[5,"Float64Type",1537],[5,"BinaryType",1537],[1,"u8"],[1,"slice"],[5,"StringType",1537],[6,"DataType",1537,5483],[5,"String",5484],[8,"ListChunked",1537],[5,"SortOptions",1451],[8,"IdxCa",1537,5485],[5,"SortMultipleOptions",1451],[8,"BinaryChunked",1537],[10,"PolarsIntegerType",1537],[6,"CastOptions",731],[10,"NumOpsDispatchCheckedInner",5286,5486],[8,"ChunkLenIter",40],[1,"usize"],[8,"ArrayRef",4051,5487],[5,"Vec",5488],[5,"MetadataProperties",820],[10,"DoubleEndedIterator",5489],[8,"BooleanChunked",1537],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5490],[8,"Result",5490],[10,"Array",5487],[17,"Array"],[10,"IntoIterator",5491],[6,"Result",5492],[10,"FallibleIterator",5493],[5,"Bitmap",5494],[1,"tuple"],[10,"IntoParallelIterator",5495],[10,"TrustedLen",5496],[6,"AnyValue",1537,5497],[8,"IdxSize",4051,5498],[5,"MetadataFlags",820],[5,"ObjectType",1537],[10,"PolarsObjectSafe",1110],[10,"PolarsObject",1110],[1,"f32"],[1,"u64"],[5,"Metadata",820],[5,"RwLockWriteGuard",5499],[5,"Int128Type",1537],[8,"DecimalChunked",1537,5500],[10,"Send",5482],[10,"Sync",5482],[10,"ExactSizeIterator",5501],[10,"PolarsFloatType",1537],[6,"IsSorted",4823,5502],[10,"PolarsIterator",781],[1,"i64"],[5,"Iter",5503],[1,"fn"],[5,"Map",5504],[6,"ChunkedArrayLayout",40],[10,"NumCast",5475],[5,"Scalar",4716],[1,"f64"],[6,"MetadataReadGuard",820,5505],[5,"IMMetadata",820,5506],[5,"Arc",4051,5507],[10,"MetadataTrait",820,5508],[5,"RwLockReadGuard",5499],[10,"AsRef",5509],[5,"UInt64Type",1537],[5,"UInt32Type",1537],[1,"u32"],[1,"i32"],[5,"Range",5510],[5,"Int32Type",1537],[1,"i128"],[5,"Int64Type",1537],[5,"Field",1537,5511],[10,"ParallelIterator",5495],[10,"IndexedParallelIterator",5495],[6,"QuantileInterpolOptions",4051,5512],[5,"RollingOptionsFixedWindow",4051,5513],[10,"Sized",5482],[17,"IsStruct"],[5,"RandomState",5514],[5,"BytesHash",5515],[8,"ArrayView1",5516],[8,"Array2",5516],[8,"StringChunked",1537],[6,"Either",5517],[5,"TypeId",5518],[5,"NullableIdxSize",4051,5498],[10,"FnOnce",5481],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",441,5519],[10,"ChunkedBuilder",469],[5,"BinViewChunkedBuilder",469,5520],[10,"ViewType",5521],[5,"BooleanChunkedBuilder",469,5522],[5,"NullChunkedBuilder",469,5523],[5,"PrimitiveChunkedBuilder",469,5524],[10,"Clone",5525],[8,"StringChunkedBuilder",469,5520],[8,"BinaryChunkedBuilder",469,5520],[10,"NewChunkedArray",469],[5,"AnonymousListBuilder",577,5526],[5,"AnonymousOwnedListBuilder",577,5526],[5,"ListBooleanChunkedBuilder",577,5527],[5,"ListPrimitiveChunkedBuilder",577,5528],[10,"ListBuilderTrait",577],[5,"ListStringChunkedBuilder",577,5529],[5,"ListBinaryChunkedBuilder",577,5529],[5,"ListNullChunkedBuilder",577,5530],[5,"Box",5531],[10,"Hasher",5532],[10,"ChunkedCollectInferIterExt",761],[10,"ChunkedCollectIterExt",761],[10,"Canonical",775],[10,"ChunkedCollectParIterExt",777],[10,"FromParIterWithDtype",777],[5,"BooleanArray",5533],[5,"BoolIterNoNull",781],[5,"SomeIterator",781],[5,"MetadataEnv",820,5534],[10,"MetadataCollectable",820,5535],[5,"Iter",5536],[5,"IterNames",5536],[5,"File",5537],[5,"Mutex",5538],[6,"MetadataMerge",820],[5,"RwLock",5499],[5,"ObjectArray",1110],[6,"ArrowDataType",1537,5539],[10,"Any",5518],[10,"Debug",5490],[5,"BitmapIter",5540],[6,"ZipValidity",5541],[8,"ObjectValueIter",1110],[5,"ObjectChunkedBuilder",1187],[8,"ObjectChunked",1537],[10,"AnonymousObjectBuilder",1210],[5,"ObjectRegistry",1210],[8,"ObjectConverter",1210],[8,"BuilderConstructor",1210],[17,"FuncRet"],[10,"ChunkApply",1238],[10,"ChunkApplyKernel",1238],[10,"ChunkSort",1238],[10,"ChunkUnique",1238],[10,"ChunkCast",1238],[6,"FillNullStrategy",1238],[10,"ChunkCompare",1238],[10,"ChunkExplode",1238],[5,"OffsetsBuffer",5542],[10,"ChunkFillNullValue",1238],[10,"ChunkFilter",1238],[10,"ChunkFull",1238],[10,"ChunkFullNull",1238],[10,"ChunkAnyValue",1238],[10,"IsFirstDistinct",1238],[10,"IsLastDistinct",1238],[10,"ChunkAgg",1238],[10,"ChunkQuantile",1238],[10,"ChunkExpandAtIndex",1238],[10,"ChunkReverse",1238],[10,"ChunkRollApply",1238],[10,"ChunkSet",1238],[10,"ChunkShift",1238],[10,"ChunkShiftFill",1238],[10,"ChunkVar",1238],[10,"ChunkTake",1238],[10,"ChunkTakeUnchecked",1238],[10,"ChunkBytes",1238],[10,"ChunkZip",1238],[10,"BinaryFnMut",1364],[10,"StaticArray",1537,5543],[10,"TernaryFnMut",1364],[10,"Error",5544],[10,"UnaryFnMut",1364],[5,"PrimitiveArray",5545],[6,"SearchSortedSide",1404],[10,"SlicedArray",4051,5546],[5,"NoNull",5322],[5,"RowsEncoded",5547],[5,"BinaryArray",5548],[8,"BinaryOffsetChunked",1537],[5,"NaiveDateTime",5549],[6,"PolarsError",4051,5476],[6,"Cow",5550],[8,"Float32Chunked",1537],[8,"Float64Chunked",1537],[10,"ArrayFromIter",1537,5551],[10,"ArrayFromIterDtype",1537,5551],[10,"AsRefDataType",1537,5483],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5552],[10,"From",5509],[5,"CategoricalChunked",3005,5553],[10,"CategoricalMergeOperation",3005,5554],[10,"LogicalType",1537,5555],[5,"Logical",1537,5555],[5,"OwnedObject",1537,5497],[6,"UnknownKind",1537,5483],[5,"CompatLevel",1537,5483],[6,"TimeUnit",1537,5556],[5,"UInt8Type",1537],[5,"UInt16Type",1537],[5,"Int8Type",1537],[5,"Int16Type",1537],[5,"DateType",1537],[5,"TimeType",1537],[5,"BinaryOffsetType",1537],[5,"DecimalType",1537],[5,"DatetimeType",1537],[5,"DurationType",1537],[5,"CategoricalType",1537],[6,"ArrowTimeUnit",1537],[10,"ArrayCollectIterExt",4051,5551],[8,"Utf8ViewArray",5521],[8,"UInt32Chunked",1537],[5,"Error",5490],[10,"NumericNative",1537],[10,"Into",5509],[5,"ArrowField",4051],[6,"IntegerType",5557],[6,"PrimitiveType",5558],[10,"Borrow",5559],[8,"SmartString",1537],[10,"NoOption",5560],[10,"GetAnyValue",1537,5497],[8,"Int128Chunked",1537],[10,"IntoScalar",1537,5561],[6,"Ordering",5562],[6,"PhysicalType",5557],[8,"UInt8Chunked",1537],[8,"UInt16Chunked",1537],[8,"UInt64Chunked",1537],[8,"Int8Chunked",1537],[8,"Int16Chunked",1537],[8,"Int32Chunked",1537],[8,"Int64Chunked",1537],[8,"PlIdHashMap",1537,5485],[5,"CategoricalChunkedBuilder",3005,5563],[5,"GlobalRevMapMerger",3005,5554],[6,"RevMapping",3146,5564],[6,"CategoricalOrdering",3146,5564],[5,"CatIter",3005,5553],[1,"u128"],[5,"DataFrame",3342],[5,"StringCacheHolder",3201,5565],[5,"ErrString",3230,5476],[6,"PolarsWarning",3230,5566],[10,"Display",5490],[6,"FloatFmt",3310],[1,"char"],[5,"Schema",4742],[10,"IntoSeries",4823,5567],[6,"NullStrategy",3342],[6,"UniqueKeepStrategy",3342],[8,"PlHashSet",1537,5568],[5,"ArrowSchema",4051,5569],[5,"Row",3904],[5,"GroupBy",3645],[5,"RangeTo",5510],[5,"RangeToInclusive",5510],[5,"RangeInclusive",5510],[5,"RangeFull",5510],[5,"RangeFrom",5510],[5,"RecordBatchIter",3342],[5,"PhysRecordBatchIter",3342],[10,"IntoVec",5322],[10,"RangeBounds",5510],[8,"SchemaRef",4742],[6,"IndexOrder",4051,5570],[8,"RecordBatch",5571],[5,"StructArray",5572],[5,"UnpivotArgs",3615],[5,"GroupsIdx",3645,5478],[8,"IdxVec",5573],[6,"GroupByMethod",3645],[5,"SlicedGroups",3645,5478],[5,"GroupsProxyParIter",3645,5478],[10,"UnindexedConsumer",5574],[6,"GroupsIndicator",3645,5478],[8,"IdxItem",3645,5478],[10,"IntoGroupsProxy",3645,5575],[5,"Copied",5576],[5,"Zip",5577],[5,"GroupsProxyIter",3645,5478],[8,"GroupsSlice",3645,5478],[1,"array"],[8,"DynArgs",4051,5578],[10,"IsFloat",5579],[10,"NativeType",5580],[10,"AggList",3888,5581],[10,"TakeExtremum",3888],[10,"PhysicalAggExpr",3901],[6,"AnyValueBuffer",3904,5582],[6,"AnyValueBufferTrusted",3904,5582],[5,"IdHasher",4003,5583],[5,"IdxHash",4003,5583],[5,"HashMap",5584],[10,"BuildHasher",5532],[10,"VecHash",4003,5585],[10,"Allocator",5586],[5,"BorrowedFd",5587],[10,"AsFd",5587],[10,"AsRawFd",5588],[20,"MaybeUninit",5589],[10,"NumOpsDispatchChecked",4051,5486],[5,"ChunkId",4051,5498],[5,"RollingVarParams",4051,5578],[5,"RollingQuantileParams",4051,5578],[6,"NonExistent",4051,5590],[10,"Ord",5562],[10,"Default",5591],[5,"CStr",5592],[5,"Weak",5507],[10,"PartialEq",5562],[10,"Scalar",5593],[5,"Error",5594],[5,"Utf8Error",5595],[5,"TryReserveError",5596],[6,"Error",5597],[1,"never"],[5,"OsStr",5598],[5,"PathBuf",5599],[5,"Path",5599],[5,"OsString",5598],[5,"CString",5600],[10,"ToOwned",5550],[10,"FromData",4638,5601],[5,"Buffer",5602],[10,"FromDataUtf8",4638,5601],[10,"FromDataBinary",4638,5601],[5,"ListArray",5603],[6,"Ambiguous",4051,5590],[10,"NamedFromOwned",4051,5604],[10,"PartialOrd",5562],[10,"Hash",5532],[10,"SeriesTrait",4823,5502],[10,"CloneToUninit",5525],[10,"ChunkAggSeries",4051,5605],[10,"QuantileAggSeries",4051,5606],[10,"IndexToUsize",4051,5607],[10,"NamedFrom",4051,5604],[5,"Pin",5608],[5,"Request",5544],[5,"BorrowedCursor",5609],[5,"IoSliceMut",5610],[6,"SeekFrom",5610],[10,"VarAggSeries",4051,5611],[5,"AllocError",5586],[5,"BTreeMap",5612],[5,"IoSlice",5610],[5,"AnonymousBuilder",4644,5613],[5,"Offsets",5542],[5,"MutableNullArray",4667,5614],[5,"MutableBitmap",5615],[5,"Utf8Array",5616],[10,"SchemaNamesAndDtypes",4742],[8,"ArrowSchemaRef",5569],[10,"IndexOfSchema",4742],[17,"DataType"],[8,"Metadata",5539],[5,"SeriesIter",4823,5617],[8,"SeriesPhysIter",4823,5617],[5,"Rc",5618],[10,"LhsNumOps",5261,5477],[10,"NumOpsDispatch",5261,5477],[6,"NullBehavior",5294],[10,"CustomIterTools",5322,5619],[10,"Container",5322],[5,"SuperTypeOptions",5322,5620],[5,"TrustMyLength",5322,5496],[10,"FromIteratorReversed",5621],[10,"FromTrustedLenIterator",5322,5619],[5,"Wrap",5322],[5,"LazyCompact",5622],[5,"SmartString",5623],[8,"FillNullLimit",1238],[10,"InitHashMaps",1537],[10,"InitHashMaps2",1537],[5,"TrueT",1537],[15,"IO",3295],[15,"Context",3295],[15,"Count",3885],[15,"Slice",3886],[10,"ListFromIter",4051],[10,"Utf8FromIter",4711],[10,"BinaryFromIter",4711],[6,"BitRepr",4823]],"r":[[0,5583],[4,5565],[13,5565],[16,5565],[32,5565],[441,5519],[469,5520],[470,5520],[471,5522],[474,5523],[475,5524],[476,5520],[577,5526],[578,5526],[579,5529],[580,5527],[582,5530],[583,5528],[584,5529],[825,5506],[831,5535],[832,5534],[836,5505],[837,5508],[1156,5624],[1435,5546],[1451,5546],[1538,5497],[1540,5551],[1541,5551],[1542,5551],[1543,5539],[1545,5483],[1561,5553],[1564,5553],[1565,5563],[1566,5554],[1567,5564],[1569,5483],[1570,5483],[1571,5483],[1572,5483],[1583,5500],[1593,5511],[1594,5511],[1609,5497],[1611,5554],[1615,5485],[1616,5607],[1617,5485],[1618,5485],[1619,5568],[1620,5485],[1645,5561],[1659,5555],[1660,5555],[1678,5497],[1682,5568],[1683,5568],[1684,5485],[1685,5568],[1686,5568],[1692,5564],[1695,5543],[1707,5556],[1708,5483],[1735,5483],[1933,5554],[1950,5555],[2080,5483],[2600,5554],[2601,5554],[2613,5483],[2699,5553],[2737,5553],[3005,5553],[3006,5553],[3007,5563],[3008,5554],[3009,5564],[3011,5554],[3015,5564],[3032,5554],[3098,5554],[3099,5554],[3117,5553],[3121,5553],[3146,5564],[3151,5564],[3201,5565],[3207,5565],[3210,5565],[3218,5565],[3220,5564],[3225,5564],[3226,5565],[3227,5565],[3228,5565],[3229,5565],[3236,5476],[3243,5476],[3244,5476],[3245,5566],[3259,5476],[3267,5476],[3274,5566],[3279,5476],[3280,5476],[3281,5476],[3282,5476],[3283,5476],[3284,5566],[3285,5476],[3299,5625],[3300,5625],[3301,5625],[3302,4003],[3645,5478],[3651,5478],[3652,5478],[3653,5478],[3654,5478],[3655,5478],[3656,5478],[3659,5478],[3661,5575],[3673,5478],[3888,5581],[3906,5582],[3907,5582],[4002,5626],[4003,5583],[4004,5583],[4005,5583],[4006,5585],[4009,5585],[4010,5585],[4051,5590],[4052,5507],[4053,5519],[4054,5551],[4055,5487],[4057,5569],[4058,5520],[4059,5522],[4061,5553],[4062,5553],[4063,5563],[4064,5554],[4065,5564],[4066,5605],[4067,5498],[4068,40],[4069,469],[4070,761],[4071,761],[4075,3342],[4077,5578],[4081,5601],[4082,5601],[4083,5601],[4085,5554],[4088,5607],[4089,5498],[4090,5570],[4091,5607],[4092,5567],[4093,5322],[4095,5627],[4096,5627],[4097,5627],[4100,5477],[4102,5529],[4103,5527],[4104,577],[4105,5628],[4106,5528],[4107,5529],[4111,5604],[4112,5604],[4114,469],[4116,5590],[4120,5498],[4121,5498],[4122,5477],[4123,5486],[4127,5476],[4128,781],[4129,1110],[4130,5476],[4131,5524],[4132,5606],[4133,5512],[4136,5564],[4137,5513],[4138,5578],[4139,5578],[4142,4716],[4145,4823],[4146,5502],[4148,5546],[4150,5565],[4152,5520],[4154,3342],[4155,3615],[4156,5611],[4157,5585],[4203,5554],[4256,5628],[4259,0],[4272,5628],[4301,0],[4437,5607],[4480,5628],[4482,5554],[4483,5554],[4509,5628],[4515,5476],[4516,5476],[4517,5476],[4518,5476],[4530,5553],[4532,5628],[4538,5553],[4612,5628],[4638,5601],[4639,5601],[4640,5601],[4644,5613],[4667,5614],[4698,5564],[4703,5564],[4704,5546],[4707,5565],[4708,5565],[4709,5565],[4710,5565],[4711,5629],[4712,5629],[4825,5502],[4826,1238],[4829,5567],[4830,5502],[4831,5502],[4836,5617],[4837,5617],[4838,5502],[5261,5477],[5262,5477],[5263,5477],[5269,5477],[5286,5486],[5287,5486],[5324,5619],[5325,5619],[5326,5619],[5329,5620],[5330,5496],[5342,5630],[5343,5630],[5385,5631],[5386,5620],[5411,5620],[5412,5620],[5414,5632],[5433,5620],[5454,5620],[5467,5632]],"b":[[49,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[52,"impl-Add-for-%26ChunkedArray%3CT%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[71,"impl-ChunkedArray%3CBinaryType%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[73,"impl-ChunkedArray%3CT%3E"],[102,"impl-ChunkedArray%3CT%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[122,"impl-Div-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div-for-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[125,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[141,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-Debug-for-ChunkedArray%3CT%3E"],[153,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[158,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[227,"impl-Container-for-ChunkedArray%3CT%3E"],[228,"impl-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[236,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkedArray%3CBooleanType%3E"],[240,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[251,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[255,"impl-ChunkedArray%3CT%3E"],[256,"impl-ChunkedArray%3CBooleanType%3E"],[257,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[258,"impl-Mul-for-ChunkedArray%3CT%3E"],[259,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[260,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[265,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[266,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[268,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[269,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[270,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[271,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[272,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[275,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[277,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[281,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[282,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[284,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[285,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[287,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[288,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[296,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[298,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkedArray%3CStringType%3E"],[304,"impl-ChunkedArray%3CListType%3E"],[305,"impl-ChunkedArray%3CStringType%3E"],[306,"impl-ChunkedArray%3CListType%3E"],[317,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[318,"impl-Rem-for-ChunkedArray%3CT%3E"],[319,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[320,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[339,"impl-Container-for-ChunkedArray%3CT%3E"],[340,"impl-ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CT%3E"],[344,"impl-Container-for-ChunkedArray%3CT%3E"],[347,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[348,"impl-Sub-for-ChunkedArray%3CT%3E"],[349,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[350,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[352,"impl-ChunkedArray%3CBooleanType%3E"],[353,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[358,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[359,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[365,"impl-ChunkedArray%3CT%3E"],[366,"impl-ChunkedArray%3CListType%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[373,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[374,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[375,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[525,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[526,"impl-BinViewChunkedBuilder%3Cstr%3E"],[858,"impl-Flags-for-MetadataProperties"],[859,"impl-MetadataProperties"],[860,"impl-MetadataFlags"],[861,"impl-Flags-for-MetadataFlags"],[927,"impl-MetadataTrait-for-Metadata%3CT%3E"],[928,"impl-Metadata%3CT%3E"],[953,"impl-Debug-for-MetadataProperties"],[954,"impl-LowerHex-for-MetadataProperties"],[955,"impl-Binary-for-MetadataProperties"],[956,"impl-Octal-for-MetadataProperties"],[957,"impl-UpperHex-for-MetadataProperties"],[958,"impl-Octal-for-MetadataFlags"],[959,"impl-Binary-for-MetadataFlags"],[960,"impl-Debug-for-MetadataFlags"],[961,"impl-LowerHex-for-MetadataFlags"],[962,"impl-UpperHex-for-MetadataFlags"],[972,"impl-Flags-for-MetadataProperties"],[973,"impl-MetadataProperties"],[974,"impl-MetadataFlags"],[975,"impl-Flags-for-MetadataFlags"],[988,"impl-Metadata%3CT%3E"],[989,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1032,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1033,"impl-Metadata%3CT%3E"],[1037,"impl-Metadata%3CT%3E"],[1038,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1116,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1117,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1151,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1152,"impl-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1179,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1182,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1184,"impl-Array-for-ObjectArray%3CT%3E"],[1185,"impl-ObjectArray%3CT%3E"],[1188,"impl-ObjectChunkedBuilder%3CT%3E"],[1189,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1192,"impl-ObjectChunkedBuilder%3CT%3E"],[1774,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1775,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1776,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1777,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1778,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1779,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1780,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1781,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1856,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1857,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1858,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1861,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2207,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2208,"impl-PartialEq-for-DataType"],[2217,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2218,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2219,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2220,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2223,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2224,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2225,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2226,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2264,"impl-Display-for-AnyValue%3C\'_%3E"],[2265,"impl-Debug-for-AnyValue%3C\'a%3E"],[2267,"impl-Debug-for-DataType"],[2268,"impl-Display-for-DataType"],[2271,"impl-Debug-for-TimeUnit"],[2272,"impl-Display-for-TimeUnit"],[2283,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2285,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2286,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2287,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2288,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2290,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2291,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2293,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2295,"impl-From%3C%26Field%3E-for-Field"],[2297,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2320,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2322,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2325,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2326,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2327,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2329,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2330,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2331,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2332,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2338,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2339,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2341,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2342,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2343,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2344,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2345,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2346,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2354,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2355,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2356,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2357,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2358,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2359,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2448,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2449,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2450,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2451,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2454,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2455,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2456,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2457,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2590,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2591,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2592,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2593,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2596,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2597,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2598,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2599,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2634,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2635,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2636,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2637,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2638,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2639,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2640,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2641,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2642,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2643,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2656,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2657,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2660,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2661,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2662,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2663,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2666,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2667,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2668,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2669,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2749,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2750,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2751,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2752,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3052,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3053,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3054,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3055,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3056,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3057,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3072,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3073,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3074,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3075,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3076,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3077,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3092,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3093,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3094,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3095,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3096,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3097,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3108,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3109,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3110,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3111,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3112,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3113,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3269,"impl-Display-for-ErrString"],[3270,"impl-Debug-for-ErrString"],[3363,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3364,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3365,"impl-Add%3C%26Series%3E-for-DataFrame"],[3408,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3409,"impl-Div%3C%26Series%3E-for-DataFrame"],[3410,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3442,"impl-Display-for-DataFrame"],[3443,"impl-Debug-for-DataFrame"],[3475,"impl-Index%3Cusize%3E-for-DataFrame"],[3476,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3477,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3478,"impl-Index%3C%26str%3E-for-DataFrame"],[3479,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3480,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3481,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3482,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3500,"impl-Container-for-DataFrame"],[3501,"impl-DataFrame"],[3507,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3508,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3509,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3510,"impl-DataFrame"],[3511,"impl-Container-for-DataFrame"],[3525,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3526,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3527,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3553,"impl-Container-for-DataFrame"],[3554,"impl-DataFrame"],[3558,"impl-Container-for-DataFrame"],[3559,"impl-DataFrame"],[3562,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3563,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3564,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3583,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3584,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3762,"impl-Debug-for-GroupByMethod"],[3763,"impl-Display-for-GroupByMethod"],[3769,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3770,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3771,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3806,"impl-IntoIterator-for-%26GroupsIdx"],[3807,"impl-IntoIterator-for-GroupsIdx"],[3809,"impl-IntoParallelIterator-for-GroupsIdx"],[3810,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4174,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4175,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4263,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4264,"impl-Default-for-Arc%3Cstr%3E"],[4265,"impl-Default-for-Arc%3CT%3E"],[4266,"impl-Default-for-Arc%3CCStr%3E"],[4320,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4321,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4322,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4355,"impl-Display-for-PolarsError"],[4356,"impl-Debug-for-PolarsError"],[4359,"impl-Pointer-for-Arc%3CT,+A%3E"],[4360,"impl-Display-for-Arc%3CT,+A%3E"],[4361,"impl-Debug-for-Arc%3CT,+A%3E"],[4371,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4372,"impl-From%3CError%3E-for-PolarsError"],[4373,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4375,"impl-From%3CError%3E-for-PolarsError"],[4380,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4381,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4382,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4384,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4385,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4386,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4387,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4388,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4389,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4390,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4391,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4392,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4393,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4394,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4395,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4765,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4766,"impl-From%3CArrowSchema%3E-for-Schema"],[4767,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4769,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4770,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4771,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4844,"impl-Add-for-%26Series"],[4845,"impl-Add%3CT%3E-for-Series"],[4846,"impl-Add%3CT%3E-for-%26Series"],[4847,"impl-Add-for-Series"],[4918,"impl-Div-for-Series"],[4919,"impl-Div-for-%26Series"],[4920,"impl-Div%3CT%3E-for-Series"],[4921,"impl-Div%3CT%3E-for-%26Series"],[4933,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4934,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4935,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4936,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4937,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4938,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4955,"impl-Display-for-Series"],[4956,"impl-Debug-for-Series"],[4969,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4970,"impl-FromIterator%3Cbool%3E-for-Series"],[4971,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4972,"impl-FromIterator%3Ci32%3E-for-Series"],[4973,"impl-FromIterator%3C%26i32%3E-for-Series"],[4974,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4975,"impl-FromIterator%3C%26f32%3E-for-Series"],[4976,"impl-FromIterator%3C%26f64%3E-for-Series"],[4977,"impl-FromIterator%3Cf32%3E-for-Series"],[4978,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4979,"impl-FromIterator%3Cu32%3E-for-Series"],[4980,"impl-FromIterator%3C%26u64%3E-for-Series"],[4981,"impl-FromIterator%3C%26str%3E-for-Series"],[4982,"impl-FromIterator%3Cf64%3E-for-Series"],[4983,"impl-FromIterator%3Cu64%3E-for-Series"],[4984,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4985,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4986,"impl-FromIterator%3CString%3E-for-Series"],[4987,"impl-FromIterator%3Ci64%3E-for-Series"],[4988,"impl-FromIterator%3C%26i64%3E-for-Series"],[4989,"impl-FromIterator%3C%26u32%3E-for-Series"],[4990,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4991,"impl-FromIterator%3C%26bool%3E-for-Series"],[4992,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4993,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4994,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4995,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4996,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4997,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4998,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5013,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5014,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5015,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5016,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5017,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5018,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5060,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5061,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5062,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5063,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5064,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5065,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5079,"impl-Mul%3CT%3E-for-%26Series"],[5080,"impl-Mul-for-Series"],[5081,"impl-Mul%3CT%3E-for-Series"],[5082,"impl-Mul-for-%26Series"],[5089,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5090,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5091,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5092,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5093,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5094,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5095,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5096,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5097,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5098,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5099,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5100,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5101,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5102,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5103,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5104,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5105,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5106,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5107,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5108,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5109,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5110,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5111,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5112,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5113,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5114,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5115,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5116,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5117,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5118,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5119,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5120,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5121,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5122,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5123,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5124,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5125,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5130,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5131,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5132,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5133,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5134,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5135,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5144,"impl-Rem%3CT%3E-for-Series"],[5145,"impl-Rem-for-%26Series"],[5146,"impl-Rem%3CT%3E-for-%26Series"],[5178,"impl-Sub%3CT%3E-for-%26Series"],[5179,"impl-Sub%3CT%3E-for-Series"],[5180,"impl-Sub-for-%26Series"],[5181,"impl-Sub-for-Series"],[5202,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5204,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5205,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5206,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5403,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5404,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5406,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5407,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5409,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5410,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAGIOrg7rDu4O7w7wDvEO8g73DvoO/w4ADyUP","e":"OzAAAAEAADsQEgIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADAA/AAAAQgACAEYABABOAAMAUwAAAFUACwBjAAMAaAAAAGsAAwBwAAEAdgANAIUAAwCKAAEAjQAEAJMAAACVAAEAmQAGAKIAAwCoAAMArQAFALQAAQC5AAUAwQACAMgABADOAAMA1QACANoAAQDdAAcA6gAMAPwAAwACAQYACgEbACkBAwAuAQAAMAEEADYBAQA8AQAAPgEEAEQBAABJAQUAUQEBAFQBAABWAQEAWQEKAGoBAQBwAQAAdAEIAH4BCACIAQAAigEFAJIBAACUASMAuQEpAOcBAgDtAScAGwIFACUCAAAnAiYAUAJMAKQCDAC4AiQA4AIPAPECAQD0AhkAEQMJAB0DAQAhAwEAJAMVADsDCQBGAwoAWwMAAF4DAABjAyEAiQMSAJ4DAACgAwkArAMDALIDAQC2Aw0AzQMAANADAADTAwEA2QMHAOIDBwD3AwEA+wMAAP4DAwAGBAUADQQEABkECwAsBAQAMwQNAEMEBgBNBAgAVwQBAFsEFgBzBAcAfAQAAH4EAACABAAAggQBAIcEEACZBAAAnAQAAJ4EAwCjBAEApgQCAKoEBwCzBAAAtQQFAL0EAQDABAAAwgQBAMUEAwDKBAMAzwQCANMEAwDZBAAA3AQAAOQEAADpBAAA7AQBAPEEAQD0BAAA9wQAAAEFAAAKBQIAEAUHABoFAgAfBQEAIgUAACQFAQAqBQEALQUBADQFAQA6BQAAPQUAAEAFAABCBQAARAUAAEYFAABLBQQAUgUBAFUFBwBeBQIAZAUAAGYFAwBrBQEAbgUFAHoFFwCTBQEAlwUEAJ0FAwCkBQcArwUSAMQFDADTBQQA5AUJAPoFDQAKBgIADgYFABYGAAAYBg0AKQYAACsGAAAwBgEAMwYAADUGAgA5BgAAOwYAAD4GAABBBgAAQwYBAEYGAABIBgIATAYMAFoGAABcBgEAXwYAAGEGAQBkBgAAZgYBAGkGAABrBgEAbgYDAHUGAAB5BgEAfQYAAIAGAACCBgAAhAYDAIkGAACMBggAlgYBAJkGBACgBgEApAYAAKYGAACrBgIArwYBALIGAAC0BgEAtwYAALkGAQC8BgAAvgYBAMEGAADDBgEAxgYAAMgGAADLBjsADQcEABQHCQAgBwQAJgcIADAHAAAyB18AkweFABoIBwAjCHYAmwgAAJ0IRwDsCAAA7ggDAPMIAQD2CAAA+AgAAPoIAQARCQAAEwkAABUJFwAxCSQAWAkGAGEJHgCGCUAAyQkAAO0JCgD6CQAA/AkBAP8JAQACCgAABwoFAA4KAAARCgIAFgoDABsKAAAdCh0APAoJAEcKDQBWCh4AdgoHAH8KGgCbChUAsgoMAMQKAADGCgAAywodAOsKBADxClEARAsqAHALTAC+CwQAxAsBAMcLAgDLCwQA0QskAP0LAgABDAkADwwDABQMFwAuDAEAMQwEADcMDQBGDAUATQwAAE8MGABpDAEAbwwCAHQMAQB4DAkAgwwEAIkMAQCODAAAkAwCAJQMAQCXDAAAmQwBAJ8MBAClDAQAqwwQAL0MCgDKDAMA0AwEANYMJgD+DAUABQ0JABINAAAVDQoAIQ0FACwNFgBFDRIAWQ0AAGINAQBmDQIAag0AAGwNAABxDQMAeg0AAIkNAACMDQEAlA0MAKcNAQCtDQAAsA0AALQNAgC4DQAAvA0BAMYNAgDODQAA0Q0AANcNAADgDQIA5A0AAOcNAADpDQQA9A0DAPsNBgAEDgkADw4AABUOBAAhDg4AMQ4CADUOAAA3DgkAQg4BAEUOAwBKDgMATw4JAFoOBwBjDgEAZg4dAIUOKACvDgYAug4CAL4OAADCDgMAyA4AAM0OBwDdDg0A7A4BAPMOAwD4DgEA/A4CAAEPAAADDx8AJg8MADUPBQA8DwcARQ8WAF4PDgBuDw8AgA8AAIIPAwCJDwYAkw8OAKQPAQCnDxEAuw8EAMMPBQDLDwkA1g8CANsPBwDkDwsA8Q8DAPYPFgAOEAcAFxAFAB4QFgA4EBEASxAAAE0QAQBREBwAcBACAHQQJACaEAYApBABAKwQIgDSEAMA1xAKAOMQHAACERQAGBEBABwRAAAyEQAANxEAADoRAABBEQAARBEAAEkRAgBNEQUAVRERAHcRAwB8EQIAgBEBAIMRAQCeEQIApBEEAKsRAACuEQcAuBEAALoRAQC/ES0A9REAAPcRDAAFEgAABxIMABkSCQAlEgYALRIAAC8SHQBOEgAAUBILAF0SAABfEgEAaBIQAHoSAAB8EgwAixIHAJQSDACiEgQArRIAAK8SAQCyEgEAthIBAMoSAADMEgAAzhIAANISAwDYEgUA3xIEAOUSBQDtEgQA9xIAAP0SAgAFEwUADBMJABkTAwAeEwAAIhMCACYTBAAtExIARBMDAEoTAQBOEwIAWxMDAGMTAABmEwEAaRMfAIwTAACOEwEAlhMBAJoTAQCdEwAAoxMBAKYTAwCuEwMAuhMDAL8TAADBEwAAxhMBAMkTAQDQEwAA2BMDAN4TAADiEwoA7hMYAAkUAgANFAAADxQBABMUAQAZFAIAHhQAACAUAAAkFAIAKxQBAC4UAAAwFAEAMxQAADkUAAA7FAMASxQBAE4UDgBeFAQAahQAAG8UAwB0FAAAdxQLAIQUAACGFAAAiBQEAI4UGgCsFAIAsRQQAMMUAQDGFAoA0hQGANsUAADeFAAA4RQRAPQUAgD5FBAADBUKABsVCQAmFQgAMxUJAD4VBQBGFQAASBUBAEsVAwBQFQsAXRUEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNHNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","cloud","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse_dates","type_id","type_id","utils","vzip","vzip","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","object_path_from_string","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","build_http","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dtype","from","from","from","from","init","init","init","init","init_buffers","into","into","into","into","into_series","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","float_scientific","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","count_rows","data","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compat_level","with_compat_level","with_compression","with_compression","with_compression","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","ensure_not_mapped","from","from","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","arr_from_iter","arr_from_iter_with_dtype","arr_from_iter_with_dtype","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","clone_to_uninit","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","full_null","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","propagate_nulls","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_with_dtype","try_arr_from_iter_with_dtype","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","with_validity_typed","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_schema","check_schema","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_include_file_path","with_include_file_path","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","compression","data_page_size","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_writer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","__clone_box","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","field_name","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","take_indices","to_max","to_min","to_min_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_schema","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","get_reader_bytes","get_sequential_row_statistics","materialize_projection","overwrite_schema"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[154,"polars_io::cloud"],[227,"polars_io::cloud::options"],[417,"polars_io::csv"],[419,"polars_io::csv::read"],[680,"polars_io::csv::read::buffer"],[754,"polars_io::csv::read::buffer::Buffer"],[757,"polars_io::csv::read::schema_inference"],[784,"polars_io::csv::write"],[930,"polars_io::file_cache"],[951,"polars_io::ipc"],[1193,"polars_io::json"],[1291,"polars_io::mmap"],[1314,"polars_io::ndjson"],[1316,"polars_io::ndjson::core"],[1420,"polars_io::parquet"],[1423,"polars_io::parquet::metadata"],[1476,"polars_io::parquet::read"],[1619,"polars_io::parquet::write"],[1849,"polars_io::partition"],[1850,"polars_io::path_utils"],[1857,"polars_io::pl_async"],[1879,"polars_io::predicates"],[1946,"polars_io::prelude"],[1957,"polars_io::utils"],[1966,"dyn_clone::sealed"],[1967,"polars_io::options"],[1968,"core::result"],[1969,"serde::de"],[1970,"polars_io::shared"],[1971,"polars_core::frame"],[1972,"polars_error"],[1973,"core::fmt"],[1974,"core::hash"],[1975,"std::io"],[1976,"polars_arrow::record_batch"],[1977,"core::option"],[1978,"serde::ser"],[1979,"core::any"],[1980,"polars_io::avro::read"],[1981,"polars_arrow::datatypes::schema"],[1982,"polars_io::avro::write"],[1983,"polars_core::schema"],[1984,"alloc::string"],[1985,"alloc::vec"],[1986,"polars_io::cloud::glob"],[1987,"object_store"],[1988,"alloc::sync"],[1989,"polars_io::cloud::polars_object_store"],[1990,"object_store::path"],[1991,"tokio::io::async_write"],[1992,"core::marker"],[1993,"polars_io::cloud::adaptors"],[1994,"std::io::error"],[1995,"crossterm::command"],[1996,"url"],[1997,"bytes::bytes"],[1998,"core::ops::range"],[1999,"core::ops::function"],[2000,"parquet_format_safe::thrift::varint::decode"],[2001,"object_store::aws::builder"],[2002,"object_store::azure::builder"],[2003,"object_store::gcp::builder"],[2004,"core::convert"],[2005,"core::iter::traits::collect"],[2006,"polars_io::csv::read::reader"],[2007,"alloc::boxed"],[2008,"polars_io::csv::read::read_impl::batched"],[2009,"polars_io::csv::read::options"],[2010,"std::path"],[2011,"std::fs"],[2012,"polars_core::datatypes::dtype"],[2013,"polars_core::series"],[2014,"polars_utils::aliases"],[2015,"polars_io::csv::write::writer"],[2016,"polars_io::csv::write::options"],[2017,"core::num::nonzero"],[2018,"polars_io::file_cache::entry"],[2019,"polars_io::ipc::ipc_stream"],[2020,"polars_io::ipc::write"],[2021,"futures_io::if_std"],[2022,"polars_io::ipc::ipc_file"],[2023,"polars_io::ipc::ipc_reader_async"],[2024,"polars_arrow::io::ipc::read::file"],[2025,"polars_utils::mmap"],[2026,"polars_arrow::array::struct_"],[2027,"polars_arrow::array"],[2028,"polars_arrow::datatypes"],[2029,"polars_arrow::datatypes::field"],[2030,"polars_arrow::array::struct_::mutable"],[2031,"polars_arrow::array::growable::structure"],[2032,"polars_arrow::bitmap::immutable"],[2033,"polars_arrow::scalar"],[2034,"polars_arrow::array::struct_::iterator"],[2035,"polars_arrow::bitmap::utils::iterator"],[2036,"polars_arrow::bitmap::utils::zip_validity"],[2037,"polars_parquet::parquet::metadata::file_metadata"],[2038,"polars_parquet::parquet::metadata::column_order"],[2039,"polars_parquet::parquet::metadata::row_metadata"],[2040,"polars_parquet::arrow::read::statistics"],[2041,"parquet_format_safe::parquet_format"],[2042,"polars_parquet::parquet::metadata::schema_descriptor"],[2043,"polars_parquet::parquet::error"],[2044,"polars_io::parquet::read::reader"],[2045,"polars_io::parquet::read::read_impl"],[2046,"polars_io::parquet::read::options"],[2047,"polars_io::parquet::write::writer"],[2048,"polars_io::parquet::write::batched_writer"],[2049,"polars_io::parquet::write::options"],[2050,"polars_parquet::arrow::write"],[2051,"polars_parquet::parquet::write"],[2052,"core::iter::traits::iterator"],[2053,"polars_parquet::arrow::write::file"],[2054,"std::sync::mutex"],[2055,"core::future::future"],[2056,"tokio::runtime::task::join"],[2057,"smartstring::alias"],[2058,"polars_core::datatypes::field"],[2059,"avro_schema::file"],[2060,"polars_io::cloud::object_store_setup"],[2061,"polars_io::csv::read::parser"],[2062,"polars_io::csv::read::utils"],[2063,"polars_io::file_cache::cache"],[2064,"polars_io::file_cache::utils"],[2065,"polars_io::parquet::read::utils"],[2066,"polars_io::utils::other"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,5,6,0,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,0,11,14,5,6,5,6,5,6,0,6,5,6,5,6,0,0,0,5,0,11,14,20,5,0,0,0,0,0,0,6,5,6,5,6,5,6,5,6,6,5,6,0,5,6,25,0,0,0,0,29,29,29,29,29,26,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,26,30,29,29,29,29,29,26,30,29,26,30,29,29,26,30,29,26,30,29,26,30,26,26,29,26,30,29,26,30,29,26,30,29,26,30,29,26,30,26,30,26,0,0,0,41,45,37,41,45,37,41,37,0,41,41,41,37,45,37,41,45,37,41,41,45,45,37,41,37,45,37,45,37,41,45,37,41,37,41,41,41,0,41,45,37,41,45,37,41,45,37,41,45,0,0,37,45,37,45,41,45,37,41,45,37,41,45,37,41,45,37,41,45,45,59,58,59,0,60,59,61,61,0,58,60,58,58,59,60,59,59,0,0,58,58,59,58,58,58,59,58,58,59,59,61,61,0,61,61,58,58,59,59,59,58,58,59,58,60,60,58,59,58,59,58,59,59,59,58,58,36,59,60,58,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,58,36,59,60,58,36,59,60,58,58,36,59,59,60,60,36,58,36,61,59,60,58,36,61,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,58,58,36,36,36,59,59,59,60,60,60,36,58,36,59,60,58,36,61,59,60,58,61,59,60,36,58,36,59,60,58,36,61,59,60,58,36,61,59,60,36,58,36,59,60,58,36,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,58,36,61,59,60,36,36,36,36,0,0,77,77,0,0,0,0,0,0,75,76,77,0,0,76,75,73,74,75,76,77,66,66,66,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,0,73,73,74,75,76,77,73,74,75,76,77,73,74,75,75,76,77,73,74,0,74,73,74,75,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,74,73,74,75,76,77,73,73,73,74,74,74,75,75,75,76,76,76,77,77,77,66,73,74,75,76,77,72,71,66,73,74,75,76,76,77,73,73,73,74,75,76,77,73,0,73,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,0,73,73,74,73,73,66,76,76,76,72,71,74,73,73,73,74,73,73,73,73,73,0,73,74,73,74,75,76,77,73,73,73,74,75,76,77,74,72,71,66,73,74,75,76,77,72,71,66,73,74,75,76,77,73,74,72,71,66,73,74,75,76,77,73,72,71,66,73,74,75,76,77,73,73,74,74,73,74,74,73,73,73,73,74,73,73,74,73,73,73,74,73,73,73,73,73,73,74,73,73,74,74,83,0,83,0,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,83,174,175,176,83,174,175,176,83,0,174,175,176,83,83,174,175,176,83,174,175,176,83,174,175,176,83,174,175,176,83,177,177,177,0,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,0,0,81,81,81,81,81,81,81,81,81,91,0,0,0,91,91,91,0,0,89,90,91,89,87,87,88,89,90,91,87,88,89,90,91,89,90,91,89,90,91,89,90,91,91,90,90,89,90,91,87,88,89,90,91,87,88,89,90,91,89,90,91,87,88,89,90,91,89,90,91,89,89,89,90,90,90,91,91,91,87,88,90,90,89,90,91,87,88,89,90,91,89,90,91,87,89,87,89,87,88,89,90,91,87,88,89,90,91,90,89,87,87,90,90,90,90,89,90,91,89,90,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,88,89,90,91,87,87,87,87,87,87,87,87,87,87,87,88,0,0,0,94,94,94,94,94,94,0,94,0,94,94,94,94,94,94,94,94,94,0,0,0,0,0,0,0,0,0,0,0,103,103,100,101,102,103,95,96,96,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,101,102,103,100,101,102,103,100,101,102,102,103,103,102,104,104,107,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,108,104,95,109,107,96,97,100,101,102,103,100,102,103,102,102,102,103,103,103,108,95,109,96,97,108,100,102,103,108,104,95,109,107,96,97,100,101,102,103,104,100,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,102,100,108,104,108,95,109,107,96,96,108,95,100,102,103,108,95,100,101,102,103,102,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,104,95,109,107,96,97,100,101,102,103,108,95,109,96,109,107,96,107,108,108,108,95,101,108,95,101,108,95,101,101,97,102,0,116,0,116,0,0,0,112,116,113,115,114,112,116,113,115,114,112,112,112,112,112,112,116,113,115,114,112,116,113,115,114,112,112,116,113,115,114,112,112,112,112,112,113,114,112,116,113,115,114,112,112,114,116,113,115,114,112,116,113,115,114,112,112,113,115,114,112,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,116,113,115,114,112,114,114,113,114,114,114,114,115,86,86,0,86,0,86,86,86,86,86,86,0,86,86,86,86,86,68,68,86,86,86,86,0,0,0,0,119,119,119,119,119,119,119,119,119,123,119,123,119,119,119,119,119,119,123,119,123,119,123,119,123,119,119,119,119,123,119,123,119,119,119,123,119,119,123,123,119,123,119,119,119,119,119,123,123,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,123,119,123,119,119,123,119,119,119,119,119,123,119,123,123,123,123,123,123,123,123,123,123,123,119,119,119,0,0,0,0,0,0,133,136,133,136,133,133,133,133,133,133,133,136,133,136,133,0,136,136,133,136,136,133,136,136,133,136,133,136,133,133,133,133,136,136,136,133,133,133,133,133,136,133,133,136,133,136,133,133,136,133,146,0,146,146,0,0,0,0,146,145,146,142,144,143,142,144,145,146,143,142,144,145,146,142,144,145,146,145,146,145,145,146,146,146,143,142,144,145,146,143,142,144,145,146,145,146,143,142,144,145,146,145,146,145,145,145,146,146,146,142,144,143,145,146,143,142,144,145,146,144,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,143,143,145,0,143,142,143,142,144,145,142,144,143,142,144,145,146,142,142,144,145,146,143,142,144,145,146,143,142,144,145,146,143,142,144,145,146,142,144,145,143,142,144,145,146,142,142,144,142,144,142,144,142,144,142,144,142,144,0,151,0,151,0,151,151,0,0,0,0,151,0,151,151,0,150,151,152,153,154,155,148,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,150,151,152,153,154,155,150,150,151,151,152,152,153,153,154,154,155,155,150,150,150,151,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,150,151,152,153,154,155,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,150,150,150,151,151,151,152,152,152,153,153,153,154,154,154,155,155,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,149,150,151,152,153,154,155,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,155,155,150,155,155,148,155,150,150,151,152,153,154,155,148,150,150,151,152,153,154,155,150,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,152,153,154,149,148,150,151,152,153,154,155,149,148,150,151,152,153,154,155,148,148,148,148,149,150,149,0,0,0,0,0,0,0,0,0,0,164,164,164,164,164,164,164,164,0,164,164,166,164,164,164,164,0,164,164,0,0,0,0,0,169,170,0,67,169,170,169,170,169,170,169,170,169,170,170,169,170,169,170,169,170,169,170,169,67,169,169,170,169,170,169,169,169,169,169,170,169,170,169,170,169,170,169,170,170,169,170,168,170,169,169,169,169,170,169,170,169,170,169,170,169,170,170,0,0,0,11,14,11,14,11,11,11,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{ce{}{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000`{{{b{c}}}C`{}}0`88{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{{b{c}}d}f{}}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cj}}}Cj}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{ce{}{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00777{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{nf}{{{b{hEj}}}f}11{{{b{Dj}}{b{Dj}}}Ad}{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{ce{}{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{Db{{Aj{Ed}}}}``{{{b{hc}}e}{{A`{{b{hg}}El}}}{}En{}}`{{{b{hc}}i}{{A`{gEl}}}{}{}{}{{Fn{{b{he}}}{{Fl{g}}}}}}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}00000{{{b{c}}}C`{}}00:::{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{hc}}e}{{A`{nEl}}}{}Gb}```````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}000000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{{{b{c}}}e{}{}}000{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000077777{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{{b{c}}d}f{}}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{c}}{b{he}}}f{}{}}0000{{{b{c}}}f{}}00000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}00000{{{b{Df}}}Ih}11{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{ce{}{}}0000000{{Ibc}{{Hd{c}}}Hh}{{{b{{Fh{G`}}}}}Ad}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh}<{DbIh}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{{{b{c}}}e{}{}}0000`{c{{A`{e}}}{}{}}000000000000000{{Ib{Bl{Il}}}{{Aj{{Hd{J`}}}}}}`{{{b{c}}}C`{}}0000000{{{b{hIb}}{b{Jb}}}f}{ce{}{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{Db}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jd}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Il}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJf}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJf}}Ad}f}{{{b{c}}}{{b{e}}}{}{}}000{{{b{hc}}}{{b{he}}}{}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jf}}}Jd}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jf}}}}}}{ce{}{}}000{Jf{{Aj{Jh}}}}{c{{A`{e}}}{}{}}0000000{{{b{c}}}C`{}}0003333````{{{b{c}}d}f{}}=<{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}Jb}?>={{{b{{Jj{Jd}}}}}Jd}{{{b{Jb}}{b{hAn}}}B`}={{{b{Jb}}}n}{{{b{Jb}}}Hl}{{{b{Df}}AdAd}Jd}{{{b{Jl}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}?{{{b{c}}}e{}{}}>{{{b{Jl}}{b{Ib}}}{{Aj{Jb}}}}?>{ce{}{}}{{JbHl}Jb}`````````???`{{{Jn{c}}{b{D`}}}{{Aj{{K`{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{c}}{b{he}}}f{}{}}00{{{b{c}}}f{}}000``{{}Kb}{{}Kd}{{}Kf}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kb}}}Ab}{c{{A`{Kd}}}Ab}{c{{A`{Kf}}}Ab}{nf}0000{{{b{Kb}}{b{Kb}}}Ad}{{{b{Kd}}{b{Kd}}}Ad}{{{b{Kf}}{b{Kf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000{{{b{h{Jn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{K`{c}}}}}{{Aj{f}}}Bf}``{{{b{Kb}}{b{hAn}}}B`}{{{b{Kd}}{b{hAn}}}B`}{{{b{Kf}}{b{hAn}}}B`}{cc{}}0000{{{b{Kb}}{b{hc}}}fBb}{{{b{Kd}}{b{hc}}}fBb}{{{b{Kf}}{b{hc}}}fBb}{{{Jn{c}}Ad}{{Jn{c}}}Bf}`0`{{}n}0000{ce{}{}}0000``{{{Jn{c}}n}{{Jn{c}}}Bf}{c{{Jn{c}}}Bf}````{{{b{Kb}}c}A`Bn}{{{b{Kd}}c}A`Bn}{{{b{Kf}}c}A`Bn}``{{{b{c}}}e{}{}}00{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Jn{c}}Kh}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Db}}}{{Jn{c}}}Bf}0{{{Jn{c}}{Bl{n}}}{{Jn{c}}}Bf}{{{Jn{c}}{Bl{Ad}}}{{Jn{c}}}Bf}{{{Jn{c}}Db}{{Jn{c}}}Bf}0{{{Jn{c}}G`}{{Jn{c}}}Bf}{{{Jn{c}}Kf}{{Jn{c}}}Bf}15{{{b{h{K`{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kj}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{Kl}}}}}}}}{ce{}{}}{c{{A`{e}}}{}{}}0{{{b{Kl}}}{{Aj{J`}}}}0{{{b{c}}}C`{}}{{{b{Kl}}Kj}f}{{{b{Kl}}}{{b{{Dn{Df}}}}}}5`````````````{{{b{c}}d}f{}}000{{{b{h{Kn{c}}}}}{{Aj{Cf}}}Bd}{{{L`{c}}{b{D`}}}{{Aj{{Lb{c}}}}}Bf}{{{L`{c}}{b{D`}}}{{Aj{{`{c}}}}}{LdEhLf}}{{{b{c}}}{{b{e}}}{}{}}0000000000{{{b{hc}}}{{b{he}}}{}{}}0000000000{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{c}}{b{he}}}f{}{}}000{{{b{c}}}f{}}00000`{{{b{M`}}{Bl{{b{Mb}}}}}{{Aj{Md}}}}{{{b{M`}}{Bl{{b{Mb}}}}LjAd}{{Aj{Ah}}}}{{}Mf}{{}Lj}{{}Ll}{{}Ln}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Lh}}}Ab}{c{{A`{Ll}}}Ab}{c{{A`{Ln}}}Ab}{nf}0000000000{{{b{Lh}}{b{Lh}}}Ad}{{{b{Ll}}{b{Ll}}}Ad}{{{b{Ln}}{b{Ln}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{Mh{c}}}{{Aj{Ah}}}Hh}{{{Kn{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mj{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{L`{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lb{c}}}}}{{Aj{f}}}Bf}{{{Mh{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Lh}}{b{hAn}}}B`}{{{b{Ll}}{b{hAn}}}B`}{{{b{Ln}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{M`}}}}{{{b{Lh}}{b{hc}}}fBb}{{{b{Ll}}{b{hc}}}fBb}{{{b{Ln}}{b{hc}}}fBb}{{}n}0000000000{ce{}{}}0000000000``{{{Mh{c}}{Bl{Il}}}{{Mh{c}}}Hh}{{{b{M`}}}{{Aj{Mb}}}}{c{{Mh{c}}}Hh}{c{{Kn{c}}}Bd}{c{{Mj{c}}}Bf}{{}Mf}{c{{L`{c}}}Bf}{c{{L`{c}}}{LdEhLf}}{{{b{h{Mh{c}}}}}{{Aj{Ml}}}Hh}{{{b{h{Kn{c}}}}}{{Aj{D`}}}Bd}{{{b{Lh}}c}A`Bn}{{{b{Ll}}c}A`Bn}{{{b{Ln}}c}A`Bn}{{{Mh{c}}Ad}{{Mh{c}}}Hh}{{{Kn{c}}Ad}{{Kn{c}}}Bd}{{{b{c}}}e{}{}}000{{{b{Ll}}c}{{L`{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000000000{{{b{c}}}C`{}}0000000000{ce{}{}}0000000000{{{Mh{c}}{Bl{{Dd{Db}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{Db}}}}}{{Kn{c}}}Bd}{{{Mj{c}}Mn}{{Mj{c}}}{}}{{{L`{c}}Mn}{{L`{c}}}Bf}{{{Mj{c}}{Bl{Ln}}}{{Mj{c}}}{}}{{Mf{Bl{Ln}}}Mf}{{{L`{c}}{Bl{Ln}}}{{L`{c}}}Bf}{{MfIl}Mf}{{{Mh{c}}{Bl{{Dd{Jh}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{Mh{c}}}Hh}{{{Mh{c}}{Bl{n}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{n}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Mh{c}}{Bl{{Dd{n}}}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{{Dd{n}}}}}{{Kn{c}}}Bd}{{Lj{Bl{{Dn{{Fh{Db}}}}}}}Lj}{{{Mh{c}}{Bl{j}}}{{Mh{c}}}Hh}{{{Kn{c}}{Bl{j}}}{{Kn{c}}}Bd}{{Ljc}Lj{{Gn{{Bl{j}}}}}}{{Ljc}Lj{{Gn{{Bl{n}}}}}}{{{b{h{Lb{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{Ll}}Ahc}{{Aj{f}}}Bf}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{N`}}}N`}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}0{{}N`}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{N`}}}Ab}{nf}0000{{{b{N`}}{b{N`}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00{{{b{h{Nb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nd{c}}}{{Aj{Ah}}}Hh}{{{b{N`}}{b{hAn}}}B`}{cc{}}0000{{{b{N`}}{b{hc}}}fBb}{{{Nd{c}}{Bl{Kh}}}{{Nd{c}}}Hh}{{}n}0000{ce{}{}}0000`{c{{Nb{c}}}Bf}{c{{Nf{c}}}Bf}{c{{Nd{c}}}Hh}{{{b{N`}}c}A`Bn}{{{Nd{c}}Ad}{{Nd{c}}}Hh}{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000088888{{{Nd{c}}Kh}{{Nd{c}}}Hh}4{{{Nb{c}}Nh}{{Nb{c}}}Bf}{{{Nd{c}}Nh}{{Nd{c}}}Hh}{{{Nd{c}}{Bl{{Dd{Db}}}}}{{Nd{c}}}Hh}{{{Nd{c}}Hl}{{Nd{c}}}Hh}{{{Nd{c}}{b{D`}}}{{Nd{c}}}Hh}{{{b{h{Nf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jl}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{J`}}}{{Aj{f}}}}{cc{}}{{{b{hc}}}JlHh}{{}n}{ce{}{}}{JlNj}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{J`}}}}}}{c{{A`{e}}}{}{}}0{{{b{c}}}C`{}}5`{{{b{hc}}{Bl{Kh}}}{{Aj{D`}}}Nl}``{{{b{c}}d}f{}}{{{b{Nn}}n}{{E`{NnNn}}}}{Nn{{Dn{O`}}}}{cNn{{Hb{}{{H`{f}}}}}}{cNn{{Hb{}{{H`{{Bl{f}}}}}}}}{{Obc}Nn{{Hb{}{{H`{{Bl{f}}}}}}}}{{Obc}Nn{{Hb{}{{H`{f}}}}}}{{{b{Nn}}}{{b{Od}}}}{{{b{hNn}}}{{b{hOd}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nn{{Hj{O`}}}}{{{b{Nn}}n}Ad}{{{b{Nn}}}Nn}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{Of{c}}}{{Aj{n}}}Hh}{{{b{Nn}}}{{b{Ob}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Nn}}{b{{b{O`}}}}}Ad}{{{b{Nn}}{b{Nn}}}Ad}{{{b{Nn}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}}{{Aj{Ah}}}Hh}{{{b{Nn}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OjNn}1{OlNn}{c{{Aj{{Of{J`}}}}}{{Gn{Il}}}}{{nOb}Nn}{{{b{Ob}}}{{b{{Fh{Oh}}}}}}{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{}n}0{ce{}{}}0{Nn{{E`{{Dd{Oh}}{Dd{{Hj{O`}}}}{Bl{On}}}}}}{{{b{Nn}}}}{{{b{Nn}}}{{A@f{{Dd{{Hj{A@`}}}}A@bA@d}}}}{{{b{Nn}}}n}{{{Of{c}}Ad}{{Of{c}}}Hh}{c{{Of{c}}}Hh}{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}Nn}{ObNn}{{Obn}Nn}{{{b{Nn}}}Nn}{{{b{hNn}}{Bl{On}}}f}{{{b{hNn}}nn}f}0{{{b{c}}nn}e{}{}}011{{Nnnn}Nn}0{{{b{Nn}}n}{{E`{{Hj{O`}}{Hj{O`}}}}}}0{{{b{hNn}}}{{Bl{On}}}}{{{b{Nn}}}{{Hj{O`}}}}{{{b{c}}}e{}{}}{{{b{Nn}}{b{Nn}}}On}{{{b{Nn}}b}On}10{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{e{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Obe}{{A`{Nnc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}000{{Ob{Dd{{Hj{O`}}}}{Bl{On}}}{{A`{NnA@h}}}}{{{b{c}}}C`{}}0{{{b{Nn}}}{{Bl{{b{On}}}}}}0{{{b{Nn}}}{{b{{Fh{{Hj{O`}}}}}}}}{{{b{Nn}}}A@b}{ce{}{}}0{{{Of{c}}{Bl{Kh}}}{{Of{c}}}Hh}{{{Of{c}}Ad}{{Of{c}}}Hh}{{{Of{c}}{Bl{n}}}{{Of{c}}}Hh}0{{{Of{c}}{Bl{e}}}{{Of{c}}}Hh{{Gn{Il}}}}{{{Of{c}}{Bl{{Dn{Hf}}}}}{{Of{c}}}Hh}{{{Of{c}}{Bl{{Dn{{Fh{Db}}}}}}}{{Of{c}}}Hh}4{{{Of{c}}{Bl{{b{hj}}}}}{{Of{c}}}Hh}{{{Of{c}}Hl}{{Of{c}}}Hh}{{{Of{c}}{b{D`}}}{{Of{c}}}Hh}{{{b{Nn}}{Bl{On}}}{{Hj{O`}}}}{{Nn{Bl{On}}}Nn}0``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@j}}}A@j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{{b{A@j}}n}A@l}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Oh}}{b{A@n}}}{{A`{AA`A@h}}}}`{nf}0{{{b{AA`}}{b{AA`}}}Ad}{{{b{AA`}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@j}}{b{hAn}}}{{A`{fCn}}}}{AAbAA`}{cc{}}0{{}n}0{ce{}{}}0{A@jAAd}{{{b{A@j}}}{{b{{Bl{{Dd{AAf}}}}}}}}``````{{{b{A@j}}}{{b{AAh}}}}`{{{b{c}}}e{}{}}{c{{A`{e}}}{}{}}0{AAd{{A`{A@jAAj}}}}11{{{b{c}}}C`{}}0`77`````````{{{b{c}}d}f{}}0{{{AAl{c}}n}{{Aj{AAn}}}Hh}{{AB`n}{{Aj{AAn}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{AAl{c}}{b{Cf}}}{{Aj{{AAl{c}}}}}Hh}{{AB`{b{Cf}}}{{Aj{AB`}}}}{{{b{ABb}}}ABb}{{{b{ABd}}}ABd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000{{}ABd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABb}}}Ab}{c{{A`{ABd}}}Ab}{nf}0000{{{b{ABb}}{b{ABb}}}Ad}{{{b{ABd}}{b{ABd}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000{{{AAl{c}}}{{Aj{Ah}}}Hh}{AB`{{Aj{Ah}}}}{{{b{AAn}}n}Ad}{{{b{ABb}}{b{hAn}}}B`}{{{b{ABd}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABf}}}{{Aj{AB`}}}}{{{b{h{AAl{c}}}}}{{Aj{{b{ABf}}}}}Hh}{{{b{hAB`}}}{{Aj{{b{ABf}}}}}}{{{b{ABb}}{b{hc}}}fBb}{{{b{ABd}}{b{hc}}}fBb}{{}n}0000{ce{}{}}0000{{{b{AAn}}}Ad}`0`{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jh}}}}}}{Bl{{b{j}}}}}Ah}`{c{{AAl{c}}}Hh}{{{b{hAAn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{AAl{c}}}}}{{Aj{n}}}Hh}{{{b{hAB`}}}{{Aj{n}}}}`{{{AAl{c}}ABd}{{AAl{c}}}Hh}{{AB`ABd}AB`}{{{b{AAn}}}{{b{Ml}}}}{{{b{h{AAl{c}}}}}{{Aj{Ml}}}Hh}{{{b{hAB`}}}{{Aj{Ml}}}}{{{b{ABb}}c}A`Bn}{{{b{ABd}}c}A`Bn}{{{AAl{c}}Ad}{{AAl{c}}}Hh}0{{AB`Ad}AB`}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000000000{{{b{c}}}C`{}}000043`{ce{}{}}0000{{{AAl{c}}{Bl{{Dd{Db}}}}}{{AAl{c}}}Hh}{{{AAl{c}}{Bl{{Dd{Jh}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{Jh}}}}}AB`}{{{AAl{c}}{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{E`{{Dn{Df}}{Dn{Df}}}}}}}AB`}{{{AAl{c}}{Bl{n}}}{{AAl{c}}}Hh}{{AB`{Bl{n}}}AB`}{{{AAl{c}}{Bl{{Dn{Hf}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dn{Hf}}}}}AB`}{{{AAl{c}}{Bl{{Dd{n}}}}}{{AAl{c}}}Hh}{{AB`{Bl{{Dd{n}}}}}AB`}{{{AAl{c}}{Bl{j}}}{{AAl{c}}}Hh}{{AB`{Bl{j}}}AB`}````````````````{{{b{c}}d}f{}}00000{{{ABh{c}}{b{D`}}}{{Aj{{ABj{c}}}}}Bf}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{c}}{b{he}}}f{}{}}00000{{{b{c}}}f{}}00000000000``{{}ABl}{{}ABn}{{}ACf}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ABl}}}Ab}{c{{A`{ABn}}}Ab}{c{{A`{AC`}}}Ab}{c{{A`{ACb}}}Ab}{c{{A`{ACd}}}Ab}{c{{A`{ACf}}}Ab}`{nf}00000009{{{b{{ABj{c}}}}{b{Ah}}}{{`{{ACj{}{{H`{{Aj{{ACh{A@h}}}}}}}}}}}Bf}{{{b{ABl}}{b{ABl}}}Ad}{{{b{ABn}}{b{ABn}}}Ad}{{{b{AC`}}{b{AC`}}}Ad}{{{b{ACb}}{b{ACb}}}Ad}{{{b{ACd}}{b{ACd}}}Ad}{{{b{ACf}}{b{ACf}}}Ad}{{{b{c}}{b{e}}}Ad{}{}}00000000000000000{{{b{{ABj{c}}}}}{{Aj{Kj}}}Bf}{{{ABh{c}}{b{hAh}}}{{Aj{Kj}}}Bf}{{{b{ABl}}{b{hAn}}}B`}{{{b{ABn}}{b{hAn}}}B`}{{{b{AC`}}{b{hAn}}}B`}{{{b{ACb}}{b{hAn}}}B`}{{{b{ACd}}{b{hAn}}}B`}{{{b{ACf}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ACf}{{{b{{ABj{c}}}}}{{b{{ACn{{ACl{c}}}}}}}Bf}{{{b{ABl}}{b{hc}}}fBb}{{{b{ABn}}{b{hc}}}fBb}{{{b{AC`}}{b{hc}}}fBb}{{{b{ACb}}{b{hc}}}fBb}{{{b{ACd}}{b{hc}}}fBb}{{{b{ACf}}{b{hc}}}fBb}{{}n}0000000{ce{}{}}0000000{{{b{ACf}}}Ad}0```{c{{ABh{c}}}{BfBf}}``{{{b{ABl}}c}A`Bn}{{{b{ABn}}c}A`Bn}{{{b{AC`}}c}A`Bn}{{{b{ACb}}c}A`Bn}{{{b{ACd}}c}A`Bn}{{{b{ACf}}c}A`Bn}{{{ABh{c}}Ad}{{ABh{c}}}Bf}`{{{b{c}}}e{}{}}00000{{{b{ABl}}c}{{ABh{c}}}Bf}{c{{A`{e}}}{}{}}000000000000000{G`{{Aj{AC`}}}}{AD`{{Aj{ACb}}}}{ADb{{Aj{ACd}}}}{{{b{c}}}C`{}}0000000{ce{}{}}0000000{{{ABh{c}}ABn}{{ABh{c}}}Bf}{{{ABh{c}}{Bl{n}}}{{ABh{c}}}Bf}0{{{ABh{c}}ACf}{{ABh{c}}}Bf}{{{b{h{ABj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ABl}}Ahc}{{Aj{f}}}Bf}{{{b{{ABj{c}}}}{Dd{{ACh{A@h}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{ADd}}{b{{Fh{c}}}}{b{e}}n}{{Aj{f}}}{{Gl{Df}}}{CbLfADf}}`{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Il}}}}}}}}{{{b{{Fh{Il}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Il}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{ADd}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{ADd}}}}{{{b{ADd}}}Il}``{{{b{ADh}}c}{}ADj}{{{b{ADh}}c}{}{ADjLf}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{ADh}}}}{{}n}{ce{}{}}{{{b{ADl}}}Kj}{{{b{ADh}}c}ADn{ADjLf}}{{{b{ADh}}e}{{ADn{c}}}Lf{{Fn{}{{Fl{c}}}}Lf}}{c{{A`{e}}}{}{}}0{{AD`e}{}ADj{{Fn{}{{Fl{c}}}}}}{{{b{c}}}C`{}}61````{{{b{c}}d}f{}}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AE`}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}0{{{b{AEd}}}{{b{{Fh{AEb}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEb}}}Ab}{c{{A`{AEd}}}Ab}{nf}0{{{b{AEb}}}{{b{Jd}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jh}}}}{{{b{AEb}}}{{b{AEf}}}}{{{b{AEb}}{b{hAn}}}B`}{{{b{AEd}}{b{hAn}}}B`}{cc{}}0{JhAEb}{AEhAEb}{{{b{AEb}}}{{Bl{{b{Jh}}}}}}00{{{b{AEd}}{b{Df}}}{{Aj{{b{AEb}}}}}}{{}n}0{ce{}{}}0{{AEh{Bl{Jh}}{Bl{Jh}}{Bl{Jh}}}AEb}{{Hl{Dd{AEb}}{Bl{n}}}AEd}{{{b{AEb}}}{{Bl{n}}}}{{{b{AEd}}}{{Bl{n}}}}{{{b{AEd}}}{{b{Hl}}}}{{{b{AEb}}c}A`Bn}{{{b{AEd}}c}A`Bn}{{{b{AE`}}{b{AEd}}}{{Aj{Ad}}}}{{{b{hAEd}}{b{{Fh{n}}}}}f}<<{{{b{AEb}}}{{Bl{Jh}}}}{{{b{c}}}e{}{}}0{c{{A`{e}}}{}{}}000{{{b{c}}}C`{}}0=={{{b{hAEd}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00``````{{{b{hc}}}{{Aj{Jl}}}{BdHhAEj}}{{cn}{{Dd{{E`{nn}}}}}{{ACj{}{{H`{n}}}}}}{{{Bl{{b{{Fh{Db}}}}}}{b{D`}}{Bl{{b{{Fh{Jh}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}","D":"CM`","p":[[1,"reference"],[5,"Private",1966],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1967],[5,"HiveOptions",0,1967],[1,"usize"],[6,"Result",1968],[10,"Deserializer",1969],[1,"bool"],[10,"SerReader",1946,1970],[5,"DataFrame",1971],[8,"PolarsResult",1972],[10,"SerWriter",1946,1970],[5,"Formatter",1973],[8,"Result",1973],[10,"Hasher",1974],[10,"Read",1975],[10,"Write",1975],[10,"ArrowReader",0,1970],[8,"RecordBatch",1976],[6,"Option",1977],[10,"Serializer",1978],[5,"TypeId",1979],[10,"WriteDataFrameToFile",0,1970],[5,"AvroReader",86,1980],[5,"ArrowSchema",1981],[10,"Seek",1975],[6,"AvroCompression",86],[5,"AvroWriter",86,1982],[5,"Error",1973],[5,"Schema",1983],[5,"String",1984],[5,"Vec",1985],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",154,1986],[10,"ObjectStore",1987],[5,"Arc",1988],[1,"tuple"],[5,"PolarsObjectStore",154,1989],[5,"Path",1990],[10,"AsyncWrite",1991],[10,"Unpin",1992],[5,"CloudWriter",154,1993],[5,"Error",1994],[10,"Command",1995],[8,"Result",1994],[5,"Url",1996],[5,"Bytes",1997],[5,"Range",1998],[1,"slice"],[5,"ObjectMeta",1987],[17,"Output"],[10,"FnOnce",1999],[1,"u8"],[10,"VarInt",2000],[6,"AmazonS3ConfigKey",227,2001],[6,"AzureConfigKey",227,2002],[6,"GoogleConfigKey",227,2003],[6,"CloudType",227],[10,"AsRef",2004],[10,"Into",2004],[17,"Item"],[10,"IntoIterator",2005],[5,"CsvReader",419,2006],[10,"PhysicalIoExpr",1879],[10,"MmapBytesReader",1291],[5,"Box",2007],[8,"SchemaRef",1983],[5,"OwnedBatchedCsvReader",419,2008],[5,"BatchedCsvReader",419,2008],[5,"CsvReadOptions",419,2009],[5,"CsvParseOptions",419,2009],[6,"CsvEncoding",419,2009],[6,"CommentPrefix",419,2009],[6,"NullValues",419,2009],[5,"PathBuf",2010],[10,"Fn",1999],[5,"File",2011],[5,"SchemaInferenceResult",757],[6,"DataType",2012],[6,"Buffer",680],[5,"Series",2013],[8,"PlHashSet",2014],[6,"ReaderBytes",1291],[5,"CsvWriter",784,2015],[5,"BatchedWriter",784,2015],[5,"CsvWriterOptions",784,2016],[5,"SerializeOptions",784,2016],[6,"QuoteStyle",784,2016],[8,"NonZeroUsize",2017],[1,"u64"],[5,"FileCacheEntry",930,2018],[5,"IpcStreamReader",951,2019],[5,"IpcWriter",951,2020],[5,"BatchedWriter",951,2020],[10,"AsyncWrite",2021],[10,"Send",1992],[5,"IpcScanOptions",951,2022],[5,"IpcReadOptions",951,2023],[5,"IpcWriterOptions",951,2020],[6,"IpcCompression",951,2020],[5,"IpcReaderAsync",951,2023],[5,"FileMetadata",2024],[1,"i64"],[5,"IpcStreamWriterOption",951,2019],[5,"IpcReader",951,2022],[5,"IpcStreamWriter",951,2019],[8,"ArrowSchemaRef",1981],[5,"CompatLevel",2012],[5,"JsonWriterOptions",1193],[5,"JsonWriter",1193],[5,"JsonReader",1193],[5,"BatchedWriter",1193],[6,"JsonFormat",1193],[5,"MemSlice",2025],[10,"BufRead",1975],[5,"StructArray",1316,2026],[10,"Array",2027],[6,"ArrowDataType",2028],[10,"Any",1979],[5,"JsonLineReader",1316],[5,"Field",2029],[5,"MutableStructArray",2030],[5,"GrowableStruct",2031],[5,"Bitmap",2032],[10,"Scalar",2033],[5,"StructValueIter",2034],[5,"BitmapIter",2035],[6,"ZipValidity",2036],[6,"PolarsError",1972],[5,"FileMetaData",1423,2037],[6,"ColumnOrder",2038],[5,"RowGroupMetaData",2039],[5,"ParquetStatistics",1423],[5,"MutableStatistics",2040],[5,"FileMetaData",2041],[5,"KeyValue",2041],[5,"SchemaDescriptor",2042],[6,"ParquetError",2043],[5,"ParquetReader",1476,2044],[5,"BatchedParquetReader",1476,2045],[5,"ParquetAsyncReader",1476,2044],[5,"ParquetOptions",1476,2046],[6,"ParallelStrategy",1476,2046],[8,"FileMetaDataRef",1423],[5,"ParquetWriter",1619,2047],[5,"BatchedWriter",1619,2048],[5,"ParquetWriteOptions",1619,2049],[6,"ParquetCompression",1619,2049],[5,"GzipLevel",1619,2049],[5,"BrotliLevel",1619,2049],[5,"ZstdLevel",1619,2049],[5,"StatisticsOptions",1619,2050],[8,"RowGroupIterColumns",1619,2051],[10,"Iterator",2052],[5,"FileWriter",2053],[5,"Mutex",2054],[1,"u32"],[1,"i32"],[5,"Path",2010],[10,"Sync",1992],[5,"RuntimeManager",1857],[10,"Future",2055],[10,"GetSize",1857],[5,"JoinHandle",2056],[10,"StatsEvaluator",1879],[5,"ColumnStats",1879],[5,"BatchStats",1879],[8,"String",2057],[5,"Field",2058],[10,"Sized",1992],[5,"Utf8Field",680],[5,"CategoricalField",680],[5,"DatetimeField",680],[15,"Datetime",754]],"r":[[0,1970],[1,1967],[2,1967],[3,1970],[4,1970],[5,1970],[87,1980],[88,1982],[89,2059],[154,1986],[155,1993],[156,1989],[165,2060],[194,1986],[206,2060],[230,2001],[235,2002],[259,2003],[421,2008],[422,2009],[423,2009],[424,2009],[425,2009],[426,2006],[430,2009],[431,2008],[478,2061],[558,757],[577,2062],[785,2015],[786,2015],[787,2016],[791,2016],[792,2016],[930,2063],[931,2064],[932,2018],[939,2063],[941,2064],[951,2020],[952,2020],[953,2023],[954,2022],[955,2023],[956,2022],[957,2019],[958,2019],[959,2019],[960,2020],[961,2020],[1317,2026],[1423,2037],[1441,2040],[1477,2045],[1480,2046],[1481,2044],[1482,2046],[1483,2044],[1564,2065],[1619,2048],[1621,2049],[1623,2049],[1626,2049],[1627,2049],[1628,2047],[1629,2051],[1631,2050],[1634,2049],[1946,1970],[1947,1970],[1948,0],[1956,1849],[1957,2066],[1958,2066],[1959,2066],[1960,2066],[1962,2066],[1963,2066],[1964,2066],[1965,2066]],"b":[[1321,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1322,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1323,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1324,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1344,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1345,"impl-PartialEq-for-StructArray"],[1350,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1352,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1372,"impl-StructArray"],[1373,"impl-Array-for-StructArray"],[1376,"impl-StructArray"],[1377,"impl-Array-for-StructArray"],[1389,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1390,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1391,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1392,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1400,"impl-StructArray"],[1401,"impl-Array-for-StructArray"],[1417,"impl-Array-for-StructArray"],[1418,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMYFrQAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGQB+AAMAhQABAIgADQCZAAAAngAGAKcADwC5AAIAvwADAMUAAgDNAAAA0AAAANUADgDqAAEA9gAAAAIBAQAFAQEAGwEQAC8BOQBuAQMAcwEIAIEBHACmAQQArwEBALMBKwDgATcAGQIEACQCAAAnAhEAQwIAAEUCAgBMAisAeQIIAIMCBwCbAgAAqQISAL0CFwDZAgQA4gIgAAQDAQAIAwAACgMGABIDAAAaAxgANQMhAFgDAABaAwIAYgMCAGYDAABoAwUAdAMCAHsDAwCAAxYAowMHAKwDAgCwAwEAtAMEALoDAAC9AwAAwAMAAMIDAADFAwMAygMlAPEDNgApBAMAOAQOAFMEAABVBAYAXgQ1AJYEAQCcBAEAoAQAAKMEAACmBAEAqQQBALAEJQDXBAAA3QQAAN8EBADrBBgABgUBAAwFAQAPBQgAGQUBABwFCQAnBQEAKgUJADUFDQBEBQEARwUAAEkFAABLBQAATQUCAFMFAABVBQAAXgUCAGIFAABlBQEAaAUNAHcFAQB6BQAAfQUBAIEFCQCMBQAAkQUAAJMFBwCeBQMApAUFAKwFAQC6BQIAvgUDAMMFAQDGBQAAyQUAAMsFAADOBQ0A3QUnAAoGCQAZBgAAGwYDACAGAAAiBgEAJQYBACgGAgAsBhIAQQYFAEgGAwBNBgIAUQYAAFMGAgBXBgAAWQYBAFwGAABeBgEAYQYBAGQGLgCVBjsA0wYFAOEGDwD5BgEA/AYBAP8GAAABBwUACQcpADgHAQA7BwAAQgcCAEYHBABMBwEATwcAAFEHBgBaBwQAYAcJAGsHBwB1BwIAgAcBAIkHAwCQBw0AnwcAAKEHAAClBwYArQcBAA=="}],\
["polars_lazy",{"t":"CQCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNONNMNNOOOONNNNNNNNNOMNNCNNMNNOONNNNNMNNOOONNNNNNONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","Replace","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","clone_to_uninit","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptState","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","cloud_options","coalesce","collect","collect_concurrently","complement","concat_impl","concat_impl","concat_impl","contains","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","fetch","fetch_blocking","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","fmt","fmt","fmt","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_fallible_iter","from_iter","from_name","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","hive_options","how","include_file_paths","include_file_paths","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","not","null_count","on","optimize","parallel","paths","paths","paths","pivot","profile","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","remove","rename","reverse","right_on","rolling","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unique","unique_stable","unnest","unpivot","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_include_file_paths","with_include_file_paths","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_page_size","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","to_writer","to_writer","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","write_df_to_file","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1535,"polars_lazy::dsl::AggExpr"],[1542,"polars_lazy::dsl::BooleanFunction"],[1545,"polars_lazy::dsl::Expr"],[1580,"polars_lazy::dsl::FunctionExpr"],[1625,"polars_lazy::dsl::StringFunction"],[1645,"polars_lazy::dsl::TemporalFunction"],[1647,"polars_lazy::dsl::binary"],[1667,"polars_lazy::dsl::cat"],[1668,"polars_lazy::dsl::dt"],[1724,"polars_lazy::dsl::function_expr"],[1941,"polars_lazy::dsl::function_expr::BooleanFunction"],[1944,"polars_lazy::dsl::function_expr::FunctionExpr"],[1989,"polars_lazy::dsl::function_expr::StringFunction"],[2009,"polars_lazy::dsl::function_expr::TemporalFunction"],[2011,"polars_lazy::dsl::function_expr::cat"],[2013,"polars_lazy::dsl::function_expr::pow"],[2017,"polars_lazy::dsl::function_expr::rolling"],[2050,"polars_lazy::dsl::function_expr::rolling_by"],[2082,"polars_lazy::dsl::function_expr::trigonometry"],[2126,"polars_lazy::dsl::functions"],[2201,"polars_lazy::dsl::python_udf"],[2247,"polars_lazy::dsl::string"],[2308,"polars_lazy::dsl::udf"],[2314,"polars_lazy::frame"],[2791,"polars_lazy::frame::pivot"],[2793,"polars_lazy::prelude"],[3417,"polars_lazy::prelude::DslPlan"],[3472,"polars_lazy::prelude::LiteralValue"],[3475,"dyn_clone::sealed"],[3476,"polars_plan::dsl::meta"],[3477,"polars_plan::dsl::expr"],[3478,"polars_error"],[3479,"core::result"],[3480,"polars_plan::dsl::array"],[3481,"polars_plan::dsl::list"],[3482,"core::convert"],[3483,"polars_plan::dsl::expr_dyn_fn"],[3484,"alloc::sync"],[3485,"polars_core::series"],[3486,"core::option"],[3487,"core::ops::function"],[3488,"core::marker"],[3489,"polars_plan::plans::visitor"],[3490,"polars_plan::dsl::function_expr"],[3491,"polars_core::datatypes::dtype"],[3492,"polars_core::chunked_array::ops::sort::options"],[3493,"polars_plan::dsl::function_expr::schema"],[3494,"polars_core::datatypes::field"],[3495,"core::any"],[3496,"alloc::vec"],[3497,"polars_plan::dsl::binary"],[3498,"core::clone"],[3499,"alloc::string"],[3500,"polars_plan::dsl::udf"],[3501,"polars_core::chunked_array::cast"],[3502,"polars_plan::dsl::cat"],[3503,"polars_plan::dsl::arity"],[3504,"polars_plan::dsl::function_expr::boolean"],[3505,"polars_plan::dsl::function_expr::cat"],[3506,"polars_plan::dsl::function_expr::datetime"],[3507,"polars_plan::dsl::function_expr::pow"],[3508,"polars_plan::dsl::function_expr::strings"],[3509,"polars_plan::dsl::function_expr::struct_"],[3510,"polars_plan::dsl::functions::temporal"],[3511,"polars_plan::dsl::options"],[3512,"polars_core::utils"],[3513,"polars_lazy::dsl::eval"],[3514,"polars_time::windows::duration"],[3515,"polars_time::windows::group_by"],[3516,"polars_core::datatypes::time_unit"],[3517,"serde::de"],[3518,"polars_plan::plans"],[3519,"polars_core::series::ops"],[3520,"polars_plan::dsl::dt"],[3521,"polars_lazy::dsl::list"],[3522,"polars_arrow::legacy::kernels::ewm"],[3523,"polars_plan::dsl::struct_"],[3524,"polars_core::chunked_array::ops"],[3525,"core::fmt"],[3526,"polars_plan::plans::apply"],[3527,"polars_plan::dsl::function_expr::list"],[3528,"polars_plan::dsl::function_expr::array"],[3529,"polars_plan::dsl::function_expr::business"],[3530,"polars_plan::dsl::function_expr::binary"],[3531,"polars_plan::dsl::function_expr::range"],[3532,"polars_plan::plans::options"],[3533,"polars_core::schema"],[3534,"core::hash"],[3535,"polars_ops::series::ops::interpolation::interpolate"],[3536,"polars_ops::series::ops::is_between"],[3537,"polars_plan::dsl::name"],[3538,"polars_plan::plans::lit"],[3539,"polars_plan::dsl::python_udf"],[3540,"polars_utils::idx_vec"],[3541,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3542,"polars_ops::series::ops::rank"],[3543,"polars_time::group_by::dynamic"],[3544,"polars_core::chunked_array::ops::rolling_window"],[3545,"polars_core::datatypes"],[3546,"polars_core::chunked_array"],[3547,"polars_time::chunkedarray::rolling_window"],[3548,"polars_core::chunked_array::ops::search_sorted"],[3549,"serde::ser"],[3550,"polars_core::series::series_trait"],[3551,"polars_plan::dsl::string"],[3552,"polars_ops::chunked_array::list::to_struct"],[3553,"polars_ops::series::ops::business"],[3554,"polars_arrow::legacy::kernels::time"],[3555,"polars_plan::dsl::function_expr::rolling"],[3556,"polars_plan::dsl::function_expr::rolling_by"],[3557,"polars_plan::dsl::function_expr::trigonometry"],[3558,"polars_core::frame"],[3559,"rayon::iter"],[3560,"pyo3::types::any"],[3561,"pyo3::instance"],[3562,"polars_utils::arena"],[3563,"polars_plan::plans::ir"],[3564,"polars_plan::plans::aexpr"],[3565,"polars_plan::frame::opt_state"],[3566,"polars_plan::plans::anonymous_scan"],[3567,"polars_lazy::scan::anonymous_scan"],[3568,"polars_utils::index"],[3569,"polars_lazy::frame::exitable"],[3570,"polars_utils::aliases"],[3571,"polars_lazy::scan::csv"],[3572,"polars_lazy::scan::ipc"],[3573,"polars_lazy::scan::ndjson"],[3574,"polars_lazy::scan::parquet"],[3575,"polars_lazy::scan::file_list_reader"],[3576,"polars_io::cloud::options"],[3577,"polars_ops::frame::join::args"],[3578,"core::iter::traits::collect"],[3579,"polars_utils::iter::fallible"],[3580,"bitflags::iter"],[3581,"std::path"],[3582,"polars_io::options"],[3583,"polars_io::csv::write::options"],[3584,"polars_io::ipc::write"],[3585,"polars_io::json"],[3586,"polars_io::parquet::write::options"],[3587,"smartstring::alias"],[3588,"polars_core::frame::explode"],[3589,"core::num::nonzero"],[3590,"polars_io::csv::read::options"],[3591,"chrono_tz::timezones"],[3592,"core::cmp"],[3593,"polars_core::frame::group_by::proxy"],[3594,"polars_core::datatypes::any_value"],[3595,"std::io"],[3596,"polars_io::parquet::write::writer"],[3597,"chrono::naive::datetime"],[3598,"polars_plan::dsl::functions::selectors"],[3599,"polars_plan::dsl::functions::horizontal"],[3600,"polars_plan::dsl::functions::arity"],[3601,"polars_plan::dsl"],[3602,"polars_plan::dsl::functions::range"],[3603,"polars_plan::dsl::functions::index"],[3604,"polars_plan::dsl::functions::coerce"],[3605,"polars_plan::dsl::functions::syntactic_sugar"],[3606,"polars_plan::dsl::functions::business"],[3607,"polars_plan::dsl::functions::concat"],[3608,"polars_plan::dsl::functions::correlation"],[3609,"polars_plan::dsl::functions::repeat"],[3610,"polars_plan::client"]],"i":[0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,68,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,67,0,0,0,27,59,59,59,5,60,60,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,67,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,67,0,59,60,59,5,27,36,5,59,59,68,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,60,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,66,59,59,27,27,27,40,27,0,60,27,36,57,27,27,27,27,27,27,5,0,60,27,59,27,27,57,27,59,27,66,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,0,5,60,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,60,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,65,61,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,65,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,5,0,64,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,50,51,52,53,36,5,54,40,40,17,55,56,57,58,58,59,60,27,61,62,63,63,64,65,66,67,67,68,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,71,71,5,0,0,0,0,61,62,63,5,17,17,17,61,62,64,65,66,67,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,60,60,60,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,68,68,68,83,83,5,5,5,5,64,5,5,5,5,5,85,85,85,5,5,5,5,0,10,5,5,17,5,5,34,47,44,89,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,60,60,27,27,61,62,63,64,65,66,67,68,46,0,65,64,0,5,49,9,32,10,4,108,85,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,60,27,27,27,27,27,61,62,63,64,65,66,66,67,68,46,17,46,0,5,0,10,5,10,5,9,10,5,49,77,15,32,34,89,5,5,4,36,5,5,54,40,55,56,57,58,59,60,27,63,64,65,66,67,68,10,5,5,61,62,5,0,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,46,0,0,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,105,10,4,40,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,85,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,61,62,62,0,9,10,5,0,63,61,62,5,61,5,9,10,5,5,46,5,5,62,5,5,5,32,32,17,61,62,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,85,0,5,5,32,5,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,65,65,17,5,10,10,5,5,61,62,36,5,54,40,17,17,17,55,56,57,58,59,60,27,63,64,65,66,67,68,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,64,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,61,62,61,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,5,32,5,40,55,56,57,58,59,60,27,9,10,108,5,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,32,32,5,32,34,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,85,50,51,52,53,36,5,54,40,17,55,56,57,58,59,60,27,61,62,63,64,65,66,67,68,46,62,0,51,53,63,61,61,62,32,85,62,61,62,61,62,61,62,62,61,62,61,62,32,32,61,62,61,61,62,61,5,61,202,203,204,202,203,204,202,205,206,207,208,209,210,210,211,212,208,213,214,215,216,217,213,212,215,209,218,217,219,218,218,219,210,211,215,216,217,216,217,216,214,212,219,208,214,220,221,222,223,224,225,226,227,228,229,230,231,231,223,224,220,223,224,220,224,220,232,233,225,234,235,236,236,221,235,237,238,239,240,236,220,241,242,243,244,245,246,237,234,236,247,248,249,250,251,252,247,248,253,250,251,252,254,255,256,256,253,249,254,255,257,257,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,60,60,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,60,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,60,57,27,55,27,57,57,59,59,27,27,27,27,0,60,27,57,27,27,27,27,27,27,60,27,59,27,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,0,60,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,60,57,57,59,0,0,0,0,0,205,206,207,220,221,222,223,224,225,226,227,228,229,230,231,231,223,224,220,223,224,220,224,220,232,233,225,234,235,236,236,221,235,237,238,239,240,236,220,241,242,243,244,245,246,237,234,236,247,248,249,250,251,252,247,248,253,250,251,252,254,255,256,256,253,249,254,255,257,257,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,0,0,0,0,0,61,62,0,0,0,0,0,0,0,0,0,61,62,62,0,61,62,61,62,0,0,0,0,0,0,0,61,62,0,0,0,0,61,62,61,62,61,0,0,0,0,139,111,139,111,139,111,139,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,148,148,148,148,148,148,0,0,0,0,0,0,0,0,148,0,148,148,148,148,148,148,0,0,0,148,154,136,147,151,156,157,158,159,148,136,136,147,148,149,136,136,147,148,148,148,148,148,148,148,148,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,136,136,157,159,154,136,136,154,136,147,151,156,157,158,159,148,154,136,147,151,156,157,158,159,148,154,136,147,151,156,157,158,159,148,148,160,160,156,158,157,159,149,136,136,148,160,160,156,148,136,136,136,151,157,159,148,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,136,136,136,136,148,149,154,154,136,136,147,151,156,157,158,159,148,136,136,148,136,136,148,154,136,154,136,136,136,149,160,160,156,158,160,156,158,136,148,148,148,148,148,149,149,154,136,136,136,147,151,156,157,158,159,148,148,148,148,148,148,148,148,136,136,160,160,156,159,136,136,136,147,157,159,149,157,159,151,149,154,136,147,151,156,157,158,159,148,136,148,148,148,149,154,136,147,151,156,157,158,159,148,148,148,148,148,148,136,136,149,136,170,136,136,149,136,136,147,158,159,136,136,136,136,136,157,136,136,160,156,158,151,157,159,151,149,156,158,156,158,148,136,149,136,159,160,156,158,0,136,136,160,156,158,157,159,148,136,136,149,136,160,156,158,151,157,159,136,136,136,136,136,136,151,136,136,136,136,148,136,136,136,136,136,136,136,136,136,151,136,136,136,136,148,148,149,136,148,136,147,136,136,136,154,136,147,151,156,157,158,159,148,148,136,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,149,154,136,147,151,156,157,158,159,148,148,136,136,136,136,159,149,136,149,154,136,147,151,156,157,158,159,148,149,158,156,156,158,136,136,136,136,136,136,156,136,156,156,156,156,156,156,156,158,156,158,156,158,156,156,160,156,156,158,158,136,156,136,160,156,158,136,136,156,156,160,156,158,136,160,136,156,156,158,158,156,158,156,158,156,136,156,156,136,136,156,156,136,136,0,0,0,0,0,166,166,189,190,190,79,166,0,79,190,190,190,189,79,0,0,190,0,79,79,190,190,190,166,79,79,79,79,166,190,190,190,190,190,0,79,0,0,0,0,166,0,0,184,184,79,189,189,0,0,190,184,184,189,0,0,79,190,0,0,166,0,79,79,166,190,79,79,79,190,190,190,190,190,190,190,79,0,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,79,74,74,74,150,150,150,150,176,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,79,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,79,165,116,74,74,169,166,184,184,176,177,177,189,189,115,115,178,178,179,179,190,191,138,138,79,165,116,74,169,74,177,179,79,179,74,74,165,116,169,184,176,177,115,178,179,191,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,115,79,79,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,79,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,165,165,165,116,116,116,74,74,74,169,169,169,166,166,166,184,184,184,176,176,176,177,177,177,178,178,178,179,179,179,191,191,191,138,138,138,165,165,116,74,74,150,169,166,166,184,184,176,177,189,115,178,179,190,191,138,191,165,116,74,196,169,169,166,184,176,195,177,189,115,178,179,190,191,138,79,138,190,193,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,169,176,165,176,165,116,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,79,166,74,74,184,74,169,165,109,74,195,190,176,177,178,179,190,115,74,74,74,196,74,184,74,74,74,169,165,116,196,138,74,74,74,165,116,196,0,138,193,179,150,150,196,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,79,176,169,191,169,165,179,169,169,79,190,165,116,74,169,166,184,176,177,189,115,178,179,190,191,138,79,74,166,184,138,177,179,74,74,74,74,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,190,191,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,169,165,116,74,196,169,166,184,176,195,177,189,115,178,179,190,191,138,79,74,74,169,196,169,177,179,258,258,259,260,261,262,263,264,265,266,267,267,263,268,267,261,269,261,265,258,266,270,260,271,268,262,272,273,273,259,274,258,273,271,258,264,271,275,265,258,273,266,270,274,263,267,272,269,267,273,267,263,260,260,264,276,276,276],"f":"````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}0000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}0000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Cf}}}Cf}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}000000000000000000000000{{{b{c}}}f{}}0000000000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hj{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHl}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HnjI`Af}j}0{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIdIf}j}{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{Ij}}}}}}{{}{{Bb{{B`{An}}}}}}{{}Gj}{{}Gl}{{}H`}{{}Hb}{{}Hd}{{}Hf}{jj}{I`{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}11111111111111111{I`{{b{C`c}}}{}}0000000000000000000000000000000{c{{n{Dh}}}Il}{c{{n{j}}}Il}{c{{n{Fl}}}Il}{c{{n{E`}}}Il}{c{{n{{Bb{Bd}}}}}Il}{c{{n{{Bb{{B`{Dd}}}}}}}Il}{c{{n{{Bb{{B`{In}}}}}}}Il}{c{{n{Fn}}}Il}{c{{n{G`}}}Il}{c{{n{Gb}}}Il}{c{{n{Gd}}}Il}{c{{n{Gf}}}Il}{c{{n{Gh}}}Il}{c{{n{Cf}}}Il}{c{{n{Gn}}}Il}{c{{n{H`}}}Il}{c{{n{Hb}}}Il}{c{{n{Hd}}}Il}{c{{n{Hf}}}Il}{c{{n{Hh}}}Il}{{AdChJ`}j}{{jChJ`}j}{{jj}}{{jc}j{{Al{j}}}}{I`f}0000000000000000000000000000000{jj}{Adj}1`{jJb}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jIbAf}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJd}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Gh}}{b{Gh}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{{b{Hh}}{b{Hh}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000000{{JfjAf}j}0{{jJh}j}{{jjId}j}11`{{jc}j{{Hj{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JjCh}j}{{Jj{b{A`}}}j}{{Jj{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJl}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{En}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Eh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Kb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{j}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Fl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{E`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{{Bb{c}}}}{b{C`Jn}}}{{n{fK`}}}{}}{{{b{Fn}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{G`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gb}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gd}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gh}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Cf}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{Gj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Gn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{H`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Hh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{El}}{b{C`Jn}}}{{n{fK`}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Dlj}{Afj}{Kdj}{Ibj}{Kfj}{Khj}{Dhj}{Efj}8{{{b{A`}}}j}{Chj}{Hlj}{Kjj}{Klj}=={Kn{{Bb{{B`{Dd}}}}}}>{Fn{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Gb{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Gf{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Gh{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}{cc{}}00000{GfCf}{G`Cf}{LdCf}{FnCf}444444{HfHd}5555{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jI`I`}j}{{AbjAf}j}43{Fbj}{{{b{Ij}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}{{n{Dbl}}}}{{{b{D`}}}I`}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Kb}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{{b{j}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Gh}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{{b{Hh}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{I`}}}j}{{j{Bh{j}}{Bh{I`}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}I`}0000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}0000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{{b{E`}}}Af}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}???{{jc}j{{Al{j}}}}{jj}0000000330{{AbjAf}j}{{AdjAf}j}{Jjj}{Mhj}{{jAfAf}j}{{}j}{Adj}7107{jAd}{cjMj}{{jIb}j}:;;:;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{{n{Dbl}}}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{{n{Dbl}}}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gj}{{}Gl}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hf}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHl}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{Ib}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jI`{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jj{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{j{b{{Ah{Ch}}}}Hh}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGn}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jI`c}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{Ib}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdIbNj}j}{{jjNdIbOb}j}{{jI`Af}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKl}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{{B`{In}}}}}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Gh}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{{b{Hh}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHlAf}j}8{{AbHl}j}{{AdHl}j}{{jHl}j}{jOj}`{{jCj}j}`{jJj}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{I`}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIdIf}j}```{{AdI`}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}000000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}00000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}I`}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}0000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHl}j}{{AdHl}j}{{jHl}j}{ce{}{}}0000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Gjj}Gj}0{{Glj}Gl}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jj{Dj{j}}}{{n{jl}}}}{{Gljjj}Gl}{{Gjjjj}Gj}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GjIh}Gj}{{Gj{Bh{Ej}}}Gj}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{cc{}}87{{}I`}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{Jbj{Ed{Af}}{Dj{Ef}}A@`}j}{Jbj}<;{{JbIh}j}1{{JbjIh}j}{{JbEj}j}333<;:393873333333333{{Jbj}j}44{{Jb{Bh{Ej}}jA@b}j}15{{Jb{b{A`}}}j}65066666662998:6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@d}}}Il}{I`f}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@f}}}Il}{I`f}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}0{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{c{{n{A@h}}}Il}{I`f}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jn}}}{{n{fK`}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}I`}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hj{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHl}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIdIf}j}0{Gjj}{{jjIdIf{Bh{Ih}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Glj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHl}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGn}j}0``{{jjHlAf}j}6{{jjIdIf}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{{{b{c}}}f{}}{I`{{b{c}}}{}}0{I`{{b{C`c}}}{}}0{c{{n{AAf}}}Il}{I`f}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jn}}}{{n{fK`}}}}{cc{}}{{{AAj{AAh}}}AAf}1{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}I`}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hl}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{I`{{b{c}}}{}}{I`{{b{C`c}}}{}}{I`f}3{{OjjI`}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}I`}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{I`}}}j}:>>{{OjI`AAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjH`j}j}{{Ojj}j}{{OjH`}j}{{Oj{Bh{Ih}}{Bh{Ej}}H`j}j}{{OjI`}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6`````````````````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{}ABh}{{ABjAf}ABj}{{{B`{ABl}}ABn}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcAC`}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{ABhABh}ABh}{{{b{C`ABh}}ABh}f}10{{{b{ABh}}}Kl}021{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACd}}}f}{{AA`{ACf{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACd}}}ACd}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABn}}}ABn}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{ABh}}}ABh}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{c}}}f{}}000000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0{{{b{ACh}}}{{Bh{{b{ADb}}}}}}{{{b{ACl}}}{{Bh{{b{ADb}}}}}}``{{ABjADd}ABj}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACd}}}}{ABhABh}{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACh}}{Dj{AA`}}}{{A@l{AA`}}}}{{{b{ABh}}ABh}Af}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABn}{{}ACj}{{}ACn}{{}ABh}{I`{{b{c}}}{}}000000000{I`{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{{ABhABh}ABh}{I`f}{{{b{C`ACd}}}f}11{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}22222220{{AA`{Bh{{Dj{j}}}}}AA`}8{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{{b{C`ABh}}c}f{{ADf{}{{A@n{ABh}}}}}}{{{b{ACd}}}{{Bh{{A@l{A@j}}}}}}{{AA`I`}{{A@l{A@j}}}}{{{b{ACd}}}{{A@l{A@j}}}}{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABjAA`}{AD`{{A@l{AA`}}}}0{ACh{{A@l{AA`}}}}{ACl{{A@l{AA`}}}}210{AA`AA`}{{{b{ABh}}{b{C`Jn}}}{{n{fK`}}}}0000{{ABjAf}ABj}{cc{}}0{InAA`}1{ABfAA`}2222222{Kl{{Bh{ABh}}}}{KlABh}00{g{{n{ic}}}{}{}{{ADh{c}{{A@n{e}}}}}{}}{cABh{{ADf{}{{A@n{ABh}}}}}}{{{b{A`}}}{{Bh{ABh}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ABh}{{{b{AD`}}}Af}0{{{b{ACh}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADj}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{I`}}}AA`}``{{ABjADl}ABj}```{{}I`}0000000008{{{b{C`ABh}}ABh}f}{{ABhABh}ABh}{{{b{ABh}}ABh}Af}{ce{}{}}000000000{ABh}{{{b{ABh}}}Af}0{{{b{ABh}}}{{ADn{ABh}}}}{{{b{ABh}}}{{AE`{ABh}}}}{{AA`AA`ccAEb}AA`{{Aj{{Ah{j}}}}}}{AA`ABj}{{ABjAf}ABj}{AA`AA`}{AEdAA`}1{{AA`AA`cc}AA`{{Al{j}}}}{{ABjc}ABj{{Aj{{Ah{j}}}}}}{{AA`ACb}AA`}``{{AClAf}ACl}`{{AA`cAEf{Bh{{B`{Kb}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEf{Bh{AC`}}Af}AA`}777`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}8{{{b{AD`}}}{{Bh{I`}}}}{{{b{ACh}}}{{Bh{I`}}}}{{{b{ACl}}}{{Bh{I`}}}}````={cACh{{Aj{AEh}}}}{cACl{{Aj{AEh}}}}{{{B`{{Ah{AEj}}}}}ACh}{{{B`{{Ah{AEj}}}}}ACl}{ABhABh}{AA`AA`}>{{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{{Ah{AEj}}}}}}{{{b{ACh}}}{{b{{Ah{AEj}}}}}}{{{b{ACl}}}{{b{{Ah{AEj}}}}}}`{AA`{{A@l{{Nb{A@jA@j}}}}}}{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACh}}}Af}{{{b{ACl}}}Af}``{{{b{C`ABh}}ABh}f}{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}};{{ABjc}ABj{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}{{{b{AD`}}}{{Bh{{b{AEl}}}}}}{{{b{ACh}}}{{Bh{{b{AEl}}}}}}{{{b{ACl}}}{{Bh{{b{AEl}}}}}}```{{LjAEnAf}AA`}{{cACj}{{A@l{AA`}}}{{Aj{AEh}}}}{{{B`{{Ah{AEj}}}}ACj}{{A@l{AA`}}}}{{cACn}{{A@l{AA`}}}{{Aj{AEh}}}}{{{B`{{Ah{AEj}}}}ACn}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{AC`}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AC`}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{C`ABh}}ABhAf}f}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}{{AA`cAF`}{{A@l{f}}}{{Aj{AEh}}}}{{AA`cAFb}{{A@l{f}}}{{Aj{AEh}}}}{{AA`Ej{Bh{ADb}}AFb}{{A@l{f}}}}{{AA`cAFd}{{A@l{f}}}{{Aj{AEh}}}}{{AA`cAFf}{{A@l{f}}}{{Aj{AEh}}}}{{AA`Ej{Bh{ADb}}AFf}{{A@l{f}}}}`{{AA`ChACb}AA`}{{AA`cCn}AA`{{Hj{AFh}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hl}AA`}{{ABhABh}ABh}{{{b{C`ABh}}ABh}f}{{ABjc}ABj{{Aj{A`}}}}{AA`AA`}3{{AA`ACb}AA`}{{ABf{Bh{I`}}}AA`}{AA`{{A@l{AFj}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}000000007{{AA`ACbcCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000{{{b{c}}}On{}}000000000;{{AA`{Bh{{Dj{Ej}}}}AFl}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}{{AA`AFn}AA`}`{{ABjAG`}ABj}{{AA`Hl}AA`}{ce{}{}}000000000{{ABjAA`}ABj}{{ACl{Bh{AGb}}}ACl}{{AChAf}ACh}{{ACh{Bh{ADb}}}ACh}{{ACl{Bh{ADb}}}ACl}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACh{Bh{{b{A`}}}}}ACh}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}7{{ACh{Bh{AC`}}}ACh}{{AChAGd}ACh}{{AChHl}ACh}:::{{AClAf}ACl}{{ACh{Bh{{B`{A`}}}}}ACh}{{ACl{Bh{{B`{A`}}}}}ACl}{{ACh{Bh{I`}}}ACh}?>>{{AD`c}AD`{{Al{{Bh{I`}}}}}}{{AChc}ACh{{Al{{Bh{I`}}}}}}2{{AClc}ACl{{Al{{Bh{I`}}}}}}{{ACl{Bh{I`}}}ACl}?{{ACh{Bh{AGf}}}ACh}{{AA`ABh}AA`}{{AD`{B`{{Ah{AEj}}}}}AD`}{{ACh{B`{{Ah{AEj}}}}}ACh}{{ACl{B`{{Ah{AEj}}}}}ACl}{{AA`Af}AA`}0{{ACh{Bh{Hl}}}ACh}{{AChAf}ACh}{{AD`Af}AD`}1{{AClAf}ACl}4{{AD`c}AD`{{Al{{Bh{AEl}}}}}}{{AA`{b{A`}}{Bh{ACb}}}AA`}{{AChc}ACh{{Al{{Bh{AEl}}}}}}{{ACh{Bh{AEl}}}ACh}{{ACl{Bh{AEl}}}ACl}{{AClc}ACl{{Al{{Bh{AEl}}}}}}{{ACh{Bh{AC`}}}ACh}{{ACl{Bh{AC`}}}ACl}{{AChc}{{A@l{ACh}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}1{{AChHl}ACh}>{{AChI`}ACh}0??==?{AA`AA`}{{{b{A@j}}e{Bh{i}}{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0`````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Id}}Ch{Bh{{b{AGh}}}}}{{n{Chl}}}}00{{{b{ABl}}}Af}00{{{b{ABl}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADj}}}ADj}{{{b{Nh}}}Nh}{{{b{Id}}}Id}{{{b{AEb}}}AEb}{{{b{ADl}}}ADl}{{{b{AG`}}}AG`}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{{b{AGj}}}AGj}{{{b{Nf}}}Nf}{{{b{AFd}}}AFd}{{{b{AFf}}}AFf}{{{b{AGl}}}AGl}{{{b{AGn}}}AGn}{{{b{AAd}}}AAd}{{{b{In}}}In}{{{b{c}}{b{C`e}}}f{}{}}000000000000000{{{b{c}}}f{}}00000000000000000000000``{{{b{Id}}{b{Id}}}AH`}`{{{b{c}}{b{e}}}AH`{}{}}``{{{b{In}}}{{n{{B`{Lj}}l}}}}`{{{b{Id}}}Ch}{{{b{Id}}}Af}{{}ADj}{{}Nh}{{}AEb}{{}AG`}{{}AF`}{{}AFb}{{}Nf}{{}AFd}{{}AFf}{{}AGn}{{}AAd}{{}In}{I`{{b{c}}}{}}00000000000000000{I`{{b{C`c}}}{}}00000000000000000`{{{b{In}}}{{n{Ejl}}}}0{c{{n{ADj}}}Il}{c{{n{Nh}}}Il}{c{{n{Id}}}Il}{c{{n{AEb}}}Il}{c{{n{ADl}}}Il}{c{{n{AG`}}}Il}{c{{n{AF`}}}Il}{c{{n{AFb}}}Il}{c{{n{AGj}}}Il}{c{{n{Nf}}}Il}{c{{n{AFd}}}Il}{c{{n{AFf}}}Il}{c{{n{AGl}}}Il}{c{{n{AGn}}}Il}{c{{n{AAd}}}Il}{c{{n{In}}}Il}`{{{b{In}}}{{n{{`{Md}}l}}}}{I`f}00000000000000000{{{b{ADj}}{b{ADj}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Id}}{b{Id}}}Af}{{{b{AEb}}{b{AEb}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{AG`}}{b{AG`}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AGj}}{b{AGj}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AFf}}{b{AFf}}}Af}{{{b{AGl}}{b{AGl}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nh}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Id}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{ABl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AEb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{ADl}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AG`}}{b{C`Jn}}}{{n{fK`}}}}0{{{b{AF`}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AFb}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGj}}{b{C`Jn}}}{{n{fK`}}}}{{{b{Nf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AFd}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AFf}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGl}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AGn}}{b{C`Jn}}}{{n{fK`}}}}{{{b{AAd}}{b{C`Jn}}}{{n{fK`}}}}`{cc{}}000{ADlAEb}11111111111111`{{{b{AGl}}}Cj}{{{b{AHb}}{Dj{Bd}}{b{ADj}}}{{n{{Nb{Bd{Dj{Bd}}AHd}}l}}}}{{{b{ADj}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Id}}{b{C`c}}}fLn}{{{b{AEb}}{b{C`c}}}fLn}{{{b{ADl}}{b{C`c}}}fLn}{{{b{AG`}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{AFb}}{b{C`c}}}fLn}{{{b{AGj}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AFd}}{b{C`c}}}fLn}{{{b{AFf}}{b{C`c}}}fLn}{{{b{AGl}}{b{C`c}}}fLn}{{{b{AGn}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}I`}00000000000000000{ce{}{}}00000000000000000{{{b{In}}}}{{{b{ADl}}}Af}{{{b{Id}}{Bh{{b{A`}}}}}Af}{{{b{Id}}}Af}{{{b{AG`}}{b{ADl}}}{{n{fl}}}}1``{Mjj}{Idj}{AHfj}{AGlj}````{AGlAGl}`{{{b{Id}}}Ch}7{{IdCh}Id}`1{{{b{AG`}}}Af}{Id}:{ChId}{ADlAEb}````{{{b{A`}}}Id}`{{{b{Id}}{b{Id}}}{{Bh{AH`}}}}```{{InEj}{{n{{Dj{Hl}}l}}}}`{{{b{AHb}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AHd}}l}}}}`{{{b{ABl}}AHh}{{n{A@jl}}}}{{{b{ABl}}{Bh{I`}}}{{n{{B`{Lj}}l}}}}`{{{b{ADj}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Id}}c}nOf}{{{b{AEb}}c}nOf}{{{b{ADl}}c}nOf}{{{b{AG`}}c}nOf}{{{b{AF`}}c}nOf}{{{b{AFb}}c}nOf}{{{b{AGj}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AFd}}c}nOf}{{{b{AFf}}c}nOf}{{{b{AGl}}c}nOf}{{{b{AGn}}c}nOf}{{{b{AAd}}c}nOf}{{{b{In}}c}nOf}`{{{b{AEb}}}Af}````{{{b{AEb}}}{{b{A`}}}}`{In{{n{AFjl}}}}{{{b{AGl}}}{{Bh{AHj}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{AFb}}c}{{AHl{c}}}AHn}{{{b{AFf}}c}{{AI`{c}}}AHn}{{{b{Id}}Ch{Bh{{b{AGh}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AIb}}}}}{{Bj{AIb}{{Bf{Ch}}}}}}{{{b{Id}}Ch{Bh{{b{AGh}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}00000000000000{AHj{{n{AGll}}}}111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Id}}}Ch}{{{b{Id}}}Af}{{AEbADd}AEb}`{{AEb{Bh{Ej}}}AEb}{{{b{AFb}}A@jc}{{n{fl}}}AHn}{{{b{AFf}}A@jc}{{n{fl}}}AHn}``````````````````````````````````````````````````````````","D":"GHf","p":[[1,"reference"],[5,"Private",3475],[1,"unit"],[5,"MetaNameSpace",5,3476],[6,"Expr",5,3477],[6,"PolarsError",3478],[6,"Result",3479],[1,"str"],[5,"ArrayNameSpace",5,3480],[5,"ListNameSpace",5,3481],[1,"bool"],[1,"slice"],[10,"AsRef",3482],[10,"Into",3482],[10,"FunctionOutputField",5,3483],[5,"Arc",3484],[5,"SpecialEq",5,3483],[5,"Series",3485],[17,"Output"],[6,"Option",3486],[10,"Fn",3487],[10,"Send",3488],[10,"Sync",3488],[0,"mut"],[6,"VisitRecursion",3489],[10,"FnMut",3487],[6,"FunctionExpr",5,3490],[1,"i64"],[6,"DataType",3491],[5,"SortOptions",3492],[5,"SortMultipleOptions",3492],[5,"FieldsMapper",5,3493],[5,"Field",3494],[10,"SeriesUdf",5,3483],[10,"Any",3495],[6,"AggExpr",5,3477],[5,"Vec",3496],[1,"u64"],[5,"BinaryNameSpace",1647,3497],[6,"Operator",5,3477],[10,"Clone",3498],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3483],[5,"String",3499],[5,"UserDefinedFunction",5,3500],[10,"SeriesBinaryUdf",5,3483],[6,"CastOptions",3501],[5,"CategoricalNameSpace",5,3502],[5,"When",5,3503],[5,"Then",5,3503],[5,"ChainedWhen",5,3503],[5,"ChainedThen",5,3503],[6,"Excluded",5,3477],[6,"BooleanFunction",5,3504],[6,"CategoricalFunction",5,3505],[6,"TemporalFunction",5,3506],[6,"PowFunction",5,3507],[6,"StringFunction",5,3508],[6,"StructFunction",5,3509],[5,"DatetimeArgs",5,3510],[5,"DurationArgs",5,3510],[5,"RollingCovOptions",5,3511],[5,"StrptimeOptions",5,3511],[5,"JoinOptions",5,3511],[6,"WindowType",5,3511],[6,"WindowMapping",5,3511],[6,"NestedType",5,3511],[10,"IntoVec",3512],[1,"u8"],[10,"ExprEvalExtension",5,3513],[1,"usize"],[1,"f64"],[5,"Duration",2793,3514],[6,"ClosedWindow",3515],[6,"TimeUnit",3516],[10,"BinaryUdfOutputField",5,3483],[10,"Deserializer",3517],[6,"DslPlan",2793,3518],[6,"NullBehavior",3519],[5,"DateLikeNameSpace",1668,3520],[10,"Sized",3488],[10,"ListNameSpaceExtension",5,3521],[5,"EWMOptions",3522],[5,"StructNameSpace",5,3523],[6,"FillNullStrategy",3524],[5,"Formatter",3525],[5,"Error",3525],[10,"UdfSchema",5,3526],[1,"f32"],[1,"i8"],[1,"u16"],[1,"i16"],[1,"u32"],[6,"ListFunction",3527],[6,"ArrayFunction",3528],[6,"BusinessFunction",3529],[6,"BinaryFunction",3530],[6,"RangeFunction",3531],[5,"FunctionOptions",3532],[5,"Schema",3533],[6,"Context",3518],[10,"Hasher",3534],[6,"InterpolationMethod",3535],[10,"IntoListNameSpace",5,3521],[10,"Display",3525],[6,"ClosedInterval",3536],[5,"ExprNameNameSpace",5,3537],[10,"Literal",2793,3538],[10,"FnOnce",3487],[5,"PythonUdfExpression",2201,3539],[5,"UnitVec",3540],[1,"tuple"],[6,"QuantileInterpolOptions",3541],[5,"RankOptions",2793,3542],[5,"RollingGroupOptions",2793,3543],[5,"RollingOptionsFixedWindow",3544],[5,"Float64Type",3545],[5,"ChunkedArray",3546],[10,"Copy",3488],[5,"RollingOptionsDynamicWindow",3547],[6,"SearchSortedSide",3548],[10,"Serializer",3549],[6,"IsSorted",3550],[5,"StringNameSpace",2247,3551],[6,"ListToStructWidthStrategy",3552],[5,"TypeId",3495],[6,"Roll",3553],[6,"NonExistent",3554],[6,"RollingFunction",2017,3555],[6,"RollingFunctionBy",2050,3556],[6,"TrigonometricFunction",2082,3557],[5,"DataFrame",3558],[8,"PolarsResult",3478],[17,"Item"],[5,"LazyFrame",2314],[10,"IntoParallelIterator",3559],[5,"UnionArgs",2793,3532],[5,"PythonFunction",2201,3539],[5,"PyAny",3560],[5,"Py",3561],[1,"char"],[5,"Node",3562],[6,"IR",3563],[5,"Arena",3562],[6,"AExpr",3564],[5,"LazyGroupBy",2314],[5,"OptState",2314,3565],[5,"JoinBuilder",2314],[10,"AnonymousScan",2793,3566],[5,"ScanArgsAnonymous",2314,3567],[8,"SchemaRef",3533],[8,"IdxSize",3568],[5,"InProcessQuery",2314,3569],[8,"PlHashMap",3570],[5,"LazyCsvReader",2314,3571],[5,"ScanArgsIpc",2314,3572],[5,"LazyJsonLineReader",2314,3573],[5,"ScanArgsParquet",2314,3574],[10,"LazyFileListReader",2314,3575],[5,"CloudOptions",3576],[6,"JoinCoalesce",3577],[10,"IntoIterator",3578],[10,"FallibleIterator",3579],[5,"DynamicGroupOptions",2793,3543],[6,"JoinType",2793,3577],[5,"Iter",3580],[5,"IterNames",3580],[5,"JoinArgs",2793,3577],[10,"IntoLazy",2314],[8,"AllowedOptimizations",2314,3565],[5,"Path",3581],[5,"PathBuf",3581],[5,"RowIndex",3582],[8,"PyObject",3561],[5,"CsvWriterOptions",2793,3583],[5,"IpcWriterOptions",2793,3584],[5,"JsonWriterOptions",2793,3585],[5,"ParquetWriteOptions",2793,3586],[8,"String",3587],[5,"IRPlan",3563],[6,"UniqueKeepStrategy",3558],[5,"UnpivotArgs",3588],[6,"JoinValidation",2793,3577],[8,"NonZeroUsize",3589],[6,"CsvEncoding",3590],[6,"NullValues",3590],[6,"Tz",3591],[6,"RankMethod",2793,3542],[6,"LiteralValue",2793,3538],[5,"AnonymousScanOptions",2793,3532],[6,"Ordering",3592],[10,"PolarsTemporalGroupby",2793,3543],[6,"GroupsProxy",3593],[5,"Null",2793,3538],[5,"AnonymousScanArgs",2793,3566],[6,"AnyValue",3594],[5,"IpcWriter",3584],[10,"Write",3595],[5,"ParquetWriter",3596],[5,"NaiveDateTime",3597],[15,"Quantile",1535],[15,"Min",1535],[15,"Max",1535],[15,"IsBetween",1941],[15,"Any",1941],[15,"All",1941],[15,"SortBy",1545],[15,"Filter",1545],[15,"Cast",1545],[15,"Sort",1545],[15,"Gather",1545],[15,"RenameAlias",1545],[15,"Ternary",1545],[15,"Function",1545],[15,"Window",1545],[15,"AnonymousFunction",1545],[15,"Slice",1545],[15,"BinaryExpr",1545],[15,"QCut",1944],[15,"Entropy",1944],[15,"Log",1944],[15,"Hist",1944],[15,"Cut",1944],[15,"Correlation",1944],[15,"Round",1944],[15,"TopK",1944],[15,"TopKBy",1944],[15,"RoundSF",1944],[15,"EwmMeanBy",1944],[15,"Clip",1944],[15,"BackwardFill",1944],[15,"ForwardFill",1944],[15,"Random",1944],[15,"GatherEvery",1944],[15,"ValueCounts",1944],[15,"Rank",1944],[15,"EwmMean",1944],[15,"EwmStd",1944],[15,"EwmVar",1944],[15,"ReplaceStrict",1944],[15,"CumCount",1944],[15,"CumSum",1944],[15,"CumProd",1944],[15,"CumMin",1944],[15,"CumMax",1944],[15,"ConcatHorizontal",1989],[15,"ConcatVertical",1989],[15,"ExtractGroups",1989],[15,"JsonDecode",1989],[15,"PadStart",1989],[15,"PadEnd",1989],[15,"SplitExact",1989],[15,"Contains",1989],[15,"Find",1989],[15,"Replace",1989],[15,"DatetimeFunction",2009],[15,"GroupBy",3417],[15,"Union",3417],[15,"Sort",3417],[15,"Cache",3417],[15,"ExtContext",3417],[15,"DataFrameScan",3417],[15,"IR",3417],[15,"Select",3417],[15,"HStack",3417],[15,"Scan",3417],[15,"MapFunction",3417],[15,"Filter",3417],[15,"Distinct",3417],[15,"Slice",3417],[15,"Sink",3417],[15,"Join",3417],[15,"HConcat",3417],[15,"PythonScan",3417],[15,"Range",3472]],"r":[[7,3477],[21,3480],[30,3483],[32,3504],[37,3505],[38,3502],[42,3503],[43,3503],[66,3510],[76,3510],[86,3477],[90,3477],[91,3513],[92,3537],[100,3493],[101,3537],[111,3490],[112,3483],[118,3483],[132,3521],[148,3511],[160,3481],[161,3521],[176,3476],[195,3511],[202,3477],[213,3507],[225,3483],[236,3511],[245,3483],[246,3483],[257,3483],[265,3508],[272,3511],[274,3509],[275,3523],[282,3506],[284,3503],[304,3526],[309,3500],[314,3503],[317,3511],[318,3511],[358,3598],[362,3599],[369,3599],[372,3600],[376,3601],[378,3602],[393,3603],[395,3603],[401,3604],[402,3605],[404,3601],[406,3503],[473,3606],[480,3605],[483,3601],[569,3599],[570,3598],[571,3598],[572,3607],[573,3607],[574,3607],[583,3608],[585,3599],[589,3599],[594,3602],[595,3510],[596,3602],[597,3602],[736,3601],[738,3598],[739,3598],[740,3510],[827,3601],[867,3599],[870,3607],[935,3601],[978,3598],[1012,3602],[1013,3602],[1064,3605],[1066,3605],[1076,3601],[1079,3601],[1083,3538],[1093,3600],[1104,3601],[1107,3601],[1114,3605],[1118,3599],[1119,3605],[1122,3599],[1123,3605],[1131,3605],[1135,3599],[1161,3605],[1163,3601],[1175,3608],[1182,3601],[1185,3605],[1189,3599],[1193,3609],[1206,3608],[1207,3608],[1280,3608],[1288,3601],[1293,3605],[1297,3599],[1303,3503],[1306,3602],[1456,3601],[1504,3503],[1647,3497],[1667,3502],[1668,3520],[1741,3504],[1745,3505],[1792,3490],[1854,3507],[1893,3508],[1901,3509],[1906,3506],[1936,3490],[1937,3490],[1938,3490],[1939,3490],[1940,3490],[2011,3505],[2015,3507],[2021,3555],[2054,3556],[2097,3557],[2126,3510],[2127,3510],[2128,3598],[2129,3599],[2131,3599],[2132,3600],[2133,3602],[2134,3603],[2135,3603],[2136,3604],[2137,3605],[2138,3605],[2139,3599],[2140,3598],[2142,3598],[2144,3607],[2147,3607],[2148,3607],[2149,3608],[2150,3599],[2151,3599],[2152,3602],[2153,3602],[2154,3510],[2155,3602],[2156,3602],[2159,3598],[2160,3598],[2161,3510],[2162,3599],[2163,3607],[2166,3598],[2167,3602],[2168,3602],[2169,3605],[2170,3605],[2171,3600],[2172,3605],[2173,3605],[2174,3605],[2178,3605],[2183,3605],[2184,3608],[2185,3605],[2186,3599],[2187,3609],[2188,3608],[2189,3608],[2192,3608],[2193,3605],[2194,3602],[2195,3602],[2201,3539],[2202,3539],[2203,3539],[2204,3539],[2247,3551],[2308,3500],[2314,3565],[2321,3569],[2324,3571],[2325,3575],[2328,3573],[2330,3565],[2337,3567],[2338,3572],[2339,3574],[2793,3566],[2794,3566],[2795,3532],[2803,3583],[2810,3518],[2811,3514],[2813,3543],[2830,3584],[2832,3577],[2833,3577],[2834,3577],[2835,3585],[2837,3538],[2838,3538],[2844,3538],[2845,3538],[2850,3586],[2851,3543],[2854,3542],[2855,3542],[2857,3543],[2873,3532],[3277,3610]],"b":[[602,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[603,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[604,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[681,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[682,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[683,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[743,"impl-Expr"],[744,"impl-PartialEq-for-Expr"],[747,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[748,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[838,"impl-Display-for-Expr"],[839,"impl-Debug-for-Expr"],[841,"impl-Display-for-Operator"],[842,"impl-Debug-for-Operator"],[844,"impl-Debug-for-BooleanFunction"],[845,"impl-Display-for-BooleanFunction"],[846,"impl-Display-for-CategoricalFunction"],[847,"impl-Debug-for-CategoricalFunction"],[848,"impl-Display-for-TemporalFunction"],[849,"impl-Debug-for-TemporalFunction"],[850,"impl-Debug-for-PowFunction"],[851,"impl-Display-for-PowFunction"],[852,"impl-Display-for-StringFunction"],[853,"impl-Debug-for-StringFunction"],[854,"impl-Display-for-StructFunction"],[855,"impl-Debug-for-StructFunction"],[856,"impl-Display-for-FunctionExpr"],[857,"impl-Debug-for-FunctionExpr"],[884,"impl-From%3Cu64%3E-for-Expr"],[885,"impl-From%3Cbool%3E-for-Expr"],[886,"impl-From%3Cf32%3E-for-Expr"],[887,"impl-From%3Cf64%3E-for-Expr"],[888,"impl-From%3Ci8%3E-for-Expr"],[889,"impl-From%3Cu16%3E-for-Expr"],[890,"impl-From%3CAggExpr%3E-for-Expr"],[891,"impl-From%3Ci32%3E-for-Expr"],[893,"impl-From%3C%26str%3E-for-Expr"],[894,"impl-From%3Ci64%3E-for-Expr"],[895,"impl-From%3Cu8%3E-for-Expr"],[896,"impl-From%3Ci16%3E-for-Expr"],[897,"impl-From%3Cu32%3E-for-Expr"],[900,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[902,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[903,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[904,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[905,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[906,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[907,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[908,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[909,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[910,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[911,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[918,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[919,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[920,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[921,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[955,"impl-Hash-for-Expr"],[956,"impl-Expr"],[1244,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1245,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1246,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2037,"impl-Display-for-RollingFunction"],[2038,"impl-Debug-for-RollingFunction"],[2069,"impl-Debug-for-RollingFunctionBy"],[2070,"impl-Display-for-RollingFunctionBy"],[2113,"impl-Display-for-TrigonometricFunction"],[2114,"impl-Debug-for-TrigonometricFunction"],[2362,"impl-OptState"],[2363,"impl-Flags-for-OptState"],[2500,"impl-Octal-for-OptState"],[2501,"impl-Debug-for-OptState"],[2502,"impl-Binary-for-OptState"],[2503,"impl-LowerHex-for-OptState"],[2504,"impl-UpperHex-for-OptState"],[2508,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2510,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2519,"impl-Flags-for-OptState"],[2520,"impl-OptState"],[2753,"impl-LazyFileListReader-for-LazyCsvReader"],[2754,"impl-LazyCsvReader"],[2755,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2756,"impl-LazyJsonLineReader"],[2773,"impl-LazyFileListReader-for-LazyCsvReader"],[2774,"impl-LazyCsvReader"],[2775,"impl-LazyJsonLineReader"],[2776,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3142,"impl-Display-for-Duration"],[3143,"impl-Debug-for-Duration"],[3146,"impl-Display-for-JoinType"],[3147,"impl-Debug-for-JoinType"],[3148,"impl-Display-for-JoinValidation"],[3149,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANAJ+wAEABEAFwAPACgAAgAtABUARAAIAE4ABwBXAAIAXAAAAF4AGQB5ABoAlQADAJoABgCiAA4AsgAVAMkABADPACUA+AAJAAMBEAAVAQYAHgEXADcBAwA8AQAAPgEkAGQBAABpAQAAbAEBAHABAAB2AQAAeAEAAIMBAACGAQAAjQEBAJABAQCVAQAAmAE/ANoBAADcAQAA3gEBAOQBAADrAU4APQIAAFcCDABlAlQAvAIAAL4CHwDfAgAA4QIAAOcCAADpAhEA/AIsADEDAAA0AwEAOgMAAEADAABDAyAAZQMAAHUDBwB+AwQAhQMAAIcDCQCXAwMAoQMAAKYDAACoAwAArQMBALIDBQC7AwEAvgMOANADAQDUAx8AGQQCAB0EAQAyBAAAOgQAAEcEAABKBAUAUwQAAFYEAABmBAAAaQQCAHEEAgB1BAMAfgQBAIIEAgCIBAEAlAQAAJYEAQCdBAAAnwQAAKcEAQCtBAAArwQAALEEAAC2BAIA0AQFANcEFQD2BAAA/QQAAAQFAAAJBQAACwUAAA0FAAATBQAAGAUAABoFAAAcBQIAIwUZAD4FCQBMBT8AjgUAAJAFIQC+BQAAwAUgAOQFAQDpBQAA9gUAAPoFAQD/BRMAFgYBABkGAQAcBgEAHwYGACcGSABxBgMAdgYCAHsGAgCABgMAiAYBAJEGAgCXBgAAmQYAAKYGAAC1BgMAvQY6AfkHAQD8BxsAGQgBABwIJwBFCAEASAgGAFMIAABhCAAAbggBAHUIAQCACAIAhAgDAI0IAwCVCB4AtQgAALcIAgC8CAsAyQgDANAIAgDWCAAA2wgCAOAIAQAACQMAEgkDABkJAQAiCQIAJgkJADQJAAA8CQAAPwkUAFUJAQBaCRsAegkBAH4JAACCCQAAhgkYAKQJAwCpCQYAwAkAAMIJAQDFCQQAzQkAAM8JAADYCQAA2wkAAOAJAgDoCQEA6wkMAAYKAAAPCgEAFAoBABcKAAAZCgAAHQoBACMKAwAoCgMALwoEADgKAwBECgMASQoAAE0KAQBQCgAAUwoAAFwKAABoCgEAawoIAHUKHgCZCgEAnAoJAKcKAACpCgEAsgoBALsKAQDCCgAAxAoAAMYKAADKCgEA1goAANkKAADoCgcA8woAAPYKAQD5CgAA+woDAAELAAAECwAACAsCAA8LAAARCwYAGwsCAB8LAAAiCwkALQsCADILAAA0CwAAOgsTAFELYgC4C4sARQwTAF0MAABsDAAAbgwRAIEMAACEDBEAqAwCAKwMAACuDAAAsQwDALgMBQC/DAEAwwwAAMUMAgDJDAEAzQwAAM8MAQDUDBUA6wyoAA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","clone_to_uninit","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[236,"polars_ops::prelude"],[238,"polars_ops::series"],[291,"polars_ops::chunked_array::binary"],[292,"polars_core::datatypes"],[293,"polars_ops::chunked_array::binary::namespace"],[294,"polars_ops::chunked_array::scatter"],[295,"polars_utils::index"],[296,"polars_core::series"],[297,"polars_error"],[298,"core::marker"],[299,"core::option"],[300,"core::iter::traits::collect"],[301,"polars_ops::chunked_array::list::namespace"],[302,"polars_core::datatypes::aliases"],[303,"polars_core::chunked_array::ops::sort::options"],[304,"polars_core::frame"],[305,"dyn_clone::sealed"],[306,"polars_ops::frame::join::hash_join"],[307,"polars_ops::frame::join::args"],[308,"alloc::string"],[309,"polars_ops::frame::join::cross_join"],[310,"core::fmt"],[311,"core::convert"],[312,"core::hash"],[313,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[314,"polars_arrow::array::primitive"],[315,"core::result"],[316,"core::any"],[317,"polars_ops::series::ops::arg_min_max"],[318,"polars_ops::series::ops"],[319,"polars_core::chunked_array::ops::search_sorted"],[320,"polars_ops::series::ops::various"],[321,"polars_ops::frame::join::general"],[322,"polars_ops::series::ops::clip"],[323,"polars_ops::series::ops::horizontal"],[324,"polars_ops::series::ops::index"],[325,"polars_ops::series::ops::negate"],[326,"polars_ops::series::ops::not"],[327,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,35,36,0,0,36,36,0,0,0,0,35,0,0,35,36,0,37,37,37,37,36,0,32,35,36,37,0,31,31,0,31,31,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,35,35,36,37,37,35,32,38,38,38,38,32,35,37,0,32,35,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,35,35,35,36,36,36,37,37,37,32,35,36,36,37,37,32,32,35,36,37,43,32,35,36,37,46,46,46,46,32,32,35,36,37,43,32,35,36,37,36,37,43,32,43,37,32,0,32,32,32,32,32,35,36,37,36,37,32,35,36,37,32,35,36,37,32,35,36,37,32,32,32,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}````````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}D`}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Db}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Ddc}}}{{d{Dde}}}{}{}}000{{{d{D`}}}D`}{{{d{Df}}}Df}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{c}}{d{Dde}}}Cl{}{}}000{{{d{c}}}Cl{}}00000{{{d{Df}}{d{Dh}}}Bh}`{{{d{Dl}}{d{Ch}}{Al{{d{Bf}}}}{Al{{Dn{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dl}}{d{Ch}}{Al{{Dn{BnC`}}}}Bh}{{Af{{Dn{ChCh}}}}}}0{{}D`}{{}Df}{{}Dj}{{}E`}{C`{{d{c}}}{}}000{C`{{d{Ddc}}}{}}000{C`Cl}000{{{d{D`}}{d{D`}}}Bh}{{{d{Df}}{d{Df}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{D`}}{d{DdEb}}}Ed}{{{d{Df}}{d{DdEb}}}Ed}{{{d{Dh}}{d{DdEb}}}Ed}0{{{d{Dj}}{d{DdEb}}}Ed}0{DhD`}{cc{}}000{{{d{Ef}}{d{Ch}}ee}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{D`}}{d{Ddc}}}ClEj}{{{d{Df}}{d{Ddc}}}ClEj}{{{d{Dh}}{d{Ddc}}}ClEj}{{{d{Dj}}{d{Ddc}}}ClEj}{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{EnBh}}}}}}0{{{d{El}}{d{Ad}}DjBh}{{Af{{Dn{{F`{Ab}}{F`{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dh}}}Bh}{{{d{Dj}}{d{Dh}}}{{Af{Cl}}}}{{{d{Ef}}{d{Ch}}eeD`}{{Af{Ch}}}{{Eh{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dj}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{Fb}}}}{{{d{D`}}}Bh}`{{{d{D`}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Db{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{D`Df}D`}{{D`{Al{Db}}}D`}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Ddc}}}{{d{Dde}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dde}}}Cl{}{}}{{{d{c}}}Cl{}}0{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Ddc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DdEb}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Ddc}}}ClEj}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDbBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,291],[1,"reference"],[8,"BinaryChunked",292],[10,"BinaryNameSpaceImpl",4,293],[1,"u8"],[1,"slice"],[8,"BooleanChunked",292],[10,"ChunkedSet",4,294],[8,"IdxSize",295],[5,"Series",296],[8,"PolarsResult",297],[10,"Copy",298],[17,"Item"],[6,"Option",299],[10,"IntoIterator",300],[10,"AsList",23],[8,"ListChunked",292],[10,"ListNameSpaceImpl",23,301],[1,"str"],[1,"bool"],[8,"StringChunked",292],[8,"IdxCa",302],[1,"i64"],[1,"usize"],[5,"SortOptions",303],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",304],[5,"Private",305],[1,"unit"],[10,"JoinDispatch",78,306],[5,"JoinArgs",78,307],[5,"String",308],[0,"mut"],[6,"JoinCoalesce",78,307],[6,"JoinType",78,307],[6,"JoinValidation",78,307],[10,"CrossJoin",78,309],[1,"tuple"],[8,"ChunkJoinOptIds",78,307],[5,"Formatter",310],[8,"Result",310],[10,"DataFrameJoinOps",78],[10,"AsRef",311],[10,"Hasher",312],[10,"SeriesJoin",78,313],[8,"InnerJoinIds",78,307],[5,"PrimitiveArray",314],[8,"LeftJoinIds",78,307],[6,"Result",315],[5,"TypeId",316],[10,"ArgAgg",238,317],[10,"SeriesSealed",238,318],[6,"SearchSortedSide",238,319],[10,"SeriesMethods",238,320],[5,"Error",310]],"r":[[4,291],[5,293],[6,294],[24,301],[78,307],[79,307],[82,309],[86,307],[87,307],[88,307],[89,306],[91,307],[92,307],[95,307],[101,313],[106,321],[109,321],[112,321],[144,306],[236,78],[237,74],[239,317],[242,319],[243,320],[244,318],[251,322],[252,322],[253,322],[258,323],[259,324],[275,324],[278,323],[279,323],[280,323],[281,325],[282,326],[283,327],[284,323]],"b":[[175,"impl-Display-for-JoinType"],[176,"impl-Debug-for-JoinType"],[177,"impl-Debug-for-JoinValidation"],[178,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPcAEQAAAAgACwABAA8AAgAVAA8AKQA3AGUABgBuABsAjAAoALoADADMAAEAzwAAANEAHgDxAAUA+QACAP8AEAARAQEAFwEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","check_lengths","check_lengths","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","into","into","into","is_groups_sensitive","register","register","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,22,19,21,22,19,21,19,19,19,19,21,19,21,19,19,21,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,22,19,21,19,13,22,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{{b{c}}}f{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0{{{b{c}}}f{}}000`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{ce{}{}}00{{{b{Bf}}}Bh}{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",32],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",32,121],[1,"bool"],[6,"Context",32,122],[5,"DefaultFunctionRegistry",32],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[24,127],[33,122],[36,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEsACgACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABIAPAASAFMABABdAA4A"}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[58,"polars_time::chunkedarray::string::infer"],[84,"polars_time::prelude"],[294,"polars_time::series"],[315,"chrono::naive::datetime"],[316,"polars_time::windows::duration"],[317,"polars_time::windows::group_by"],[318,"polars_core::datatypes::time_unit"],[319,"polars_arrow::legacy::time_zone"],[320,"core::option"],[321,"polars_core::chunked_array::logical::datetime"],[322,"polars_error"],[323,"polars_time::round"],[324,"polars_core::datatypes"],[325,"chrono::naive::time"],[326,"polars_core::chunked_array::logical::time"],[327,"polars_time::truncate"],[328,"polars_time::upsample"],[329,"polars_core::frame"],[330,"alloc::string"],[331,"polars_core::utils"],[332,"dyn_clone::sealed"],[333,"polars_time::chunkedarray::string::patterns"],[334,"core::fmt"],[335,"core::hash"],[336,"core::result"],[337,"core::any"],[338,"core::clone"],[339,"polars_time::windows::bounds"],[340,"polars_time::windows::window"],[341,"core::cmp"],[342,"polars_core::datatypes::dtype"],[343,"polars_core::frame::group_by::proxy"],[344,"alloc::vec"],[345,"core::ops::function"],[346,"polars_core::series"],[347,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,41,41,4,4,5,5,42,42,43,43,44,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}0{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{{{d{c}}}Bl{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{cc{}}{{{d{b}}}{{A`{Cb}}}}{{}Cd}{ce{}{}}`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}1{{{d{c}}}Cn{}}````````````````````````{{{d{c}}Bj}Bl{}}00000{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}{{d{e}}}{}{}}000000{{{d{C`c}}}{{d{C`e}}}{}{}}000000{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}{{{d{c}}{d{C`e}}}Bl{}{}}00000{{{d{c}}}Bl{}}00000000000{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",315],[5,"Duration",84,316],[6,"ClosedWindow",84,317],[6,"TimeUnit",318],[6,"Tz",319],[6,"Option",320],[8,"DatetimeChunked",321],[8,"PolarsResult",322],[1,"bool"],[10,"PolarsRound",0,323],[8,"StringChunked",324],[5,"NaiveTime",325],[8,"TimeChunked",326],[10,"PolarsTruncate",0,327],[10,"PolarsUpsample",0,328],[5,"DataFrame",329],[5,"String",330],[10,"IntoVec",331],[5,"Private",332],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,333],[1,"usize"],[5,"Formatter",334],[8,"Result",334],[10,"Hasher",335],[6,"Result",336],[5,"TypeId",337],[5,"DatetimeInfer",58],[10,"Clone",338],[10,"PolarsNumericType",324],[10,"StrpTimeParser",58],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",58],[1,"i64"],[5,"Bounds",84,339],[6,"Label",84,317],[6,"StartBy",84,317],[5,"Window",84,340],[6,"Ordering",341],[6,"DataType",342],[5,"BoundsIter",84,340],[8,"GroupsSlice",343],[8,"TimeZone",342],[5,"Vec",344],[1,"tuple"],[17,"Output"],[10,"Fn",345],[1,"u32"],[10,"AsSeries",294],[5,"Series",346],[10,"TemporalMethods",294],[8,"Int32Chunked",324],[8,"Int8Chunked",324],[8,"BooleanChunked",324],[8,"Int16Chunked",324]],"r":[[1,317],[2,316],[5,323],[6,327],[7,328],[9,340],[11,347],[12,347],[18,347],[22,24],[30,333],[85,339],[86,340],[87,317],[90,316],[92,317],[100,317],[102,294],[106,340],[181,316],[182,316],[216,317],[217,317]],"b":[[200,"impl-Display-for-Duration"],[201,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAEBFwAAAAkADQAFABQAAAAXABkAMgACADYAEQBJAAEATAATAGEACQBsAGEA1QAAANcAAQDbAAoA7QABAPEAAgD1AAAA+AACAPwAAQABAQgACwEAAA0BAAAPARoALgEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMFNNNNNNNNNNNNNNNNNHHHHFKNNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKKKRKRNNNNMMMHHKNNNNMMFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","foreign_vec","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","ForeignVec","borrow","borrow_mut","deref","deref","deref_mut","drop","drop","fmt","from","from","from_foreign","get_vec","init","into","try_from","try_into","type_id","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","_limit_path_len_io_err","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","MemReader","MemSlice","Mmap","MmapSlice","advise","advise_range","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_mmap","from_reader","from_slice","from_slice","from_vec","from_vec","init","init","init","init","into","into","into","into","lock","make_mut","map","new","new","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","slice","to_owned","to_owned","to_owned","to_vec","total_len","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[66,"polars_utils::arena"],[130,"polars_utils::atomic"],[151,"polars_utils::binary_search"],[153,"polars_utils::cache"],[190,"polars_utils::cell"],[210,"polars_utils::clmul"],[214,"polars_utils::contention_pool"],[229,"polars_utils::cpuid"],[231,"polars_utils::fixedringbuffer"],[254,"polars_utils::float"],[260,"polars_utils::floor_divmod"],[262,"polars_utils::foreign_vec"],[280,"polars_utils::functions"],[284,"polars_utils::hashing"],[318,"polars_utils::idx_vec"],[363,"polars_utils::index"],[429,"polars_utils::io"],[432,"polars_utils::iter"],[445,"polars_utils::mem"],[447,"polars_utils::min_max"],[454,"polars_utils::mmap"],[548,"polars_utils::nulls"],[553,"polars_utils::ord"],[555,"polars_utils::partitioned"],[574,"polars_utils::priority"],[599,"polars_utils::slice"],[613,"polars_utils::sort"],[615,"polars_utils::sync"],[640,"polars_utils::sys"],[654,"polars_utils::total_ord"],[706,"polars_utils::unwrap"],[708,"polars_utils::vec"],[721,"num_traits"],[722,"core::cmp"],[723,"core::marker"],[724,"core::fmt"],[725,"core::clone"],[726,"core::option"],[727,"core::hash"],[728,"core::default"],[729,"core::ops::function"],[730,"core::result"],[731,"core::any"],[732,"core::borrow"],[733,"alloc::vec"],[734,"alloc::sync"],[735,"core::convert"],[736,"core::ops::range"],[737,"core::iter::traits::collect"],[738,"polars_utils::iter::fallible"],[739,"core::slice::iter"],[740,"polars_error"],[741,"std::path"],[742,"std::io::error"],[743,"std::fs"],[744,"polars_utils::iter::enumerate_idx"],[745,"core::error"],[746,"core::iter::traits::iterator"],[747,"memmap2"],[748,"memmap2::advice"],[749,"std::io"],[750,"hashbrown::map"],[751,"core::mem::maybe_uninit"],[752,"core::slice::index"],[753,"num_traits::cast"],[754,"rayon_core::thread_pool"]],"if":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}00{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{Edc{}}{cc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}?{{{Al{{Eh{c}}}}}cCb}=<{Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb};;:{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}98{{{Al{{Ej{c}}}}}Ab{}}87{{{Al{Ah{Ej{c}}}}}B`{}}7{{{Al{Ah{Ej{c}}}}cAb}Abj}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}06{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}9{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`=={{{Al{En}}}Bf}>0`{{F`F`}{{El{F`F`}}}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fb{ce}}}}}{{Al{{Db{e}}}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Fb{ce}}}}}B`{}{}}{{{Al{{Fb{ce}}}}{Al{AhBh}}}Bj{}l}{{{Fd{c}}}{{Fb{ec}}}{}{}}{cc{}}{{Abc}{{Fb{ce}}}{}{}}{{{Al{Ah{Fb{ce}}}}}{{Bn{{Al{Ah{Fd{e}}}}}}}{}{}}{{}Ab}{ce{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Ff{c}}e}{{Ff{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Fh{{Db{c}}}}}}{{AbAb{Fj{Ab}}}{{Fj{Ab}}}}{{{Ff{c}}g}{{Ch{{Ff{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fl}}}Fl}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fn}}}Ef}{{{Al{Fl}}}Ef}{AbB`}{{{Al{Fl}}{Al{Fl}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fl}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fl}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fl}}}Bf}{{{Bn{{Al{{Db{G`}}}}}}Ef}Fl}2{{{Al{c}}}e{}{}}{{{Al{Fl}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Flc{}}``{{{Al{Ah{Gb{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Gb{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Gb{c}}}}}Ab{}}{{{Al{{Gb{c}}}}}{{Gb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}{{}{{Gb{c}}}{}}{Ab{{Al{c}}}{}}{{{Al{{Gb{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{Gb{c}}}}}B`{}}{{{Al{{Gb{c}}}}{Al{{Gb{c}}}}}BfGd}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Gb{c}}}}e}B`{}{{Gh{}{{Gf{c}}}}}}{{{Al{{Gb{c}}}}{Al{AhBh}}}Bjl}{{{Al{{Db{c}}}}}{{Gb{c}}}Bb}{{{Fd{c}}}{{Gb{c}}}{}}{cc{}}{g{{Ch{ic}}}{}{}{{Gj{c}{{Gf{e}}}}}{}}{e{{Gb{c}}}{}{{Gh{}{{Gf{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Gb{c}}}}}Bf{}}{{{Al{{Gb{c}}}}}{{Gl{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Gn{c}}}{}}{{{Al{{Gb{c}}}}}Ab{}}{{}{{Gb{c}}}{}}{{{Al{Ah{Gb{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Gb{c}}}}c}B`{}}0{{{Al{Ah{Gb{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Gb{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{H`}}}}H`}{{Hb{B`}}}}{{{Al{Hd}}}Hd}{{{Al{Hf}}}Hf}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{c}}}B`{}}000{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hd}}{Al{Hd}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hf{{El{H`H`}}}}{{{Al{Hd}}{Al{AhBh}}}Bj}{{{Al{Hf}}{Al{AhBh}}}Bj}{cc{}}{H`Hd}1{{{Al{{Hh{}{{Gf{c}}}}}}Ab}cHj}0{{{Al{Hd}}}H`}{{}Ab}0`{{{Al{AhHf}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hl}}}Bf}{{{Al{Hf}}}Bf}{{{Al{Hd}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hl}}}Ab}{{}Hd}{{}Hf}{{{Al{Hn}}}Ab}{{H`H`}Hf}{{I`Ef}H`}{{{Al{Hd}}}{{Bn{H`}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{{{Al{Ib}}Id}If}{c{{Hb{Ih}}}{{Fh{Ib}}}}0``````{Ij{{`{IjH`}}}}0{Ij{{`{IjCn}}}}0{g{{Ch{Ilc}}}In{}{{Gj{c}{{Gf{e}}}}}}{{{Al{AhGj}}}{{Ch{B`c}}}In}{{{Jd{}{{J`{c}}{Jb{e}}}}}e{}{{Jf{}{{Gf{c}}}}}}{G`B`}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JhJh}Jh}000{{{Al{Jh}}{Al{Jh}}}Bf}0````{{{Al{Jj}}Jl}{{Ch{B`Id}}}}{{{Al{Jj}}JlAbAb}{{Ch{B`Id}}}}{{{Al{Jj}}}{{Al{{Db{G`}}}}}}{{{Al{c}}}{{Al{e}}}{}{}}000{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}000{{{Al{Jn}}}Jn}{{{Al{K`}}}K`}{{{Al{Kb}}}Kb}{{{Al{c}}{Al{Ahe}}}B`{}{}}00{{{Al{c}}}B`{}}00{{}Kb}8{Ab{{Al{c}}}{}}0{{{Al{Jn}}}{{Al{c}}}{}}11{{{Al{Kb}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}000{AbB`}000{{{Al{Jj}}{Al{AhBh}}}{{Ch{B`Kd}}}}{{{Al{Jn}}{Al{AhBh}}}Bj}{{{Al{K`}}{Al{AhBh}}}Bj}{{{Al{Kb}}{Al{AhBh}}}Bj}{cc{}}000{JnKb}{c{{Kf{K`}}}Kh}{{{Al{{Db{G`}}}}}K`}{{{Al{{Db{G`}}}}}Kb}{{{Fd{G`}}}K`}{{{Fd{G`}}}Kb}{{}Ab}000{ce{}{}}000{{{Al{Jj}}}{{Ch{B`Id}}}}{Jj{{Ch{KjId}}}}{c{{Ch{JjId}}}Kl}{JjJn}{KbK`}{{{Al{K`}}}Ab}{{{Al{Kb}}}B`}{{{Al{AhK`}}{Al{Ah{Db{G`}}}}}{{Kf{Ab}}}}{{{Al{AhK`}}Ab}Kb}3{{{Al{AhJj}}AbKn}{{Ch{B`Id}}}}{{{Al{AhK`}}L`}{{Kf{Ef}}}}{{{Al{Jn}}AbAb}Jn}{{{Al{Kb}}AbAb}Kb}{{{Al{c}}}e{}{}}00{Kb{{Fd{G`}}}}9{c{{Ch{e}}}{}{}}0000000{{{Al{c}}}Cl{}}000{{{Al{Jj}}}{{Ch{B`Id}}}}```{{{Al{{Hj{}{{Lb{c}}}}}}}Bf{}}{{{Hj{}{{Lb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Ld{ceg}}}}}{{Al{{Db{{Lf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}}{{Al{Ah{Fd{{Lf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Lf{ceg}}}}}{{Ld{ceg}}}{}{}{}}{{{Al{{Ld{ceg}}}}Ef}{{Lh{ceg}}}{}{}{}}{{{Al{{Ld{ceg}}}}Ef}{{El{{Lh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}Ef}{{El{{Lj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Ld{ceg}}}}Ef}{{Lj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Ll{ce}}}}}{{Ll{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}Bd{DdDj}{}}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}BfDj{}}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{{Ll{ce}}}}{Al{AhBh}}}Bjll}{cc{}}{{}Ab}{ce{}{}}{{{Al{{Ll{ce}}}}{Al{{Ll{ce}}}}}{{Bn{Bd}}}{DdDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Ln}}}{{Al{{Db{{M`{c}}}}}}}{}}{{{Al{Mb}}e}Al{}{{Md{{Db{c}}}}}}{{{Al{AhMb}}e}{{Al{Ah}}}{}{{Md{{Db{c}}}}}}{{{Al{Mf}}}Bf}{{{Al{{Db{G`}}}}}Ef}{{{Al{Mh}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Mj}}{Fj{Ab}}}Mj}0{{e{Al{Ah{Fd{G`}}}}Ab}{{Al{Ah{Db{g}}}}}{Mlj}{{Gh{}{{Gf{c}}}}}{Mnj}}{{{Al{N`}}{Al{{Db{{El{H`H`}}}}}}{Al{Ah{Fd{H`}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Nb{c}}}}}{{Nb{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nb{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Nb{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Nb{c}}}{}}0{{{Al{{Nb{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Nb{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Nd}}}Ef};87443```````21{NfNf}{NhNh}{{{Al{{Nj{c}}}}}{{Nj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{c}}}B`{}}0{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BdMl}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Nj{c}}}}}EfFn}{AbB`}{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BfNl}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}BfMl}0{{{Al{{Nj{c}}}}{Al{Ahe}}}B`NnC`}{{}Ab}{ce{}{}}{{{Al{{Nj{c}}}}}BfHj}447{{{Al{{Nj{c}}}}{Al{{Nj{c}}}}}{{Bn{Bd}}}Ml}2{{{Al{c}}}e{}{}}{{{Al{{Od{}{{O`{c}}{Ob{e}}}}}}}c{}{}}{{{Al{Ml}}{Al{Ml}}}Bd}{{{Al{Nl}}{Al{Nl}}}Bf}{{{Al{Ml}}{Al{Ml}}}Bf}0{{{Al{Nn}}{Al{Ahc}}}B`C`}{{{Al{{Db{Nn}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Nj{c}}}eHj{}}`{Ofc{}}``````{{{Al{{Oj{}{{Oh{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Oj{}{{Oh{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhOl}}Abc}B`j}{On{{El{AbAb}}}}{{{Al{AhA@`}}c}B`{}}{{{Al{On}}}{{El{AbAb}}}}{{AbNh}A@b}","D":"Mn","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",721],[10,"PartialOrd",722],[10,"Copy",723],[10,"Debug",724],[10,"Send",723],[10,"Sync",723],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",66],[1,"reference"],[5,"Node",66],[1,"unit"],[10,"Clone",725],[6,"Ordering",722],[1,"bool"],[5,"Formatter",724],[8,"Result",724],[1,"array"],[6,"Option",726],[10,"Hasher",727],[10,"Default",728],[17,"Output"],[10,"FnOnce",729],[6,"Result",730],[10,"FnMut",729],[5,"TypeId",731],[1,"u32"],[5,"SyncCounter",130],[1,"slice"],[10,"Ord",722],[5,"FastFixedCache",153],[10,"Hash",727],[10,"Eq",722],[5,"FastCachedFunc",153],[10,"Sized",723],[10,"Borrow",732],[5,"SyncUnsafeCell",190],[1,"never"],[1,"u64"],[5,"LowContentionPool",214],[5,"FixedRingBuffer",231],[1,"tuple"],[10,"IsFloat",254],[10,"FloorDivMod",260],[5,"ForeignVec",262],[5,"Vec",733],[5,"Arc",734],[10,"AsRef",735],[5,"Range",736],[5,"BytesHash",284],[10,"DirtyHash",284],[1,"u8"],[5,"UnitVec",318],[10,"PartialEq",722],[17,"Item"],[10,"IntoIterator",737],[10,"FallibleIterator",432,738],[5,"Iter",739],[5,"IterMut",739],[8,"IdxSize",363],[8,"PolarsResult",740],[5,"NullableIdxSize",363],[5,"ChunkId",363],[10,"Indexable",363],[10,"IsNull",548],[10,"Bounded",363],[10,"NullCount",363],[10,"ToIdx",363],[5,"Path",741],[5,"Error",742],[6,"PolarsError",740],[5,"File",743],[10,"EnumerateIdxTrait",432,744],[10,"FromFallibleIterator",432,738],[10,"Error",745],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",432],[10,"Iterator",746],[10,"MinMax",447],[5,"Mmap",454,747],[6,"Advice",748],[5,"MmapSlice",454],[5,"MemReader",454],[5,"MemSlice",454],[5,"Error",724],[8,"Result",742],[10,"Read",749],[5,"MmapMut",747],[10,"MmapAsRawDesc",747],[5,"RemapOptions",747],[6,"SeekFrom",749],[17,"Inner"],[5,"PartitionedHashMap",555],[5,"HashMap",750],[5,"RawEntryBuilder",750],[5,"RawEntryBuilderMut",750],[5,"Priority",574],[10,"Slice2Uninit",599],[20,"MaybeUninit",751],[10,"GetSaferUnchecked",599],[10,"SliceIndex",752],[10,"SortedSlice",599],[10,"Extrema",599],[10,"SliceAble",599],[10,"TotalOrd",654],[10,"FromPrimitive",753],[5,"ThreadPool",754],[5,"SyncPtr",615],[5,"MemInfo",640],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",654],[10,"TotalEq",654],[10,"TotalHash",654],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",654],[10,"UnwrapUncheckedRelease",706],[17,"ItemIn"],[10,"ConvertVec",708],[10,"ResizeFaster",708],[10,"IntoRawParts",708],[10,"PushUnchecked",708],[10,"CapacityByFactor",708],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,363],[1,363],[432,744],[433,738],[434,738],[456,747]],"b":[[342,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[343,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGICRwAAAAgACgBYAGUAAABnAAEAagACAG8AEwCEAAoAkAAAAJMABACbAA8ArQAFALUACQDAAAEAwwACAMcAAADLAAAA0AAMAN4AAQDhAAYA6gAGAPMAAAD1AAMA+wADAAABBgAIAQgAFAEAABYBBgAeARAAMAECADQBCwBBARcAWgECAF4BBgBmASgAkAEAAJIBAACUAQQAmwEYALUBAAC3AQYAwAEGAM0BJQD3AQkACAICAAwCAgAQAgAAEgIRACUCBAAsAgUAMwICADcCBwBAAg8AUQIAAFMCCgBgAgQAZgIAAGkCBwByAgEAdQIDAHoCAAB8AgUAgwIEAIoCAACMAgMAlAIDAJoCDQCpAgMArgIVAMUCBADLAgMA0AIBAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
